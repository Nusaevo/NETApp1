/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/forms/select2.js":
/*!************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/forms/select2.js ***!
  \************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTFormsSelect2Demo = function () {\n  // Private functions\n  var exampleCountry = function exampleCountry() {\n    // Format options\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var imgUrl = item.element.getAttribute('data-kt-select2-country');\n      var template = '';\n      template += '<img src=\"' + imgUrl + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_docs_select2_country').select2({\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  var exampleUsers = function exampleUsers() {\n    // Format options\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var imgUrl = item.element.getAttribute('data-kt-select2-user');\n      var template = '';\n      template += '<img src=\"' + imgUrl + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_docs_select2_users').select2({\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  var exampleFloatingLabels1 = function exampleFloatingLabels1() {\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var template = '';\n      template += '<img src=\"' + item.element.getAttribute('data-kt-select2-image') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_docs_select2_floating_labels_1').select2({\n      placeholder: \"Select coin\",\n      minimumResultsForSearch: Infinity,\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  var exampleFloatingLabels2 = function exampleFloatingLabels2() {\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var template = '';\n      template += '<img src=\"' + item.element.getAttribute('data-kt-select2-image') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_docs_select2_floating_labels_2').select2({\n      placeholder: \"Select coin\",\n      minimumResultsForSearch: Infinity,\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  var exampleRichContent = function exampleRichContent() {\n    // Format options\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var template = '';\n      template += '<div class=\"d-flex align-items-center\">';\n      template += '<img src=\"' + item.element.getAttribute('data-kt-rich-content-icon') + '\" class=\"rounded-circle h-40px me-3\" alt=\"' + item.text + '\"/>';\n      template += '<div class=\"d-flex flex-column\">';\n      template += '<span class=\"fs-4 fw-bolder lh-1\">' + item.text + '</span>';\n      template += '<span class=\"text-muted fs-7\">' + item.element.getAttribute('data-kt-rich-content-subcontent') + '</span>';\n      template += '</div>';\n      template += '</div>';\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_docs_select2_rich_content').select2({\n      placeholder: \"Select an option\",\n      minimumResultsForSearch: Infinity,\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleCountry();\n      exampleUsers();\n      exampleFloatingLabels1();\n      exampleFloatingLabels2();\n      exampleRichContent();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTFormsSelect2Demo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/forms/select2.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/forms/select2.js":
/*!*************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/forms/select2.js ***!
  \*************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/forms/select2.js\": (\n    /*!************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/forms/select2.js ***!\n      \\************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationFormsSelect2Js() {\n      eval(\" // Class definition\\n\\nvar KTFormsSelect2Demo = function () {\\n  // Private functions\\n  var exampleCountry = function exampleCountry() {\\n    // Format options\\n    var optionFormat = function optionFormat(item) {\\n      if (!item.id) {\\n        return item.text;\\n      }\\n\\n      var span = document.createElement('span');\\n      var imgUrl = item.element.getAttribute('data-kt-select2-country');\\n      var template = '';\\n      template += '<img src=\\\"' + imgUrl + '\\\" class=\\\"rounded-circle h-20px me-2\\\" alt=\\\"image\\\"/>';\\n      template += item.text;\\n      span.innerHTML = template;\\n      return $(span);\\n    }; // Init Select2 --- more info: https://select2.org/\\n\\n\\n    $('#kt_docs_select2_country').select2({\\n      templateSelection: optionFormat,\\n      templateResult: optionFormat\\n    });\\n  };\\n\\n  var exampleUsers = function exampleUsers() {\\n    // Format options\\n    var optionFormat = function optionFormat(item) {\\n      if (!item.id) {\\n        return item.text;\\n      }\\n\\n      var span = document.createElement('span');\\n      var imgUrl = item.element.getAttribute('data-kt-select2-user');\\n      var template = '';\\n      template += '<img src=\\\"' + imgUrl + '\\\" class=\\\"rounded-circle h-20px me-2\\\" alt=\\\"image\\\"/>';\\n      template += item.text;\\n      span.innerHTML = template;\\n      return $(span);\\n    }; // Init Select2 --- more info: https://select2.org/\\n\\n\\n    $('#kt_docs_select2_users').select2({\\n      templateSelection: optionFormat,\\n      templateResult: optionFormat\\n    });\\n  };\\n\\n  var exampleFloatingLabels1 = function exampleFloatingLabels1() {\\n    var optionFormat = function optionFormat(item) {\\n      if (!item.id) {\\n        return item.text;\\n      }\\n\\n      var span = document.createElement('span');\\n      var template = '';\\n      template += '<img src=\\\"' + item.element.getAttribute('data-kt-select2-image') + '\\\" class=\\\"rounded-circle h-20px me-2\\\" alt=\\\"image\\\"/>';\\n      template += item.text;\\n      span.innerHTML = template;\\n      return $(span);\\n    }; // Init Select2 --- more info: https://select2.org/\\n\\n\\n    $('#kt_docs_select2_floating_labels_1').select2({\\n      placeholder: \\\"Select coin\\\",\\n      minimumResultsForSearch: Infinity,\\n      templateSelection: optionFormat,\\n      templateResult: optionFormat\\n    });\\n  };\\n\\n  var exampleFloatingLabels2 = function exampleFloatingLabels2() {\\n    var optionFormat = function optionFormat(item) {\\n      if (!item.id) {\\n        return item.text;\\n      }\\n\\n      var span = document.createElement('span');\\n      var template = '';\\n      template += '<img src=\\\"' + item.element.getAttribute('data-kt-select2-image') + '\\\" class=\\\"rounded-circle h-20px me-2\\\" alt=\\\"image\\\"/>';\\n      template += item.text;\\n      span.innerHTML = template;\\n      return $(span);\\n    }; // Init Select2 --- more info: https://select2.org/\\n\\n\\n    $('#kt_docs_select2_floating_labels_2').select2({\\n      placeholder: \\\"Select coin\\\",\\n      minimumResultsForSearch: Infinity,\\n      templateSelection: optionFormat,\\n      templateResult: optionFormat\\n    });\\n  };\\n\\n  var exampleRichContent = function exampleRichContent() {\\n    // Format options\\n    var optionFormat = function optionFormat(item) {\\n      if (!item.id) {\\n        return item.text;\\n      }\\n\\n      var span = document.createElement('span');\\n      var template = '';\\n      template += '<div class=\\\"d-flex align-items-center\\\">';\\n      template += '<img src=\\\"' + item.element.getAttribute('data-kt-rich-content-icon') + '\\\" class=\\\"rounded-circle h-40px me-3\\\" alt=\\\"' + item.text + '\\\"/>';\\n      template += '<div class=\\\"d-flex flex-column\\\">';\\n      template += '<span class=\\\"fs-4 fw-bolder lh-1\\\">' + item.text + '</span>';\\n      template += '<span class=\\\"text-muted fs-7\\\">' + item.element.getAttribute('data-kt-rich-content-subcontent') + '</span>';\\n      template += '</div>';\\n      template += '</div>';\\n      span.innerHTML = template;\\n      return $(span);\\n    }; // Init Select2 --- more info: https://select2.org/\\n\\n\\n    $('#kt_docs_select2_rich_content').select2({\\n      placeholder: \\\"Select an option\\\",\\n      minimumResultsForSearch: Infinity,\\n      templateSelection: optionFormat,\\n      templateResult: optionFormat\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleCountry();\\n      exampleUsers();\\n      exampleFloatingLabels1();\\n      exampleFloatingLabels2();\\n      exampleRichContent();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTFormsSelect2Demo.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/forms/select2.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/forms/select2.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/forms/select2.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/forms/select2.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/forms/select2.js"]();
/******/ 	
/******/ })()
;