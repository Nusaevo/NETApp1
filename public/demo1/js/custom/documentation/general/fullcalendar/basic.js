/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js":
/*!*************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js ***!
  \*************************************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTGeneralFullCalendarBasicDemos = function () {\n  // Private functions\n  var exampleBasic = function exampleBasic() {\n    var todayDate = moment().startOf('day');\n    var YM = todayDate.format('YYYY-MM');\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\n    var TODAY = todayDate.format('YYYY-MM-DD');\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_basic');\n    var calendar = new FullCalendar.Calendar(calendarEl, {\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n      },\n      height: 800,\n      contentHeight: 780,\n      aspectRatio: 3,\n      // see: https://fullcalendar.io/docs/aspectRatio\n      nowIndicator: true,\n      now: TODAY + 'T09:25:00',\n      // just for demo\n      views: {\n        dayGridMonth: {\n          buttonText: 'month'\n        },\n        timeGridWeek: {\n          buttonText: 'week'\n        },\n        timeGridDay: {\n          buttonText: 'day'\n        }\n      },\n      initialView: 'dayGridMonth',\n      initialDate: TODAY,\n      editable: true,\n      dayMaxEvents: true,\n      // allow \"more\" link when too many events\n      navLinks: true,\n      events: [{\n        title: 'All Day Event',\n        start: YM + '-01',\n        description: 'Toto lorem ipsum dolor sit incid idunt ut',\n        className: \"fc-event-danger fc-event-solid-warning\"\n      }, {\n        title: 'Reporting',\n        start: YM + '-14T13:30:00',\n        description: 'Lorem ipsum dolor incid idunt ut labore',\n        end: YM + '-14',\n        className: \"fc-event-success\"\n      }, {\n        title: 'Company Trip',\n        start: YM + '-02',\n        description: 'Lorem ipsum dolor sit tempor incid',\n        end: YM + '-03',\n        className: \"fc-event-primary\"\n      }, {\n        title: 'ICT Expo 2017 - Product Release',\n        start: YM + '-03',\n        description: 'Lorem ipsum dolor sit tempor inci',\n        end: YM + '-05',\n        className: \"fc-event-light fc-event-solid-primary\"\n      }, {\n        title: 'Dinner',\n        start: YM + '-12',\n        description: 'Lorem ipsum dolor sit amet, conse ctetur',\n        end: YM + '-10'\n      }, {\n        id: 999,\n        title: 'Repeating Event',\n        start: YM + '-09T16:00:00',\n        description: 'Lorem ipsum dolor sit ncididunt ut labore',\n        className: \"fc-event-danger\"\n      }, {\n        id: 1000,\n        title: 'Repeating Event',\n        description: 'Lorem ipsum dolor sit amet, labore',\n        start: YM + '-16T16:00:00'\n      }, {\n        title: 'Conference',\n        start: YESTERDAY,\n        end: TOMORROW,\n        description: 'Lorem ipsum dolor eius mod tempor labore',\n        className: \"fc-event-primary\"\n      }, {\n        title: 'Meeting',\n        start: TODAY + 'T10:30:00',\n        end: TODAY + 'T12:30:00',\n        description: 'Lorem ipsum dolor eiu idunt ut labore'\n      }, {\n        title: 'Lunch',\n        start: TODAY + 'T12:00:00',\n        className: \"fc-event-info\",\n        description: 'Lorem ipsum dolor sit amet, ut labore'\n      }, {\n        title: 'Meeting',\n        start: TODAY + 'T14:30:00',\n        className: \"fc-event-warning\",\n        description: 'Lorem ipsum conse ctetur adipi scing'\n      }, {\n        title: 'Happy Hour',\n        start: TODAY + 'T17:30:00',\n        className: \"fc-event-info\",\n        description: 'Lorem ipsum dolor sit amet, conse ctetur'\n      }, {\n        title: 'Dinner',\n        start: TOMORROW + 'T05:00:00',\n        className: \"fc-event-solid-danger fc-event-light\",\n        description: 'Lorem ipsum dolor sit ctetur adipi scing'\n      }, {\n        title: 'Birthday Party',\n        start: TOMORROW + 'T07:00:00',\n        className: \"fc-event-primary\",\n        description: 'Lorem ipsum dolor sit amet, scing'\n      }, {\n        title: 'Click for Google',\n        url: 'http://google.com/',\n        start: YM + '-28',\n        className: \"fc-event-solid-info fc-event-light\",\n        description: 'Lorem ipsum dolor sit amet, labore'\n      }],\n      eventContent: function eventContent(info) {\n        var element = $(info.el);\n\n        if (info.event.extendedProps && info.event.extendedProps.description) {\n          if (element.hasClass('fc-day-grid-event')) {\n            element.data('content', info.event.extendedProps.description);\n            element.data('placement', 'top');\n            KTApp.initPopover(element);\n          } else if (element.hasClass('fc-time-grid-event')) {\n            element.find('.fc-title').append('<div class=\"fc-description\">' + info.event.extendedProps.description + '</div>');\n          } else if (element.find('.fc-list-item-title').lenght !== 0) {\n            element.find('.fc-list-item-title').append('<div class=\"fc-description\">' + info.event.extendedProps.description + '</div>');\n          }\n        }\n      }\n    });\n    calendar.render();\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      exampleBasic();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralFullCalendarBasicDemos.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/fullcalendar/basic.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/fullcalendar/basic.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js\":\n    /*!*************************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js ***!\r\n      \\*************************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralFullcalendarBasicJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralFullCalendarBasicDemos = function () {\\n  // Private functions\\n  var exampleBasic = function exampleBasic() {\\n    var todayDate = moment().startOf('day');\\n    var YM = todayDate.format('YYYY-MM');\\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\\n    var TODAY = todayDate.format('YYYY-MM-DD');\\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_basic');\\n    var calendar = new FullCalendar.Calendar(calendarEl, {\\n      headerToolbar: {\\n        left: 'prev,next today',\\n        center: 'title',\\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\\n      },\\n      height: 800,\\n      contentHeight: 780,\\n      aspectRatio: 3,\\n      // see: https://fullcalendar.io/docs/aspectRatio\\n      nowIndicator: true,\\n      now: TODAY + 'T09:25:00',\\n      // just for demo\\n      views: {\\n        dayGridMonth: {\\n          buttonText: 'month'\\n        },\\n        timeGridWeek: {\\n          buttonText: 'week'\\n        },\\n        timeGridDay: {\\n          buttonText: 'day'\\n        }\\n      },\\n      initialView: 'dayGridMonth',\\n      initialDate: TODAY,\\n      editable: true,\\n      dayMaxEvents: true,\\n      // allow \\\"more\\\" link when too many events\\n      navLinks: true,\\n      events: [{\\n        title: 'All Day Event',\\n        start: YM + '-01',\\n        description: 'Toto lorem ipsum dolor sit incid idunt ut',\\n        className: \\\"fc-event-danger fc-event-solid-warning\\\"\\n      }, {\\n        title: 'Reporting',\\n        start: YM + '-14T13:30:00',\\n        description: 'Lorem ipsum dolor incid idunt ut labore',\\n        end: YM + '-14',\\n        className: \\\"fc-event-success\\\"\\n      }, {\\n        title: 'Company Trip',\\n        start: YM + '-02',\\n        description: 'Lorem ipsum dolor sit tempor incid',\\n        end: YM + '-03',\\n        className: \\\"fc-event-primary\\\"\\n      }, {\\n        title: 'ICT Expo 2017 - Product Release',\\n        start: YM + '-03',\\n        description: 'Lorem ipsum dolor sit tempor inci',\\n        end: YM + '-05',\\n        className: \\\"fc-event-light fc-event-solid-primary\\\"\\n      }, {\\n        title: 'Dinner',\\n        start: YM + '-12',\\n        description: 'Lorem ipsum dolor sit amet, conse ctetur',\\n        end: YM + '-10'\\n      }, {\\n        id: 999,\\n        title: 'Repeating Event',\\n        start: YM + '-09T16:00:00',\\n        description: 'Lorem ipsum dolor sit ncididunt ut labore',\\n        className: \\\"fc-event-danger\\\"\\n      }, {\\n        id: 1000,\\n        title: 'Repeating Event',\\n        description: 'Lorem ipsum dolor sit amet, labore',\\n        start: YM + '-16T16:00:00'\\n      }, {\\n        title: 'Conference',\\n        start: YESTERDAY,\\n        end: TOMORROW,\\n        description: 'Lorem ipsum dolor eius mod tempor labore',\\n        className: \\\"fc-event-primary\\\"\\n      }, {\\n        title: 'Meeting',\\n        start: TODAY + 'T10:30:00',\\n        end: TODAY + 'T12:30:00',\\n        description: 'Lorem ipsum dolor eiu idunt ut labore'\\n      }, {\\n        title: 'Lunch',\\n        start: TODAY + 'T12:00:00',\\n        className: \\\"fc-event-info\\\",\\n        description: 'Lorem ipsum dolor sit amet, ut labore'\\n      }, {\\n        title: 'Meeting',\\n        start: TODAY + 'T14:30:00',\\n        className: \\\"fc-event-warning\\\",\\n        description: 'Lorem ipsum conse ctetur adipi scing'\\n      }, {\\n        title: 'Happy Hour',\\n        start: TODAY + 'T17:30:00',\\n        className: \\\"fc-event-info\\\",\\n        description: 'Lorem ipsum dolor sit amet, conse ctetur'\\n      }, {\\n        title: 'Dinner',\\n        start: TOMORROW + 'T05:00:00',\\n        className: \\\"fc-event-solid-danger fc-event-light\\\",\\n        description: 'Lorem ipsum dolor sit ctetur adipi scing'\\n      }, {\\n        title: 'Birthday Party',\\n        start: TOMORROW + 'T07:00:00',\\n        className: \\\"fc-event-primary\\\",\\n        description: 'Lorem ipsum dolor sit amet, scing'\\n      }, {\\n        title: 'Click for Google',\\n        url: 'http://google.com/',\\n        start: YM + '-28',\\n        className: \\\"fc-event-solid-info fc-event-light\\\",\\n        description: 'Lorem ipsum dolor sit amet, labore'\\n      }],\\n      eventContent: function eventContent(info) {\\n        var element = $(info.el);\\n\\n        if (info.event.extendedProps && info.event.extendedProps.description) {\\n          if (element.hasClass('fc-day-grid-event')) {\\n            element.data('content', info.event.extendedProps.description);\\n            element.data('placement', 'top');\\n            KTApp.initPopover(element);\\n          } else if (element.hasClass('fc-time-grid-event')) {\\n            element.find('.fc-title').append('<div class=\\\"fc-description\\\">' + info.event.extendedProps.description + '</div>');\\n          } else if (element.find('.fc-list-item-title').lenght !== 0) {\\n            element.find('.fc-list-item-title').append('<div class=\\\"fc-description\\\">' + info.event.extendedProps.description + '</div>');\\n          }\\n        }\\n      }\\n    });\\n    calendar.render();\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleBasic();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralFullCalendarBasicDemos.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/fullcalendar/basic.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/fullcalendar/basic.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/fullcalendar/basic.js"]();
/******/ 	
/******/ })()
;