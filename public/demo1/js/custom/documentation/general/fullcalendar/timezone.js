/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js":
/*!****************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js ***!
  \****************************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTGeneralFullCalendarTimezoneDemos = function () {\n  // Private functions\n\n  var exampleTimezone = function exampleTimezone() {\n    // Define variables\n    var initialTimeZone = 'local';\n    var timeZoneSelectorEl = document.getElementById('kt_docs_fullcalendar_timezone_selector');\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_timezone');\n    var todayDate = moment().startOf('day');\n    var YM = todayDate.format('YYYY-MM');\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\n    var TODAY = todayDate.format('YYYY-MM-DD');\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\n    var eventsArray = [{\n      title: 'All Day Event',\n      start: YM + '-01',\n      description: 'Toto lorem ipsum dolor sit incid idunt ut',\n      className: \"fc-event-danger fc-event-solid-warning\"\n    }, {\n      title: 'Reporting',\n      start: YM + '-14T13:30:00',\n      description: 'Lorem ipsum dolor incid idunt ut labore',\n      end: YM + '-14',\n      className: \"fc-event-success\"\n    }, {\n      title: 'Company Trip',\n      start: YM + '-02',\n      description: 'Lorem ipsum dolor sit tempor incid',\n      end: YM + '-03',\n      className: \"fc-event-primary\"\n    }, {\n      title: 'ICT Expo 2017 - Product Release',\n      start: YM + '-03',\n      description: 'Lorem ipsum dolor sit tempor inci',\n      end: YM + '-05',\n      className: \"fc-event-light fc-event-solid-primary\"\n    }, {\n      title: 'Dinner',\n      start: YM + '-12',\n      description: 'Lorem ipsum dolor sit amet, conse ctetur',\n      end: YM + '-10'\n    }, {\n      id: 999,\n      title: 'Repeating Event',\n      start: YM + '-09T16:00:00',\n      description: 'Lorem ipsum dolor sit ncididunt ut labore',\n      className: \"fc-event-danger\"\n    }, {\n      id: 1000,\n      title: 'Repeating Event',\n      description: 'Lorem ipsum dolor sit amet, labore',\n      start: YM + '-16T16:00:00'\n    }, {\n      title: 'Conference',\n      start: YESTERDAY,\n      end: TOMORROW,\n      description: 'Lorem ipsum dolor eius mod tempor labore',\n      className: \"fc-event-primary\"\n    }, {\n      title: 'Meeting',\n      start: TODAY + 'T10:30:00',\n      end: TODAY + 'T12:30:00',\n      description: 'Lorem ipsum dolor eiu idunt ut labore'\n    }, {\n      title: 'Lunch',\n      start: TODAY + 'T12:00:00',\n      className: \"fc-event-info\",\n      description: 'Lorem ipsum dolor sit amet, ut labore'\n    }, {\n      title: 'Meeting',\n      start: TODAY + 'T14:30:00',\n      className: \"fc-event-warning\",\n      description: 'Lorem ipsum conse ctetur adipi scing'\n    }, {\n      title: 'Happy Hour',\n      start: TODAY + 'T17:30:00',\n      className: \"fc-event-info\",\n      description: 'Lorem ipsum dolor sit amet, conse ctetur'\n    }, {\n      title: 'Dinner',\n      start: TOMORROW + 'T05:00:00',\n      className: \"fc-event-solid-danger fc-event-light\",\n      description: 'Lorem ipsum dolor sit ctetur adipi scing'\n    }, {\n      title: 'Birthday Party',\n      start: TOMORROW + 'T07:00:00',\n      className: \"fc-event-primary\",\n      description: 'Lorem ipsum dolor sit amet, scing'\n    }, {\n      title: 'Click for Google',\n      url: 'http://google.com/',\n      start: YM + '-28',\n      className: \"fc-event-solid-info fc-event-light\",\n      description: 'Lorem ipsum dolor sit amet, labore'\n    }];\n\n    // Initialize the external events -- for more info please visit the official site: https://fullcalendar.io/demos\n    var calendar = new FullCalendar.Calendar(calendarEl, {\n      timeZone: initialTimeZone,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      initialDate: TODAY,\n      navLinks: true,\n      // can click day/week names to navigate views\n      editable: true,\n      selectable: true,\n      dayMaxEvents: true,\n      // allow \"more\" link when too many events\n\n      eventTimeFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        timeZoneName: 'short'\n      },\n      events: eventsArray\n    });\n    calendar.render();\n\n    // when the timezone selector changes, dynamically change the calendar option -- more info on Select2 on Change event: https://select2.org/programmatic-control/events\n    $(timeZoneSelectorEl).on('change', function () {\n      var _this = this;\n      calendar.setOption('timeZone', 'UTC');\n\n      // Remove all events\n      var removeEvents = calendar.getEvents();\n      removeEvents.forEach(function (event) {\n        event.remove();\n      });\n\n      // Add events with new timezone offset\n      var newEvents = eventsArray;\n      newEvents.forEach(function (event) {\n        var start;\n        var end;\n        if (_this.value < 0) {\n          start = moment(event.start).subtract(_this.value.replace(/\\D/g, ''), 'seconds').format(getFormat(event.start));\n          end = event.end ? moment(event.end).subtract(_this.value.replace(/\\D/g, ''), 'seconds').format(getFormat(event.end)) : start;\n        } else {\n          start = moment(event.start).add(_this.value, 'seconds').format(getFormat(event.start));\n          end = event.end ? moment(event.end).add(_this.value, 'seconds').format(getFormat(event.end)) : start;\n        }\n        calendar.addEvent({\n          title: event.title,\n          start: start,\n          end: end\n        });\n      });\n      calendar.render();\n    });\n\n    // Dynamic date format generator\n    var getFormat = function getFormat(d) {\n      if (d.includes('T')) {\n        return 'YYYY-MM-DDTHH:mm:ss';\n      } else {\n        return 'YYYY-MM-DD';\n      }\n    };\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleTimezone();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralFullCalendarTimezoneDemos.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js":
/*!*****************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js ***!
  \*****************************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\": (\n    /*!****************************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js ***!\n      \\****************************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralFullcalendarTimezoneJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralFullCalendarTimezoneDemos = function () {\\n  // Private functions\\n  var exampleTimezone = function exampleTimezone() {\\n    // Define variables\\n    var initialTimeZone = 'local';\\n    var timeZoneSelectorEl = document.getElementById('kt_docs_fullcalendar_timezone_selector');\\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_timezone');\\n    var todayDate = moment().startOf('day');\\n    var YM = todayDate.format('YYYY-MM');\\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\\n    var TODAY = todayDate.format('YYYY-MM-DD');\\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\\n    var eventsArray = [{\\n      title: 'All Day Event',\\n      start: YM + '-01',\\n      description: 'Toto lorem ipsum dolor sit incid idunt ut',\\n      className: \\\"fc-event-danger fc-event-solid-warning\\\"\\n    }, {\\n      title: 'Reporting',\\n      start: YM + '-14T13:30:00',\\n      description: 'Lorem ipsum dolor incid idunt ut labore',\\n      end: YM + '-14',\\n      className: \\\"fc-event-success\\\"\\n    }, {\\n      title: 'Company Trip',\\n      start: YM + '-02',\\n      description: 'Lorem ipsum dolor sit tempor incid',\\n      end: YM + '-03',\\n      className: \\\"fc-event-primary\\\"\\n    }, {\\n      title: 'ICT Expo 2017 - Product Release',\\n      start: YM + '-03',\\n      description: 'Lorem ipsum dolor sit tempor inci',\\n      end: YM + '-05',\\n      className: \\\"fc-event-light fc-event-solid-primary\\\"\\n    }, {\\n      title: 'Dinner',\\n      start: YM + '-12',\\n      description: 'Lorem ipsum dolor sit amet, conse ctetur',\\n      end: YM + '-10'\\n    }, {\\n      id: 999,\\n      title: 'Repeating Event',\\n      start: YM + '-09T16:00:00',\\n      description: 'Lorem ipsum dolor sit ncididunt ut labore',\\n      className: \\\"fc-event-danger\\\"\\n    }, {\\n      id: 1000,\\n      title: 'Repeating Event',\\n      description: 'Lorem ipsum dolor sit amet, labore',\\n      start: YM + '-16T16:00:00'\\n    }, {\\n      title: 'Conference',\\n      start: YESTERDAY,\\n      end: TOMORROW,\\n      description: 'Lorem ipsum dolor eius mod tempor labore',\\n      className: \\\"fc-event-primary\\\"\\n    }, {\\n      title: 'Meeting',\\n      start: TODAY + 'T10:30:00',\\n      end: TODAY + 'T12:30:00',\\n      description: 'Lorem ipsum dolor eiu idunt ut labore'\\n    }, {\\n      title: 'Lunch',\\n      start: TODAY + 'T12:00:00',\\n      className: \\\"fc-event-info\\\",\\n      description: 'Lorem ipsum dolor sit amet, ut labore'\\n    }, {\\n      title: 'Meeting',\\n      start: TODAY + 'T14:30:00',\\n      className: \\\"fc-event-warning\\\",\\n      description: 'Lorem ipsum conse ctetur adipi scing'\\n    }, {\\n      title: 'Happy Hour',\\n      start: TODAY + 'T17:30:00',\\n      className: \\\"fc-event-info\\\",\\n      description: 'Lorem ipsum dolor sit amet, conse ctetur'\\n    }, {\\n      title: 'Dinner',\\n      start: TOMORROW + 'T05:00:00',\\n      className: \\\"fc-event-solid-danger fc-event-light\\\",\\n      description: 'Lorem ipsum dolor sit ctetur adipi scing'\\n    }, {\\n      title: 'Birthday Party',\\n      start: TOMORROW + 'T07:00:00',\\n      className: \\\"fc-event-primary\\\",\\n      description: 'Lorem ipsum dolor sit amet, scing'\\n    }, {\\n      title: 'Click for Google',\\n      url: 'http://google.com/',\\n      start: YM + '-28',\\n      className: \\\"fc-event-solid-info fc-event-light\\\",\\n      description: 'Lorem ipsum dolor sit amet, labore'\\n    }]; // Initialize the external events -- for more info please visit the official site: https://fullcalendar.io/demos\\n\\n    var calendar = new FullCalendar.Calendar(calendarEl, {\\n      timeZone: initialTimeZone,\\n      headerToolbar: {\\n        left: 'prev,next today',\\n        center: 'title',\\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\\n      },\\n      initialDate: TODAY,\\n      navLinks: true,\\n      // can click day/week names to navigate views\\n      editable: true,\\n      selectable: true,\\n      dayMaxEvents: true,\\n      // allow \\\"more\\\" link when too many events\\n      eventTimeFormat: {\\n        hour: 'numeric',\\n        minute: '2-digit',\\n        timeZoneName: 'short'\\n      },\\n      events: eventsArray\\n    });\\n    calendar.render(); // when the timezone selector changes, dynamically change the calendar option -- more info on Select2 on Change event: https://select2.org/programmatic-control/events\\n\\n    $(timeZoneSelectorEl).on('change', function () {\\n      var _this = this;\\n\\n      calendar.setOption('timeZone', 'UTC'); // Remove all events\\n\\n      var removeEvents = calendar.getEvents();\\n      removeEvents.forEach(function (event) {\\n        event.remove();\\n      }); // Add events with new timezone offset\\n\\n      var newEvents = eventsArray;\\n      newEvents.forEach(function (event) {\\n        var start;\\n        var end;\\n\\n        if (_this.value < 0) {\\n          start = moment(event.start).subtract(_this.value.replace(/\\\\D/g, ''), 'seconds').format(getFormat(event.start));\\n          end = event.end ? moment(event.end).subtract(_this.value.replace(/\\\\D/g, ''), 'seconds').format(getFormat(event.end)) : start;\\n        } else {\\n          start = moment(event.start).add(_this.value, 'seconds').format(getFormat(event.start));\\n          end = event.end ? moment(event.end).add(_this.value, 'seconds').format(getFormat(event.end)) : start;\\n        }\\n\\n        calendar.addEvent({\\n          title: event.title,\\n          start: start,\\n          end: end\\n        });\\n      });\\n      calendar.render();\\n    }); // Dynamic date format generator\\n\\n    var getFormat = function getFormat(d) {\\n      if (d.includes('T')) {\\n        return 'YYYY-MM-DDTHH:mm:ss';\\n      } else {\\n        return 'YYYY-MM-DD';\\n      }\\n    };\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleTimezone();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralFullCalendarTimezoneDemos.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js"]();
/******/ 	
/******/ })()
;