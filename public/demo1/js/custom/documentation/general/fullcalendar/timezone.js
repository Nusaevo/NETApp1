/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js":
/*!****************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js ***!
  \****************************************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTGeneralFullCalendarTimezoneDemos = function () {\n  // Private functions\n  var exampleTimezone = function exampleTimezone() {\n    // Define variables\n    var initialTimeZone = 'local';\n    var timeZoneSelectorEl = document.getElementById('kt_docs_fullcalendar_timezone_selector');\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_timezone');\n    var todayDate = moment().startOf('day');\n    var YM = todayDate.format('YYYY-MM');\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\n    var TODAY = todayDate.format('YYYY-MM-DD');\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\n    var eventsArray = [{\n      title: 'All Day Event',\n      start: YM + '-01',\n      description: 'Toto lorem ipsum dolor sit incid idunt ut',\n      className: \"fc-event-danger fc-event-solid-warning\"\n    }, {\n      title: 'Reporting',\n      start: YM + '-14T13:30:00',\n      description: 'Lorem ipsum dolor incid idunt ut labore',\n      end: YM + '-14',\n      className: \"fc-event-success\"\n    }, {\n      title: 'Company Trip',\n      start: YM + '-02',\n      description: 'Lorem ipsum dolor sit tempor incid',\n      end: YM + '-03',\n      className: \"fc-event-primary\"\n    }, {\n      title: 'ICT Expo 2017 - Product Release',\n      start: YM + '-03',\n      description: 'Lorem ipsum dolor sit tempor inci',\n      end: YM + '-05',\n      className: \"fc-event-light fc-event-solid-primary\"\n    }, {\n      title: 'Dinner',\n      start: YM + '-12',\n      description: 'Lorem ipsum dolor sit amet, conse ctetur',\n      end: YM + '-10'\n    }, {\n      id: 999,\n      title: 'Repeating Event',\n      start: YM + '-09T16:00:00',\n      description: 'Lorem ipsum dolor sit ncididunt ut labore',\n      className: \"fc-event-danger\"\n    }, {\n      id: 1000,\n      title: 'Repeating Event',\n      description: 'Lorem ipsum dolor sit amet, labore',\n      start: YM + '-16T16:00:00'\n    }, {\n      title: 'Conference',\n      start: YESTERDAY,\n      end: TOMORROW,\n      description: 'Lorem ipsum dolor eius mod tempor labore',\n      className: \"fc-event-primary\"\n    }, {\n      title: 'Meeting',\n      start: TODAY + 'T10:30:00',\n      end: TODAY + 'T12:30:00',\n      description: 'Lorem ipsum dolor eiu idunt ut labore'\n    }, {\n      title: 'Lunch',\n      start: TODAY + 'T12:00:00',\n      className: \"fc-event-info\",\n      description: 'Lorem ipsum dolor sit amet, ut labore'\n    }, {\n      title: 'Meeting',\n      start: TODAY + 'T14:30:00',\n      className: \"fc-event-warning\",\n      description: 'Lorem ipsum conse ctetur adipi scing'\n    }, {\n      title: 'Happy Hour',\n      start: TODAY + 'T17:30:00',\n      className: \"fc-event-info\",\n      description: 'Lorem ipsum dolor sit amet, conse ctetur'\n    }, {\n      title: 'Dinner',\n      start: TOMORROW + 'T05:00:00',\n      className: \"fc-event-solid-danger fc-event-light\",\n      description: 'Lorem ipsum dolor sit ctetur adipi scing'\n    }, {\n      title: 'Birthday Party',\n      start: TOMORROW + 'T07:00:00',\n      className: \"fc-event-primary\",\n      description: 'Lorem ipsum dolor sit amet, scing'\n    }, {\n      title: 'Click for Google',\n      url: 'http://google.com/',\n      start: YM + '-28',\n      className: \"fc-event-solid-info fc-event-light\",\n      description: 'Lorem ipsum dolor sit amet, labore'\n    }]; // Initialize the external events -- for more info please visit the official site: https://fullcalendar.io/demos\n\n    var calendar = new FullCalendar.Calendar(calendarEl, {\n      timeZone: initialTimeZone,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      initialDate: TODAY,\n      navLinks: true,\n      // can click day/week names to navigate views\n      editable: true,\n      selectable: true,\n      dayMaxEvents: true,\n      // allow \"more\" link when too many events\n      eventTimeFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        timeZoneName: 'short'\n      },\n      events: eventsArray\n    });\n    calendar.render(); // when the timezone selector changes, dynamically change the calendar option -- more info on Select2 on Change event: https://select2.org/programmatic-control/events\n\n    $(timeZoneSelectorEl).on('change', function () {\n      var _this = this;\n\n      calendar.setOption('timeZone', 'UTC'); // Remove all events\n\n      var removeEvents = calendar.getEvents();\n      removeEvents.forEach(function (event) {\n        event.remove();\n      }); // Add events with new timezone offset\n\n      var newEvents = eventsArray;\n      newEvents.forEach(function (event) {\n        var start;\n        var end;\n\n        if (_this.value < 0) {\n          start = moment(event.start).subtract(_this.value.replace(/\\D/g, ''), 'seconds').format(getFormat(event.start));\n          end = event.end ? moment(event.end).subtract(_this.value.replace(/\\D/g, ''), 'seconds').format(getFormat(event.end)) : start;\n        } else {\n          start = moment(event.start).add(_this.value, 'seconds').format(getFormat(event.start));\n          end = event.end ? moment(event.end).add(_this.value, 'seconds').format(getFormat(event.end)) : start;\n        }\n\n        calendar.addEvent({\n          title: event.title,\n          start: start,\n          end: end\n        });\n      });\n      calendar.render();\n    }); // Dynamic date format generator\n\n    var getFormat = function getFormat(d) {\n      if (d.includes('T')) {\n        return 'YYYY-MM-DDTHH:mm:ss';\n      } else {\n        return 'YYYY-MM-DD';\n      }\n    };\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      exampleTimezone();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralFullCalendarTimezoneDemos.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vZ2VuZXJhbC9mdWxsY2FsZW5kYXIvdGltZXpvbmUuanMuanMiLCJtYXBwaW5ncyI6IkNBRUE7O0FBQ0EsSUFBSUEsa0NBQWtDLEdBQUcsWUFBWTtBQUNqRDtBQUVBLE1BQUlDLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsR0FBWTtBQUM5QjtBQUNBLFFBQUlDLGVBQWUsR0FBRyxPQUF0QjtBQUNBLFFBQUlDLGtCQUFrQixHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0Isd0NBQXhCLENBQXpCO0FBQ0EsUUFBSUMsVUFBVSxHQUFHRixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsK0JBQXhCLENBQWpCO0FBQ0EsUUFBSUUsU0FBUyxHQUFHQyxNQUFNLEdBQUdDLE9BQVQsQ0FBaUIsS0FBakIsQ0FBaEI7QUFDQSxRQUFJQyxFQUFFLEdBQUdILFNBQVMsQ0FBQ0ksTUFBVixDQUFpQixTQUFqQixDQUFUO0FBQ0EsUUFBSUMsU0FBUyxHQUFHTCxTQUFTLENBQUNNLEtBQVYsR0FBa0JDLFFBQWxCLENBQTJCLENBQTNCLEVBQThCLEtBQTlCLEVBQXFDSCxNQUFyQyxDQUE0QyxZQUE1QyxDQUFoQjtBQUNBLFFBQUlJLEtBQUssR0FBR1IsU0FBUyxDQUFDSSxNQUFWLENBQWlCLFlBQWpCLENBQVo7QUFDQSxRQUFJSyxRQUFRLEdBQUdULFNBQVMsQ0FBQ00sS0FBVixHQUFrQkksR0FBbEIsQ0FBc0IsQ0FBdEIsRUFBeUIsS0FBekIsRUFBZ0NOLE1BQWhDLENBQXVDLFlBQXZDLENBQWY7QUFDQSxRQUFJTyxXQUFXLEdBQUcsQ0FDZDtBQUNJQyxNQUFBQSxLQUFLLEVBQUUsZUFEWDtBQUVJQyxNQUFBQSxLQUFLLEVBQUVWLEVBQUUsR0FBRyxLQUZoQjtBQUdJVyxNQUFBQSxXQUFXLEVBQUUsMkNBSGpCO0FBSUlDLE1BQUFBLFNBQVMsRUFBRTtBQUpmLEtBRGMsRUFPZDtBQUNJSCxNQUFBQSxLQUFLLEVB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LENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vZ2VuZXJhbC9mdWxsY2FsZW5kYXIvdGltZXpvbmUuanM/NjFjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUR2VuZXJhbEZ1bGxDYWxlbmRhclRpbWV6b25lRGVtb3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIGZ1bmN0aW9uc1xyXG5cclxuICAgIHZhciBleGFtcGxlVGltZXpvbmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gRGVmaW5lIHZhcmlhYmxlc1xyXG4gICAgICAgIHZhciBpbml0aWFsVGltZVpvbmUgPSAnbG9jYWwnO1xyXG4gICAgICAgIHZhciB0aW1lWm9uZVNlbGVjdG9yRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZG9jc19mdWxsY2FsZW5kYXJfdGltZXpvbmVfc2VsZWN0b3InKTtcclxuICAgICAgICB2YXIgY2FsZW5kYXJFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9kb2NzX2Z1bGxjYWxlbmRhcl90aW1lem9uZScpO1xyXG4gICAgICAgIHZhciB0b2RheURhdGUgPSBtb21lbnQoKS5zdGFydE9mKCdkYXknKTtcclxuICAgICAgICB2YXIgWU0gPSB0b2RheURhdGUuZm9ybWF0KCdZWVlZLU1NJyk7XHJcbiAgICAgICAgdmFyIFlFU1RFUkRBWSA9IHRvZGF5RGF0ZS5jbG9uZSgpLnN1YnRyYWN0KDEsICdkYXknKS5mb3JtYXQoJ1lZWVktTU0tREQnKTtcclxuICAgICAgICB2YXIgVE9EQVkgPSB0b2RheURhdGUuZm9ybWF0KCdZWVlZLU1NLUREJyk7XHJcbiAgICAgICAgdmFyIFRPTU9SUk9XID0gdG9kYXlEYXRlLmNsb25lKCkuYWRkKDEsICdkYXknKS5mb3JtYXQoJ1lZWVktTU0tREQnKTtcclxuICAgICAgICB2YXIgZXZlbnRzQXJyYXkgPSBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnQWxsIERheSBFdmVudCcsXHJcbiAgICAgICAgICAgICAgICBzdGFydDogWU0gKyAnLTAxJyxcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVG90byBsb3JlbSBpcHN1bSBkb2xvciBzaXQgaW5jaWQgaWR1bnQgdXQnLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZjLWV2ZW50LWRhbmdlciBmYy1ldmVudC1zb2xpZC13YXJuaW5nXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdSZXBvcnRpbmcnLFxyXG4gICAgICAgICAgICAgICAgc3RhcnQ6IFlNICsgJy0xNFQxMzozMDowMCcsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0xvcmVtIGlwc3VtIGRvbG9yIGluY2lkIGlkdW50IHV0IGxhYm9yZScsXHJcbiAgICAgICAgICAgICAgICBlbmQ6IFlNICsgJy0xNCcsXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmMtZXZlbnQtc3VjY2Vzc1wiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnQ29tcGFueSBUcmlwJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBZTSArICctMDInLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgdGVtcG9yIGluY2lkJyxcclxuICAgICAgICAgICAgICAgIGVuZDogWU0gKyAnLTAzJyxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYy1ldmVudC1wcmltYXJ5XCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdJQ1QgRXhwbyAyMDE3IC0gUHJvZHVjdCBSZWxlYXNlJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBZTSArICctMDMnLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgdGVtcG9yIGluY2knLFxyXG4gICAgICAgICAgICAgICAgZW5kOiBZTSArICctMDUnLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZjLWV2ZW50LWxpZ2h0IGZjLWV2ZW50LXNvbGlkLXByaW1hcnlcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0Rpbm5lcicsXHJcbiAgICAgICAgICAgICAgICBzdGFydDogWU0gKyAnLTEyJyxcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlIGN0ZXR1cicsXHJcbiAgICAgICAgICAgICAgICBlbmQ6IFlNICsgJy0xMCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgaWQ6IDk5OSxcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnUmVwZWF0aW5nIEV2ZW50JyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBZTSArICctMDlUMTY6MDA6MDAnLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgbmNpZGlkdW50IHV0IGxhYm9yZScsXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmMtZXZlbnQtZGFuZ2VyXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgaWQ6IDEwMDAsXHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ1JlcGVhdGluZyBFdmVudCcsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBsYWJvcmUnLFxyXG4gICAgICAgICAgICAgICAgc3RhcnQ6IFlNICsgJy0xNlQxNjowMDowMCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDb25mZXJlbmNlJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBZRVNURVJEQVksXHJcbiAgICAgICAgICAgICAgICBlbmQ6IFRPTU9SUk9XLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBlaXVzIG1vZCB0ZW1wb3IgbGFib3JlJyxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYy1ldmVudC1wcmltYXJ5XCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdNZWV0aW5nJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBUT0RBWSArICdUMTA6MzA6MDAnLFxyXG4gICAgICAgICAgICAgICAgZW5kOiBUT0RBWSArICdUMTI6MzA6MDAnLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBlaXUgaWR1bnQgdXQgbGFib3JlJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0x1bmNoJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBUT0RBWSArICdUMTI6MDA6MDAnLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZjLWV2ZW50LWluZm9cIixcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIHV0IGxhYm9yZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdNZWV0aW5nJyxcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiBUT0RBWSArICdUMTQ6MzA6MDAnLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZjLWV2ZW50LXdhcm5pbmdcIixcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gY29uc2UgY3RldHVyIGFkaXBpIHNjaW5nJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0hhcHB5IEhvdXInLFxyXG4gICAgICAgICAgICAgICAgc3RhcnQ6IFRPREFZICsgJ1QxNzozMDowMCcsXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmMtZXZlbnQtaW5mb1wiLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2UgY3RldHVyJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0Rpbm5lcicsXHJcbiAgICAgICAgICAgICAgICBzdGFydDogVE9NT1JST1cgKyAnVDA1OjAwOjAwJyxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYy1ldmVudC1zb2xpZC1kYW5nZXIgZmMtZXZlbnQtbGlnaHRcIixcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGN0ZXR1ciBhZGlwaSBzY2luZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdCaXJ0aGRheSBQYXJ0eScsXHJcbiAgICAgICAgICAgICAgICBzdGFydDogVE9NT1JST1cgKyAnVDA3OjAwOjAwJyxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYy1ldmVudC1wcmltYXJ5XCIsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBzY2luZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDbGljayBmb3IgR29vZ2xlJyxcclxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly9nb29nbGUuY29tLycsXHJcbiAgICAgICAgICAgICAgICBzdGFydDogWU0gKyAnLTI4JyxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYy1ldmVudC1zb2xpZC1pbmZvIGZjLWV2ZW50LWxpZ2h0XCIsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBsYWJvcmUnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBleHRlcm5hbCBldmVudHMgLS0gZm9yIG1vcmUgaW5mbyBwbGVhc2UgdmlzaXQgdGhlIG9mZmljaWFsIHNpdGU6IGh0dHBzOi8vZnVsbGNhbGVuZGFyLmlvL2RlbW9zXHJcbiAgICAgICAgdmFyIGNhbGVuZGFyID0gbmV3IEZ1bGxDYWxlbmRhci5DYWxlbmRhcihjYWxlbmRhckVsLCB7XHJcbiAgICAgICAgICAgIHRpbWVab25lOiBpbml0aWFsVGltZVpvbmUsXHJcbiAgICAgICAgICAgIGhlYWRlclRvb2xiYXI6IHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6ICdwcmV2LG5leHQgdG9kYXknLFxyXG4gICAgICAgICAgICAgICAgY2VudGVyOiAndGl0bGUnLFxyXG4gICAgICAgICAgICAgICAgcmlnaHQ6ICdkYXlHcmlkTW9udGgsdGltZUdyaWRXZWVrLHRpbWVHcmlkRGF5LGxpc3RXZWVrJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBpbml0aWFsRGF0ZTogVE9EQVksXHJcbiAgICAgICAgICAgIG5hdkxpbmtzOiB0cnVlLCAvLyBjYW4gY2xpY2sgZGF5L3dlZWsgbmFtZXMgdG8gbmF2aWdhdGUgdmlld3NcclxuICAgICAgICAgICAgZWRpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHNlbGVjdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGRheU1heEV2ZW50czogdHJ1ZSwgLy8gYWxsb3cgXCJtb3JlXCIgbGluayB3aGVuIHRvbyBtYW55IGV2ZW50c1xyXG5cclxuICAgICAgICAgICAgZXZlbnRUaW1lRm9ybWF0OiB7IGhvdXI6ICdudW1lcmljJywgbWludXRlOiAnMi1kaWdpdCcsIHRpbWVab25lTmFtZTogJ3Nob3J0JyB9LFxyXG4gICAgICAgICAgICBldmVudHM6IGV2ZW50c0FycmF5LFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjYWxlbmRhci5yZW5kZXIoKTtcclxuXHJcbiAgICAgICAgLy8gd2hlbiB0aGUgdGltZXpvbmUgc2VsZWN0b3IgY2hhbmdlcywgZHluYW1pY2FsbHkgY2hhbmdlIHRoZSBjYWxlbmRhciBvcHRpb24gLS0gbW9yZSBpbmZvIG9uIFNlbGVjdDIgb24gQ2hhbmdlIGV2ZW50OiBodHRwczovL3NlbGVjdDIub3JnL3Byb2dyYW1tYXRpYy1jb250cm9sL2V2ZW50c1xyXG4gICAgICAgICQodGltZVpvbmVTZWxlY3RvckVsKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjYWxlbmRhci5zZXRPcHRpb24oJ3RpbWVab25lJywgJ1VUQycpO1xyXG5cclxuICAgICAgICAgICAgLy8gUmVtb3ZlIGFsbCBldmVudHNcclxuICAgICAgICAgICAgY29uc3QgcmVtb3ZlRXZlbnRzID0gY2FsZW5kYXIuZ2V0RXZlbnRzKCk7XHJcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEFkZCBldmVudHMgd2l0aCBuZXcgdGltZXpvbmUgb2Zmc2V0XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld0V2ZW50cyA9IGV2ZW50c0FycmF5O1xyXG4gICAgICAgICAgICBuZXdFdmVudHMuZm9yRWFjaChldmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQ7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmKHRoaXMudmFsdWUgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IG1vbWVudChldmVudC5zdGFydCkuc3VidHJhY3QodGhpcy52YWx1ZS5yZXBsYWNlKC9cXEQvZywnJyksICdzZWNvbmRzJykuZm9ybWF0KGdldEZvcm1hdChldmVudC5zdGFydCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IGV2ZW50LmVuZCA/IG1vbWVudChldmVudC5lbmQpLnN1YnRyYWN0KHRoaXMudmFsdWUucmVwbGFjZSgvXFxEL2csJycpLCAnc2Vjb25kcycpLmZvcm1hdChnZXRGb3JtYXQoZXZlbnQuZW5kKSkgOiBzdGFydDtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBtb21lbnQoZXZlbnQuc3RhcnQpLmFkZCh0aGlzLnZhbHVlLCAnc2Vjb25kcycpLmZvcm1hdChnZXRGb3JtYXQoZXZlbnQuc3RhcnQpKTtcclxuICAgICAgICAgICAgICAgICAgICBlbmQgPSBldmVudC5lbmQgPyBtb21lbnQoZXZlbnQuZW5kKS5hZGQodGhpcy52YWx1ZSwgJ3NlY29uZHMnKS5mb3JtYXQoZ2V0Rm9ybWF0KGV2ZW50LmVuZCkpIDogc3RhcnQ7XHJcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgICAgY2FsZW5kYXIuYWRkRXZlbnQoe1xyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBldmVudC50aXRsZSxcclxuICAgICAgICAgICAgICAgICAgICBzdGFydDogc3RhcnQsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kOiBlbmRcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGNhbGVuZGFyLnJlbmRlcigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBEeW5hbWljIGRhdGUgZm9ybWF0IGdlbmVyYXRvclxyXG4gICAgICAgIGNvbnN0IGdldEZvcm1hdCA9IChkKSA9PiB7XHJcbiAgICAgICAgICAgIGlmKGQuaW5jbHVkZXMoJ1QnKSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ1lZWVktTU0tRERUSEg6bW06c3MnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdZWVlZLU1NLUREJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIC8vIFB1YmxpYyBGdW5jdGlvbnNcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGV4YW1wbGVUaW1lem9uZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn0oKTtcclxuXHJcbi8vIE9uIGRvY3VtZW50IHJlYWR5XHJcbktUVXRpbC5vbkRPTUNvbnRlbnRMb2FkZWQoZnVuY3Rpb24gKCkge1xyXG4gICAgS1RHZW5lcmFsRnVsbENhbGVuZGFyVGltZXpvbmVEZW1vcy5pbml0KCk7XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsiS1RHZW5lcmFsRnVsbENhbGVuZGFyVGltZXpvbmVEZW1vcyIsImV4YW1wbGVUaW1lem9uZSIsImluaXRpYWxUaW1lWm9uZSIsInRpbWVab25lU2VsZWN0b3JFbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjYWxlbmRhckVsIiwidG9kYXlEYXRlIiwibW9tZW50Iiwic3RhcnRPZiIsIllNIiwiZm9ybWF0IiwiWUVTVEVSREFZIiwiY2xvbmUiLCJzdWJ0cmFjdCIsIlRPREFZIiwiVE9NT1JST1ciLCJhZGQiLCJldmVudHNBcnJheSIsInRpdGxlIiwic3RhcnQiLCJkZXNjcmlwdGlvbiIsImNsYXNzTmFtZSIsImVuZCIsImlkIiwidXJsIiwiY2FsZW5kYXIiLCJGdWxsQ2FsZW5kYXIiLCJDYWxlbmRhciIsInRpbWVab25lIiwiaGVhZGVyVG9vbGJhciIsImxlZnQiLCJjZW50ZXIiLCJyaWdodCIsImluaXRpYWxEYXRlIiwibmF2TGlua3MiLCJlZGl0YWJsZSIsInNlbGVjdGFibGUiLCJkYXlNYXhFdmVudHMiLCJldmVudFRpbWVGb3JtYXQiLCJob3VyIiwibWludXRlIiwidGltZVpvbmVOYW1lIiwiZXZlbnRzIiwicmVuZGVyIiwiJCIsIm9uIiwic2V0T3B0aW9uIiwicmVtb3ZlRXZlbnRzIiwiZ2V0RXZlbnRzIiwiZm9yRWFjaCIsImV2ZW50IiwicmVtb3ZlIiwibmV3RXZlbnRzIiwidmFsdWUiLCJyZXBsYWNlIiwiZ2V0Rm9ybWF0IiwiYWRkRXZlbnQiLCJkIiwiaW5jbHVkZXMiLCJpbml0IiwiS1RVdGlsIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js":
/*!*****************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js ***!
  \*****************************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\":\n    /*!****************************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js ***!\r\n      \\****************************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralFullcalendarTimezoneJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralFullCalendarTimezoneDemos = function () {\\n  // Private functions\\n  var exampleTimezone = function exampleTimezone() {\\n    // Define variables\\n    var initialTimeZone = 'local';\\n    var timeZoneSelectorEl = document.getElementById('kt_docs_fullcalendar_timezone_selector');\\n    var calendarEl = document.getElementById('kt_docs_fullcalendar_timezone');\\n    var todayDate = moment().startOf('day');\\n    var YM = todayDate.format('YYYY-MM');\\n    var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\\n    var TODAY = todayDate.format('YYYY-MM-DD');\\n    var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\\n    var eventsArray = [{\\n      title: 'All Day Event',\\n      start: YM + '-01',\\n      description: 'Toto lorem ipsum dolor sit incid idunt ut',\\n      className: \\\"fc-event-danger fc-event-solid-warning\\\"\\n    }, {\\n      title: 'Reporting',\\n      start: YM + '-14T13:30:00',\\n      description: 'Lorem ipsum dolor incid idunt ut labore',\\n      end: YM + '-14',\\n      className: \\\"fc-event-success\\\"\\n    }, {\\n      title: 'Company Trip',\\n      start: YM + '-02',\\n      description: 'Lorem ipsum dolor sit tempor incid',\\n      end: YM + '-03',\\n      className: \\\"fc-event-primary\\\"\\n    }, {\\n      title: 'ICT Expo 2017 - Product Release',\\n      start: YM + '-03',\\n      description: 'Lorem ipsum dolor sit tempor inci',\\n      end: YM + '-05',\\n      className: \\\"fc-event-light fc-event-solid-primary\\\"\\n    }, {\\n      title: 'Dinner',\\n      start: YM + '-12',\\n      description: 'Lorem ipsum dolor sit amet, conse ctetur',\\n      end: YM + '-10'\\n    }, {\\n      id: 999,\\n      title: 'Repeating Event',\\n      start: YM + '-09T16:00:00',\\n      description: 'Lorem ipsum dolor sit ncididunt ut labore',\\n      className: \\\"fc-event-danger\\\"\\n    }, {\\n      id: 1000,\\n      title: 'Repeating Event',\\n      description: 'Lorem ipsum dolor sit amet, labore',\\n      start: YM + '-16T16:00:00'\\n    }, {\\n      title: 'Conference',\\n      start: YESTERDAY,\\n      end: TOMORROW,\\n      description: 'Lorem ipsum dolor eius mod tempor labore',\\n      className: \\\"fc-event-primary\\\"\\n    }, {\\n      title: 'Meeting',\\n      start: TODAY + 'T10:30:00',\\n      end: TODAY + 'T12:30:00',\\n      description: 'Lorem ipsum dolor eiu idunt ut labore'\\n    }, {\\n      title: 'Lunch',\\n      start: TODAY + 'T12:00:00',\\n      className: \\\"fc-event-info\\\",\\n      description: 'Lorem ipsum dolor sit amet, ut labore'\\n    }, {\\n      title: 'Meeting',\\n      start: TODAY + 'T14:30:00',\\n      className: \\\"fc-event-warning\\\",\\n      description: 'Lorem ipsum conse ctetur adipi scing'\\n    }, {\\n      title: 'Happy Hour',\\n      start: TODAY + 'T17:30:00',\\n      className: \\\"fc-event-info\\\",\\n      description: 'Lorem ipsum dolor sit amet, conse ctetur'\\n    }, {\\n      title: 'Dinner',\\n      start: TOMORROW + 'T05:00:00',\\n      className: \\\"fc-event-solid-danger fc-event-light\\\",\\n      description: 'Lorem ipsum dolor sit ctetur adipi scing'\\n    }, {\\n      title: 'Birthday Party',\\n      start: TOMORROW + 'T07:00:00',\\n      className: \\\"fc-event-primary\\\",\\n      description: 'Lorem ipsum dolor sit amet, scing'\\n    }, {\\n      title: 'Click for Google',\\n      url: 'http://google.com/',\\n      start: YM + '-28',\\n      className: \\\"fc-event-solid-info fc-event-light\\\",\\n      description: 'Lorem ipsum dolor sit amet, labore'\\n    }]; // Initialize the external events -- for more info please visit the official site: https://fullcalendar.io/demos\\n\\n    var calendar = new FullCalendar.Calendar(calendarEl, {\\n      timeZone: initialTimeZone,\\n      headerToolbar: {\\n        left: 'prev,next today',\\n        center: 'title',\\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\\n      },\\n      initialDate: TODAY,\\n      navLinks: true,\\n      // can click day/week names to navigate views\\n      editable: true,\\n      selectable: true,\\n      dayMaxEvents: true,\\n      // allow \\\"more\\\" link when too many events\\n      eventTimeFormat: {\\n        hour: 'numeric',\\n        minute: '2-digit',\\n        timeZoneName: 'short'\\n      },\\n      events: eventsArray\\n    });\\n    calendar.render(); // when the timezone selector changes, dynamically change the calendar option -- more info on Select2 on Change event: https://select2.org/programmatic-control/events\\n\\n    $(timeZoneSelectorEl).on('change', function () {\\n      var _this = this;\\n\\n      calendar.setOption('timeZone', 'UTC'); // Remove all events\\n\\n      var removeEvents = calendar.getEvents();\\n      removeEvents.forEach(function (event) {\\n        event.remove();\\n      }); // Add events with new timezone offset\\n\\n      var newEvents = eventsArray;\\n      newEvents.forEach(function (event) {\\n        var start;\\n        var end;\\n\\n        if (_this.value < 0) {\\n          start = moment(event.start).subtract(_this.value.replace(/\\\\D/g, ''), 'seconds').format(getFormat(event.start));\\n          end = event.end ? moment(event.end).subtract(_this.value.replace(/\\\\D/g, ''), 'seconds').format(getFormat(event.end)) : start;\\n        } else {\\n          start = moment(event.start).add(_this.value, 'seconds').format(getFormat(event.start));\\n          end = event.end ? moment(event.end).add(_this.value, 'seconds').format(getFormat(event.end)) : start;\\n        }\\n\\n        calendar.addEvent({\\n          title: event.title,\\n          start: start,\\n          end: end\\n        });\\n      });\\n      calendar.render();\\n    }); // Dynamic date format generator\\n\\n    var getFormat = function getFormat(d) {\\n      if (d.includes('T')) {\\n        return 'YYYY-MM-DDTHH:mm:ss';\\n      } else {\\n        return 'YYYY-MM-DD';\\n      }\\n    };\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleTimezone();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralFullCalendarTimezoneDemos.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/fullcalendar/timezone.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/fullcalendar/timezone.js"]();
/******/ 	
/******/ })()
;