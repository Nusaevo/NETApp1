/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/search/responsive.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/search/responsive.js ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTGeneralSearchResponsiveDemos = function () {\n  // Private variables\n  var element;\n  var recentlyViewedElement;\n  var resultsElement;\n  var wrapperElement;\n  var emptyElement;\n  var preferencesElement;\n  var preferencesShowElement;\n  var preferencesDismissElement;\n  var searchObject;\n\n  // Private functions\n  var processs = function processs(search) {\n    var timeout = setTimeout(function () {\n      var number = KTUtil.getRandomInt(1, 3);\n\n      // Hide recently viewed\n      recentlyViewedElement.classList.add('d-none');\n      if (number === 3) {\n        // Hide results\n        resultsElement.classList.add('d-none');\n        // Show empty message \n        emptyElement.classList.remove('d-none');\n      } else {\n        // Show results\n        resultsElement.classList.remove('d-none');\n        // Hide empty message \n        emptyElement.classList.add('d-none');\n      }\n\n      // Complete search\n      search.complete();\n    }, 1500);\n  };\n  var clear = function clear(search) {\n    // Show recently viewed\n    recentlyViewedElement.classList.remove('d-none');\n    // Hide results\n    resultsElement.classList.add('d-none');\n    // Hide empty message \n    emptyElement.classList.add('d-none');\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Elements\n      element = document.querySelector('#kt_docs_search_handler_responsive');\n      if (!element) {\n        return;\n      }\n      wrapperElement = element.querySelector('[data-kt-search-element=\"wrapper\"]');\n      recentlyViewedElement = element.querySelector('[data-kt-search-element=\"recently-viewed\"]');\n      resultsElement = element.querySelector('[data-kt-search-element=\"results\"]');\n      emptyElement = element.querySelector('[data-kt-search-element=\"empty\"]');\n      preferencesElement = element.querySelector('[data-kt-search-element=\"preferences\"]');\n      preferencesShowElement = element.querySelector('[data-kt-search-element=\"preferences-show\"]');\n      preferencesDismissElement = element.querySelector('[data-kt-search-element=\"preferences-dismiss\"]');\n\n      // Initialize search handler\n      searchObject = new KTSearch(element);\n\n      // Search handler\n      searchObject.on('kt.search.process', processs);\n\n      // Clear handler\n      searchObject.on('kt.search.clear', clear);\n\n      // Preference show handler\n      preferencesShowElement.addEventListener('click', function () {\n        wrapperElement.classList.add('d-none');\n        preferencesElement.classList.remove('d-none');\n      });\n\n      // Preference dismiss handler\n      preferencesDismissElement.addEventListener('click', function () {\n        wrapperElement.classList.remove('d-none');\n        preferencesElement.classList.add('d-none');\n      });\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralSearchResponsiveDemos.init();\n});\n\n// Webpack support\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = KTGeneralSearchResponsiveDemos;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/search/responsive.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/search/responsive.js":
/*!*************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/search/responsive.js ***!
  \*************************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/search/responsive.js\": (\n    /*!************************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/search/responsive.js ***!\n      \\************************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralSearchResponsiveJs(module) {\n      eval(\" // Class definition\\n\\nvar KTGeneralSearchResponsiveDemos = function () {\\n  // Private variables\\n  var element;\\n  var recentlyViewedElement;\\n  var resultsElement;\\n  var wrapperElement;\\n  var emptyElement;\\n  var preferencesElement;\\n  var preferencesShowElement;\\n  var preferencesDismissElement;\\n  var searchObject; // Private functions\\n\\n  var processs = function processs(search) {\\n    var timeout = setTimeout(function () {\\n      var number = KTUtil.getRandomInt(1, 3); // Hide recently viewed\\n\\n      recentlyViewedElement.classList.add('d-none');\\n\\n      if (number === 3) {\\n        // Hide results\\n        resultsElement.classList.add('d-none'); // Show empty message \\n\\n        emptyElement.classList.remove('d-none');\\n      } else {\\n        // Show results\\n        resultsElement.classList.remove('d-none'); // Hide empty message \\n\\n        emptyElement.classList.add('d-none');\\n      } // Complete search\\n\\n\\n      search.complete();\\n    }, 1500);\\n  };\\n\\n  var clear = function clear(search) {\\n    // Show recently viewed\\n    recentlyViewedElement.classList.remove('d-none'); // Hide results\\n\\n    resultsElement.classList.add('d-none'); // Hide empty message \\n\\n    emptyElement.classList.add('d-none');\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      // Elements\\n      element = document.querySelector('#kt_docs_search_handler_responsive');\\n\\n      if (!element) {\\n        return;\\n      }\\n\\n      wrapperElement = element.querySelector('[data-kt-search-element=\\\"wrapper\\\"]');\\n      recentlyViewedElement = element.querySelector('[data-kt-search-element=\\\"recently-viewed\\\"]');\\n      resultsElement = element.querySelector('[data-kt-search-element=\\\"results\\\"]');\\n      emptyElement = element.querySelector('[data-kt-search-element=\\\"empty\\\"]');\\n      preferencesElement = element.querySelector('[data-kt-search-element=\\\"preferences\\\"]');\\n      preferencesShowElement = element.querySelector('[data-kt-search-element=\\\"preferences-show\\\"]');\\n      preferencesDismissElement = element.querySelector('[data-kt-search-element=\\\"preferences-dismiss\\\"]'); // Initialize search handler\\n\\n      searchObject = new KTSearch(element); // Search handler\\n\\n      searchObject.on('kt.search.process', processs); // Clear handler\\n\\n      searchObject.on('kt.search.clear', clear); // Preference show handler\\n\\n      preferencesShowElement.addEventListener('click', function () {\\n        wrapperElement.classList.add('d-none');\\n        preferencesElement.classList.remove('d-none');\\n      }); // Preference dismiss handler\\n\\n      preferencesDismissElement.addEventListener('click', function () {\\n        wrapperElement.classList.remove('d-none');\\n        preferencesElement.classList.add('d-none');\\n      });\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralSearchResponsiveDemos.init();\\n}); // Webpack support\\n\\nif ( true && typeof module.exports !== 'undefined') {\\n  module.exports = KTGeneralSearchResponsiveDemos;\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/search/responsive.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/ // The module cache\n  /******/\n  var __webpack_module_cache__ = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __nested_webpack_require_13859__(moduleId) {\n    /******/ // Check if module is in cache\n    /******/var cachedModule = __webpack_module_cache__[moduleId];\n    /******/\n    if (cachedModule !== undefined) {\n      /******/return cachedModule.exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = __webpack_module_cache__[moduleId] = {\n      /******/ // no module.id needed\n      /******/ // no module.loaded needed\n      /******/exports: {}\n      /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    __webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_13859__);\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module is referenced by other modules so it can't be inlined\n  /******/\n  var __webpack_exports__ = __nested_webpack_require_13859__(\"./resources/assets/core/js/custom/documentation/general/search/responsive.js\");\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/search/responsive.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./resources/assets/core/js/custom/documentation/general/search/responsive.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/demo1/js/custom/documentation/general/search/responsive.js");
/******/ 	
/******/ })()
;