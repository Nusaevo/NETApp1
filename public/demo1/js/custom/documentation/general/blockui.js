/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/blockui.js":
/*!**************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/blockui.js ***!
  \**************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTGeneralBlockUI = function () {\n  // Private functions\n  var example1 = function example1() {\n    var button = document.querySelector(\"#kt_block_ui_1_button\");\n    var target = document.querySelector(\"#kt_block_ui_1_target\");\n    var blockUI = new KTBlockUI(target);\n    button.addEventListener(\"click\", function () {\n      if (blockUI.isBlocked()) {\n        blockUI.release();\n        button.innerText = \"Block\";\n      } else {\n        blockUI.block();\n        button.innerText = \"Release\";\n      }\n    });\n  };\n  var example2 = function example2() {\n    var button = document.querySelector(\"#kt_block_ui_2_button\");\n    var target = document.querySelector(\"#kt_block_ui_2_target\");\n    var blockUI = new KTBlockUI(target, {\n      message: '<div class=\"blockui-message\"><span class=\"spinner-border text-primary\"></span> Loading...</div>'\n    });\n    button.addEventListener(\"click\", function () {\n      if (blockUI.isBlocked()) {\n        blockUI.release();\n        button.innerText = \"Block\";\n      } else {\n        blockUI.block();\n        button.innerText = \"Release\";\n      }\n    });\n  };\n  var example3 = function example3() {\n    var button = document.querySelector(\"#kt_block_ui_3_button\");\n    var target = document.querySelector(\"#kt_block_ui_3_target\");\n    var blockUI = new KTBlockUI(target, {\n      overlayClass: 'bg-danger bg-opacity-25'\n    });\n    button.addEventListener(\"click\", function () {\n      if (blockUI.isBlocked()) {\n        blockUI.release();\n        button.innerText = \"Block\";\n      } else {\n        blockUI.block();\n        button.innerText = \"Release\";\n      }\n    });\n  };\n  var example4 = function example4() {\n    var button = document.querySelector(\"#kt_block_ui_4_button\");\n    var target = document.querySelector(\"#kt_block_ui_4_target\");\n    var blockUI = new KTBlockUI(target);\n    button.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      blockUI.block();\n      setTimeout(function () {\n        blockUI.release();\n      }, 3000);\n    });\n  };\n  var example5 = function example5() {\n    var button = document.querySelector(\"#kt_block_ui_5_button\");\n    var blockUI = new KTBlockUI(document.body);\n    button.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      blockUI.block();\n      setTimeout(function () {\n        //blockUI.release();\n      }, 3000);\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      example1();\n      example2();\n      example3();\n      example4();\n      //example5();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralBlockUI.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/blockui.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/blockui.js":
/*!***************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/blockui.js ***!
  \***************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/blockui.js\": (\n    /*!**************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/blockui.js ***!\n      \\**************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralBlockuiJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralBlockUI = function () {\\n  // Private functions\\n  var example1 = function example1() {\\n    var button = document.querySelector(\\\"#kt_block_ui_1_button\\\");\\n    var target = document.querySelector(\\\"#kt_block_ui_1_target\\\");\\n    var blockUI = new KTBlockUI(target);\\n    button.addEventListener(\\\"click\\\", function () {\\n      if (blockUI.isBlocked()) {\\n        blockUI.release();\\n        button.innerText = \\\"Block\\\";\\n      } else {\\n        blockUI.block();\\n        button.innerText = \\\"Release\\\";\\n      }\\n    });\\n  };\\n\\n  var example2 = function example2() {\\n    var button = document.querySelector(\\\"#kt_block_ui_2_button\\\");\\n    var target = document.querySelector(\\\"#kt_block_ui_2_target\\\");\\n    var blockUI = new KTBlockUI(target, {\\n      message: '<div class=\\\"blockui-message\\\"><span class=\\\"spinner-border text-primary\\\"></span> Loading...</div>'\\n    });\\n    button.addEventListener(\\\"click\\\", function () {\\n      if (blockUI.isBlocked()) {\\n        blockUI.release();\\n        button.innerText = \\\"Block\\\";\\n      } else {\\n        blockUI.block();\\n        button.innerText = \\\"Release\\\";\\n      }\\n    });\\n  };\\n\\n  var example3 = function example3() {\\n    var button = document.querySelector(\\\"#kt_block_ui_3_button\\\");\\n    var target = document.querySelector(\\\"#kt_block_ui_3_target\\\");\\n    var blockUI = new KTBlockUI(target, {\\n      overlayClass: 'bg-danger bg-opacity-25'\\n    });\\n    button.addEventListener(\\\"click\\\", function () {\\n      if (blockUI.isBlocked()) {\\n        blockUI.release();\\n        button.innerText = \\\"Block\\\";\\n      } else {\\n        blockUI.block();\\n        button.innerText = \\\"Release\\\";\\n      }\\n    });\\n  };\\n\\n  var example4 = function example4() {\\n    var button = document.querySelector(\\\"#kt_block_ui_4_button\\\");\\n    var target = document.querySelector(\\\"#kt_block_ui_4_target\\\");\\n    var blockUI = new KTBlockUI(target);\\n    button.addEventListener(\\\"click\\\", function (e) {\\n      e.preventDefault();\\n      blockUI.block();\\n      setTimeout(function () {\\n        blockUI.release();\\n      }, 3000);\\n    });\\n  };\\n\\n  var example5 = function example5() {\\n    var button = document.querySelector(\\\"#kt_block_ui_5_button\\\");\\n    var blockUI = new KTBlockUI(document.body);\\n    button.addEventListener(\\\"click\\\", function (e) {\\n      e.preventDefault();\\n      blockUI.block();\\n      setTimeout(function () {//blockUI.release();\\n      }, 3000);\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      example1();\\n      example2();\\n      example3();\\n      example4(); //example5();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralBlockUI.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/blockui.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/blockui.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/blockui.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/blockui.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/blockui.js"]();
/******/ 	
/******/ })()
;