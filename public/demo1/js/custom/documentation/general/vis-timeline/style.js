/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js":
/*!*************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js ***!
  \*************************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTVisTimelineStyle = function () {\n  // Private functions\n  var exampleStyle = function exampleStyle() {\n    var container = document.getElementById(\"kt_docs_vistimeline_style\");\n\n    // Generate HTML content\n    var getContent = function getContent(title, img) {\n      var _name$classList, _symbol$classList;\n      var item = document.createElement('div');\n      var name = document.createElement('div');\n      var nameClasses = ['fw-bolder', 'mb-2'];\n      (_name$classList = name.classList).add.apply(_name$classList, nameClasses);\n      name.innerHTML = title;\n      var image = document.createElement('img');\n      image.setAttribute('src', img);\n      var symbol = document.createElement('div');\n      var symbolClasses = ['symbol', 'symbol-circle', 'symbol-30'];\n      (_symbol$classList = symbol.classList).add.apply(_symbol$classList, symbolClasses);\n      symbol.appendChild(image);\n      item.appendChild(name);\n      item.appendChild(symbol);\n      return item;\n    };\n\n    // note that months are zero-based in the JavaScript Date object\n    var items = new vis.DataSet([{\n      start: new Date(2010, 7, 23),\n      content: getContent('Conversation', hostUrl + '/media/avatars/300-6.jpg')\n    }, {\n      start: new Date(2010, 7, 23, 23, 0, 0),\n      content: getContent('Mail from boss', hostUrl + '/media/avatars/300-1.jpg')\n    }, {\n      start: new Date(2010, 7, 24, 16, 0, 0),\n      content: \"Report\"\n    }, {\n      start: new Date(2010, 7, 26),\n      end: new Date(2010, 8, 2),\n      content: \"Traject A\"\n    }, {\n      start: new Date(2010, 7, 28),\n      content: getContent('Memo', hostUrl + '/media/avatars/300-2.jpg')\n    }, {\n      start: new Date(2010, 7, 29),\n      content: getContent('Phone call', hostUrl + '/media/avatars/300-5.jpg')\n    }, {\n      start: new Date(2010, 7, 31),\n      end: new Date(2010, 8, 3),\n      content: \"Traject B\"\n    }, {\n      start: new Date(2010, 8, 4, 12, 0, 0),\n      content: getContent('Report', hostUrl + '/media/avatars/300-20.jpg')\n    }]);\n    var options = {\n      editable: true,\n      margin: {\n        item: 20,\n        axis: 40\n      }\n    };\n    var timeline = new vis.Timeline(container, items, options);\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleStyle();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTVisTimelineStyle.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/vis-timeline/style.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/vis-timeline/style.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js\": (\n    /*!*************************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js ***!\n      \\*************************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralVisTimelineStyleJs() {\n      eval(\" // Class definition\\n\\nvar KTVisTimelineStyle = function () {\\n  // Private functions\\n  var exampleStyle = function exampleStyle() {\\n    var container = document.getElementById(\\\"kt_docs_vistimeline_style\\\"); // Generate HTML content\\n\\n    var getContent = function getContent(title, img) {\\n      var _name$classList, _symbol$classList;\\n\\n      var item = document.createElement('div');\\n      var name = document.createElement('div');\\n      var nameClasses = ['fw-bolder', 'mb-2'];\\n\\n      (_name$classList = name.classList).add.apply(_name$classList, nameClasses);\\n\\n      name.innerHTML = title;\\n      var image = document.createElement('img');\\n      image.setAttribute('src', img);\\n      var symbol = document.createElement('div');\\n      var symbolClasses = ['symbol', 'symbol-circle', 'symbol-30'];\\n\\n      (_symbol$classList = symbol.classList).add.apply(_symbol$classList, symbolClasses);\\n\\n      symbol.appendChild(image);\\n      item.appendChild(name);\\n      item.appendChild(symbol);\\n      return item;\\n    }; // note that months are zero-based in the JavaScript Date object\\n\\n\\n    var items = new vis.DataSet([{\\n      start: new Date(2010, 7, 23),\\n      content: getContent('Conversation', hostUrl + '/media/avatars/300-6.jpg')\\n    }, {\\n      start: new Date(2010, 7, 23, 23, 0, 0),\\n      content: getContent('Mail from boss', hostUrl + '/media/avatars/300-1.jpg')\\n    }, {\\n      start: new Date(2010, 7, 24, 16, 0, 0),\\n      content: \\\"Report\\\"\\n    }, {\\n      start: new Date(2010, 7, 26),\\n      end: new Date(2010, 8, 2),\\n      content: \\\"Traject A\\\"\\n    }, {\\n      start: new Date(2010, 7, 28),\\n      content: getContent('Memo', hostUrl + '/media/avatars/300-2.jpg')\\n    }, {\\n      start: new Date(2010, 7, 29),\\n      content: getContent('Phone call', hostUrl + '/media/avatars/300-5.jpg')\\n    }, {\\n      start: new Date(2010, 7, 31),\\n      end: new Date(2010, 8, 3),\\n      content: \\\"Traject B\\\"\\n    }, {\\n      start: new Date(2010, 8, 4, 12, 0, 0),\\n      content: getContent('Report', hostUrl + '/media/avatars/300-20.jpg')\\n    }]);\\n    var options = {\\n      editable: true,\\n      margin: {\\n        item: 20,\\n        axis: 40\\n      }\\n    };\\n    var timeline = new vis.Timeline(container, items, options);\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleStyle();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTVisTimelineStyle.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/vis-timeline/style.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/vis-timeline/style.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/vis-timeline/style.js"]();
/******/ 	
/******/ })()
;