/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/draggable/restricted.js":
/*!***************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/draggable/restricted.js ***!
  \***************************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTDraggableRestricted = function () {\n  // Private functions\n  var exampleRestricted = function exampleRestricted() {\n    var containers = document.querySelectorAll('.draggable-zone');\n    var restrcitedWrapper = document.querySelector('[data-kt-draggable-level=\"restricted\"]');\n    if (containers.length === 0) {\n      return false;\n    }\n    var droppable = new Droppable[\"default\"](containers, {\n      draggable: '.draggable',\n      dropzone: '.draggable-zone',\n      handle: '.draggable .draggable-handle',\n      mirror: {\n        //appendTo: selector,\n        appendTo: 'body',\n        constrainDimensions: true\n      }\n    });\n\n    // Define draggable element variable for permissions level\n    var droppableOrigin;\n\n    // Handle drag start event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragEvent.html\n    droppable.on('drag:start', function (e) {\n      droppableOrigin = e.originalSource.getAttribute('data-kt-draggable-level');\n    });\n\n    // Handle drag over event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragOverEvent.html\n    droppable.on('drag:over', function (e) {\n      var isRestricted = e.overContainer.closest('[data-kt-draggable-level=\"restricted\"]');\n      if (isRestricted) {\n        if (droppableOrigin !== 'admin') {\n          restrcitedWrapper.classList.add('bg-light-danger');\n        } else {\n          restrcitedWrapper.classList.remove('bg-light-danger');\n        }\n      } else {\n        restrcitedWrapper.classList.remove('bg-light-danger');\n      }\n    });\n\n    // Handle drag stop event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragStopEvent.html\n    droppable.on('drag:stop', function (e) {\n      // remove all draggable occupied limit\n      containers.forEach(function (c) {\n        c.classList.remove('draggable-dropzone--occupied');\n      });\n\n      // Remove restricted alert\n      restrcitedWrapper.classList.remove('bg-light-danger');\n    });\n\n    // Handle drop event -- https://shopify.github.io/draggable/docs/class/src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent.html\n    droppable.on('droppable:dropped', function (e) {\n      var isRestricted = e.dropzone.closest('[data-kt-draggable-level=\"restricted\"]');\n      // Detect if drop container is restricted\n      if (isRestricted) {\n        // Check if dragged element has permission level\n        if (droppableOrigin !== 'admin') {\n          restrcitedWrapper.classList.add('bg-light-danger');\n          e.cancel();\n        }\n      }\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleRestricted();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTDraggableRestricted.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2RvY3VtZW50YXRpb24vZ2VuZXJhbC9kcmFnZ2FibGUvcmVzdHJpY3RlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLHFCQUFxQixHQUFHLFlBQVk7RUFDcEM7RUFDQSxJQUFJQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFBLEVBQWU7SUFDaEMsSUFBSUMsVUFBVSxHQUFHQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDO0lBQzdELElBQU1DLGlCQUFpQixHQUFHRixRQUFRLENBQUNHLGFBQWEsQ0FBQyx3Q0FBd0MsQ0FBQztJQUUxRixJQUFJSixVQUFVLENBQUNLLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDekIsT0FBTyxLQUFLO0lBQ2hCO0lBRUEsSUFBSUMsU0FBUyxHQUFHLElBQUlDLFNBQVMsV0FBUSxDQUFDUCxVQUFVLEVBQUU7TUFDOUNRLFNBQVMsRUFBRSxZQUFZO01BQ3ZCQyxRQUFRLEVBQUUsaUJBQWlCO01BQzNCQyxNQUFNLEVBQUUsOEJBQThCO01BQ3RDQyxNQUFNLEVBQUU7UUFDSjtRQUNBQyxRQUFRLEVBQUUsTUFBTTtRQUNoQkMsbUJBQW1CLEVBQUU7TUFDekI7SUFDSixDQUFDLENBQUM7O0lBRUY7SUFDQSxJQUFJQyxlQUFlOztJQUVuQjtJQUNBUixTQUFTLENBQUNTLEVBQUUsQ0FBQyxZQUFZLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO01BQzlCRixlQUFlLEdBQUdFLENBQUMsQ0FBQ0MsY0FBYyxDQUFDQyxZQUFZLENBQUMseUJBQXlCLENBQUM7SUFDOUUsQ0FBQyxDQUFDOztJQUVGO0lBQ0FaLFNBQVMsQ0FBQ1MsRUFBRSxDQUFDLFdBQVcsRUFBRSxVQUFDQyxDQUFDLEVBQUs7TUFDN0IsSUFBTUcsWUFBWSxHQUFHSCxDQUFDLENBQUNJLGFBQWEsQ0FBQ0MsT0FBTyxDQUFDLHdDQUF3QyxDQUFDO01BQ3RGLElBQUlGLFlBQVksRUFBRTtRQUNkLElBQUlMLGVBQWUsS0FBSyxPQUFPLEVBQUU7VUFDN0JYLGlCQUFpQixDQUFDbUIsU0FBUyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCLENBQUM7UUFDdEQsQ0FBQyxNQUFNO1VBQ0hwQixpQkFBaUIsQ0FBQ21CLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLGlCQUFpQixDQUFDO1FBQ3pEO01BQ0osQ0FBQyxNQUFNO1FBQ0hyQixpQkFBaUIsQ0FBQ21CLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLGlCQUFpQixDQUFDO01BQ3pEO0lBQ0osQ0FBQyxDQUFDOztJQUVGO0lBQ0FsQixTQUFTLENBQUNTLEVBQUUsQ0FBQyxXQUFXLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO01BQzdCO01BQ0FoQixVQUFVLENBQUN5QixPQUFPLENBQUMsVUFBQUMsQ0FBQyxFQUFJO1FBQ3BCQSxDQUFDLENBQUNKLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLDhCQUE4QixDQUFDO01BQ3RELENBQUMsQ0FBQzs7TUFFRjtNQUNBckIsaUJBQWlCLENBQUNtQixTQUFTLENBQUNFLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztJQUN6RCxDQUFDLENBQUM7O0lBRUY7SUFDQWxCLFNBQVMsQ0FBQ1MsRUFBRSxDQUFDLG1CQUFtQixFQUFFLFVBQUNDLENBQUMsRUFBSztNQUNyQyxJQUFNRyxZQUFZLEdBQUdILENBQUMsQ0FBQ1AsUUFBUSxDQUFDWSxPQUFPLENBQUMsd0NBQXdDLENBQUM7TUFDakY7TUFDQSxJQUFJRixZQUFZLEVBQUU7UUFDZDtRQUNBLElBQUlMLGVBQWUsS0FBSyxPQUFPLEVBQUU7VUFDN0JYLGlCQUFpQixDQUFDbUIsU0FBUyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCLENBQUM7VUFDbERQLENBQUMsQ0FBQ1csTUFBTSxDQUFDLENBQUM7UUFDZDtNQUNKO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQztFQUVELE9BQU87SUFDSDtJQUNBQyxJQUFJLEVBQUUsU0FBQUEsS0FBQSxFQUFZO01BQ2Q3QixpQkFBaUIsQ0FBQyxDQUFDO0lBQ3ZCO0VBQ0osQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDOztBQUVIO0FBQ0E4QixNQUFNLENBQUNDLGtCQUFrQixDQUFDLFlBQVk7RUFDbENoQyxxQkFBcUIsQ0FBQzhCLElBQUksQ0FBQyxDQUFDO0FBQ2hDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvY29yZS9qcy9jdXN0b20vZG9jdW1lbnRhdGlvbi9nZW5lcmFsL2RyYWdnYWJsZS9yZXN0cmljdGVkLmpzPzE3OWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIENsYXNzIGRlZmluaXRpb25cbnZhciBLVERyYWdnYWJsZVJlc3RyaWN0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gUHJpdmF0ZSBmdW5jdGlvbnNcbiAgICB2YXIgZXhhbXBsZVJlc3RyaWN0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRyYWdnYWJsZS16b25lJyk7XG4gICAgICAgIGNvbnN0IHJlc3RyY2l0ZWRXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZHJhZ2dhYmxlLWxldmVsPVwicmVzdHJpY3RlZFwiXScpO1xuXG4gICAgICAgIGlmIChjb250YWluZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRyb3BwYWJsZSA9IG5ldyBEcm9wcGFibGUuZGVmYXVsdChjb250YWluZXJzLCB7XG4gICAgICAgICAgICBkcmFnZ2FibGU6ICcuZHJhZ2dhYmxlJyxcbiAgICAgICAgICAgIGRyb3B6b25lOiAnLmRyYWdnYWJsZS16b25lJyxcbiAgICAgICAgICAgIGhhbmRsZTogJy5kcmFnZ2FibGUgLmRyYWdnYWJsZS1oYW5kbGUnLFxuICAgICAgICAgICAgbWlycm9yOiB7XG4gICAgICAgICAgICAgICAgLy9hcHBlbmRUbzogc2VsZWN0b3IsXG4gICAgICAgICAgICAgICAgYXBwZW5kVG86ICdib2R5JyxcbiAgICAgICAgICAgICAgICBjb25zdHJhaW5EaW1lbnNpb25zOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIERlZmluZSBkcmFnZ2FibGUgZWxlbWVudCB2YXJpYWJsZSBmb3IgcGVybWlzc2lvbnMgbGV2ZWxcbiAgICAgICAgbGV0IGRyb3BwYWJsZU9yaWdpbjtcblxuICAgICAgICAvLyBIYW5kbGUgZHJhZyBzdGFydCBldmVudCAtLSBtb3JlIGluZm86IGh0dHBzOi8vc2hvcGlmeS5naXRodWIuaW8vZHJhZ2dhYmxlL2RvY3MvY2xhc3Mvc3JjL0RyYWdnYWJsZS9EcmFnRXZlbnQvRHJhZ0V2ZW50LmpzfkRyYWdFdmVudC5odG1sXG4gICAgICAgIGRyb3BwYWJsZS5vbignZHJhZzpzdGFydCcsIChlKSA9PiB7XG4gICAgICAgICAgICBkcm9wcGFibGVPcmlnaW4gPSBlLm9yaWdpbmFsU291cmNlLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1kcmFnZ2FibGUtbGV2ZWwnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSGFuZGxlIGRyYWcgb3ZlciBldmVudCAtLSBtb3JlIGluZm86IGh0dHBzOi8vc2hvcGlmeS5naXRodWIuaW8vZHJhZ2dhYmxlL2RvY3MvY2xhc3Mvc3JjL0RyYWdnYWJsZS9EcmFnRXZlbnQvRHJhZ0V2ZW50LmpzfkRyYWdPdmVyRXZlbnQuaHRtbFxuICAgICAgICBkcm9wcGFibGUub24oJ2RyYWc6b3ZlcicsIChlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpc1Jlc3RyaWN0ZWQgPSBlLm92ZXJDb250YWluZXIuY2xvc2VzdCgnW2RhdGEta3QtZHJhZ2dhYmxlLWxldmVsPVwicmVzdHJpY3RlZFwiXScpO1xuICAgICAgICAgICAgaWYgKGlzUmVzdHJpY3RlZCkge1xuICAgICAgICAgICAgICAgIGlmIChkcm9wcGFibGVPcmlnaW4gIT09ICdhZG1pbicpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdHJjaXRlZFdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnYmctbGlnaHQtZGFuZ2VyJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdHJjaXRlZFdyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgnYmctbGlnaHQtZGFuZ2VyJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN0cmNpdGVkV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKCdiZy1saWdodC1kYW5nZXInKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSGFuZGxlIGRyYWcgc3RvcCBldmVudCAtLSBtb3JlIGluZm86IGh0dHBzOi8vc2hvcGlmeS5naXRodWIuaW8vZHJhZ2dhYmxlL2RvY3MvY2xhc3Mvc3JjL0RyYWdnYWJsZS9EcmFnRXZlbnQvRHJhZ0V2ZW50LmpzfkRyYWdTdG9wRXZlbnQuaHRtbFxuICAgICAgICBkcm9wcGFibGUub24oJ2RyYWc6c3RvcCcsIChlKSA9PiB7XG4gICAgICAgICAgICAvLyByZW1vdmUgYWxsIGRyYWdnYWJsZSBvY2N1cGllZCBsaW1pdFxuICAgICAgICAgICAgY29udGFpbmVycy5mb3JFYWNoKGMgPT4ge1xuICAgICAgICAgICAgICAgIGMuY2xhc3NMaXN0LnJlbW92ZSgnZHJhZ2dhYmxlLWRyb3B6b25lLS1vY2N1cGllZCcpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSByZXN0cmljdGVkIGFsZXJ0XG4gICAgICAgICAgICByZXN0cmNpdGVkV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKCdiZy1saWdodC1kYW5nZXInKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSGFuZGxlIGRyb3AgZXZlbnQgLS0gaHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby9kcmFnZ2FibGUvZG9jcy9jbGFzcy9zcmMvRHJvcHBhYmxlL0Ryb3BwYWJsZUV2ZW50L0Ryb3BwYWJsZUV2ZW50LmpzfkRyb3BwYWJsZURyb3BwZWRFdmVudC5odG1sXG4gICAgICAgIGRyb3BwYWJsZS5vbignZHJvcHBhYmxlOmRyb3BwZWQnLCAoZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaXNSZXN0cmljdGVkID0gZS5kcm9wem9uZS5jbG9zZXN0KCdbZGF0YS1rdC1kcmFnZ2FibGUtbGV2ZWw9XCJyZXN0cmljdGVkXCJdJyk7XG4gICAgICAgICAgICAvLyBEZXRlY3QgaWYgZHJvcCBjb250YWluZXIgaXMgcmVzdHJpY3RlZFxuICAgICAgICAgICAgaWYgKGlzUmVzdHJpY3RlZCkge1xuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGRyYWdnZWQgZWxlbWVudCBoYXMgcGVybWlzc2lvbiBsZXZlbFxuICAgICAgICAgICAgICAgIGlmIChkcm9wcGFibGVPcmlnaW4gIT09ICdhZG1pbicpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdHJjaXRlZFdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnYmctbGlnaHQtZGFuZ2VyJyk7XG4gICAgICAgICAgICAgICAgICAgIGUuY2FuY2VsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvLyBQdWJsaWMgRnVuY3Rpb25zXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGV4YW1wbGVSZXN0cmljdGVkKCk7XG4gICAgICAgIH1cbiAgICB9O1xufSgpO1xuXG4vLyBPbiBkb2N1bWVudCByZWFkeVxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XG4gICAgS1REcmFnZ2FibGVSZXN0cmljdGVkLmluaXQoKTtcbn0pO1xuIl0sIm5hbWVzIjpbIktURHJhZ2dhYmxlUmVzdHJpY3RlZCIsImV4YW1wbGVSZXN0cmljdGVkIiwiY29udGFpbmVycyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInJlc3RyY2l0ZWRXcmFwcGVyIiwicXVlcnlTZWxlY3RvciIsImxlbmd0aCIsImRyb3BwYWJsZSIsIkRyb3BwYWJsZSIsImRyYWdnYWJsZSIsImRyb3B6b25lIiwiaGFuZGxlIiwibWlycm9yIiwiYXBwZW5kVG8iLCJjb25zdHJhaW5EaW1lbnNpb25zIiwiZHJvcHBhYmxlT3JpZ2luIiwib24iLCJlIiwib3JpZ2luYWxTb3VyY2UiLCJnZXRBdHRyaWJ1dGUiLCJpc1Jlc3RyaWN0ZWQiLCJvdmVyQ29udGFpbmVyIiwiY2xvc2VzdCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImZvckVhY2giLCJjIiwiY2FuY2VsIiwiaW5pdCIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/draggable/restricted.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/draggable/restricted.js":
/*!****************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/draggable/restricted.js ***!
  \****************************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/draggable/restricted.js\": (\n    /*!***************************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/draggable/restricted.js ***!\n      \\***************************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralDraggableRestrictedJs() {\n      eval(\" // Class definition\\n\\nvar KTDraggableRestricted = function () {\\n  // Private functions\\n  var exampleRestricted = function exampleRestricted() {\\n    var containers = document.querySelectorAll('.draggable-zone');\\n    var restrcitedWrapper = document.querySelector('[data-kt-draggable-level=\\\"restricted\\\"]');\\n\\n    if (containers.length === 0) {\\n      return false;\\n    }\\n\\n    var droppable = new Droppable[\\\"default\\\"](containers, {\\n      draggable: '.draggable',\\n      dropzone: '.draggable-zone',\\n      handle: '.draggable .draggable-handle',\\n      mirror: {\\n        //appendTo: selector,\\n        appendTo: 'body',\\n        constrainDimensions: true\\n      }\\n    }); // Define draggable element variable for permissions level\\n\\n    var droppableOrigin; // Handle drag start event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragEvent.html\\n\\n    droppable.on('drag:start', function (e) {\\n      droppableOrigin = e.originalSource.getAttribute('data-kt-draggable-level');\\n    }); // Handle drag over event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragOverEvent.html\\n\\n    droppable.on('drag:over', function (e) {\\n      var isRestricted = e.overContainer.closest('[data-kt-draggable-level=\\\"restricted\\\"]');\\n\\n      if (isRestricted) {\\n        if (droppableOrigin !== 'admin') {\\n          restrcitedWrapper.classList.add('bg-light-danger');\\n        } else {\\n          restrcitedWrapper.classList.remove('bg-light-danger');\\n        }\\n      } else {\\n        restrcitedWrapper.classList.remove('bg-light-danger');\\n      }\\n    }); // Handle drag stop event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragStopEvent.html\\n\\n    droppable.on('drag:stop', function (e) {\\n      // remove all draggable occupied limit\\n      containers.forEach(function (c) {\\n        c.classList.remove('draggable-dropzone--occupied');\\n      }); // Remove restricted alert\\n\\n      restrcitedWrapper.classList.remove('bg-light-danger');\\n    }); // Handle drop event -- https://shopify.github.io/draggable/docs/class/src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent.html\\n\\n    droppable.on('droppable:dropped', function (e) {\\n      var isRestricted = e.dropzone.closest('[data-kt-draggable-level=\\\"restricted\\\"]'); // Detect if drop container is restricted\\n\\n      if (isRestricted) {\\n        // Check if dragged element has permission level\\n        if (droppableOrigin !== 'admin') {\\n          restrcitedWrapper.classList.add('bg-light-danger');\\n          e.cancel();\\n        }\\n      }\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleRestricted();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTDraggableRestricted.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/draggable/restricted.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/draggable/restricted.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/draggable/restricted.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/draggable/restricted.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/draggable/restricted.js"]();
/******/ 	
/******/ })()
;