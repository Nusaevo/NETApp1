/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/jkanban/rich.js":
/*!*******************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/jkanban/rich.js ***!
  \*******************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTJKanbanDemoRich = function () {\n  // Private functions\n  var exampleRich = function exampleRich() {\n    var kanban = new jKanban({\n      element: '#kt_docs_jkanban_rich',\n      gutter: '0',\n      click: function click(el) {\n        alert(el.innerHTML);\n      },\n      boards: [{\n        'id': '_backlog',\n        'title': 'Backlog',\n        'class': 'light-dark',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-6.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">SEO Optimization</span>\\n                        \\t            <span class=\\\"badge badge-light-success\\\">In progress</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <span class=\\\"symbol-label fs-4\\\">A.D</span>\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Finance</span>\\n                        \\t            <span class=\\\"badge badge-light-danger\\\">Pending</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \"\n        }]\n      }, {\n        'id': '_todo',\n        'title': 'To Do',\n        'class': 'light-danger',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-1.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Server Setup</span>\\n                        \\t            <span class=\\\"badge badge-light-info\\\">Completed</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-2.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Report Generation</span>\\n                        \\t            <span class=\\\"badge badge-light-warning\\\">Due</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }]\n      }, {\n        'id': '_working',\n        'title': 'Working',\n        'class': 'light-primary',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                            \\t         <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-6.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Marketing</span>\\n                        \\t            <span class=\\\"badge badge-light-danger\\\">Planning</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-light-info me-3\\\">\\n                        \\t            <span class=\\\"symbol-label fs-4\\\">A.P</span>\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Finance</span>\\n                        \\t            <span class=\\\"badge badge-light-primary\\\">Done</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \"\n        }]\n      }, {\n        'id': '_done',\n        'title': 'Done',\n        'class': 'light-success',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-5.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">SEO Optimization</span>\\n                        \\t            <span class=\\\"badge badge-light-success\\\">In progress</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-success me-3\\\">\\n                        \\t            <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-20.jpg\\\" />\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Product Team</span>\\n                        \\t            <span class=\\\"badge badge-light-danger\\\">In progress</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \")\n        }]\n      }, {\n        'id': '_deploy',\n        'title': 'Deploy',\n        'class': 'light-primary',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-light-warning me-3\\\">\\n                        \\t            <span class=\\\"symbol-label fs-4\\\">D.L</span>\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">SEO Optimization</span>\\n                        \\t            <span class=\\\"badge badge-light-success\\\">In progress</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \"\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                        \\t        <div class=\\\"symbol symbol-light-danger me-3\\\">\\n                        \\t            <span class=\\\"symbol-label fs-4\\\">E.K</span>\\n                        \\t        </div>\\n                        \\t        <div class=\\\"d-flex flex-column align-items-start\\\">\\n                        \\t            <span class=\\\"text-dark-50 fw-bold mb-1\\\">Requirement Study</span>\\n                        \\t            <span class=\\\"badge badge-light-warning\\\">Scheduled</span>\\n                        \\t        </div>\\n                        \\t    </div>\\n                            \"\n        }]\n      }]\n    });\n    var toDoButton = document.getElementById('addToDo');\n    toDoButton.addEventListener('click', function () {\n      kanban.addElement('_todo', {\n        'title': \"\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                            <div class=\\\"symbol symbol-light-primary me-3\\\">\\n                                <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-23.jpg\\\" />\\n                            </div>\\n                            <div class=\\\"d-flex flex-column align-items-start\\\">\\n                                <span class=\\\"text-dark-50 fw-bold mb-1\\\">Requirement Study</span>\\n                                <span class=\\\"badge badge-light-success\\\">Scheduled</span>\\n                            </div>\\n                        </div>\\n                    \")\n      });\n    });\n    var addBoardDefault = document.getElementById('addDefault');\n    addBoardDefault.addEventListener('click', function () {\n      kanban.addBoards([{\n        'id': '_default',\n        'title': 'New Board',\n        'class': 'light-primary',\n        'item': [{\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                                    <div class=\\\"symbol symbol-success me-3\\\">\\n                                        <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-12.jpg\\\" />\\n                                    </div>\\n                                    <div class=\\\"d-flex flex-column align-items-start\\\">\\n                                        <span class=\\\"text-dark-50 fw-bold mb-1\\\">Payment Modules</span>\\n                                        <span class=\\\"badge badge-light-primary\\\">In development</span>\\n                                    </div>\\n                                </div>\\n                        \")\n        }, {\n          'title': \"\\n                                <div class=\\\"d-flex align-items-center\\\">\\n                                    <div class=\\\"symbol symbol-success me-3\\\">\\n                                        <img alt=\\\"Pic\\\" src=\\\"\".concat(hostUrl, \"media/avatars/300-9.jpg\\\" />\\n                                    </div>\\n                                    <div class=\\\"d-flex flex-column align-items-start\\\">\\n                                    <span class=\\\"text-dark-50 fw-bold mb-1\\\">New Project</span>\\n                                    <span class=\\\"badge badge-light-danger\\\">Pending</span>\\n                                </div>\\n                            </div>\\n                        \")\n        }]\n      }]);\n    });\n    var removeBoard = document.getElementById('removeBoard');\n    removeBoard.addEventListener('click', function () {\n      kanban.removeBoard('_done');\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleRich();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTJKanbanDemoRich.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/jkanban/rich.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/jkanban/rich.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/jkanban/rich.js ***!
  \********************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/jkanban/rich.js\": (\n    /*!*******************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/jkanban/rich.js ***!\n      \\*******************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralJkanbanRichJs() {\n      eval(\" // Class definition\\n\\nvar KTJKanbanDemoRich = function () {\\n  // Private functions\\n  var exampleRich = function exampleRich() {\\n    var kanban = new jKanban({\\n      element: '#kt_docs_jkanban_rich',\\n      gutter: '0',\\n      click: function click(el) {\\n        alert(el.innerHTML);\\n      },\\n      boards: [{\\n        'id': '_backlog',\\n        'title': 'Backlog',\\n        'class': 'light-dark',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-6.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">SEO Optimization</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-success\\\\\\\">In progress</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"symbol-label fs-4\\\\\\\">A.D</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Finance</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-danger\\\\\\\">Pending</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\"\\n        }]\\n      }, {\\n        'id': '_todo',\\n        'title': 'To Do',\\n        'class': 'light-danger',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-1.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Server Setup</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-info\\\\\\\">Completed</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-2.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Report Generation</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-warning\\\\\\\">Due</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }]\\n      }, {\\n        'id': '_working',\\n        'title': 'Working',\\n        'class': 'light-primary',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                            \\\\t         <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-6.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Marketing</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-danger\\\\\\\">Planning</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-light-info me-3\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"symbol-label fs-4\\\\\\\">A.P</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Finance</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-primary\\\\\\\">Done</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\"\\n        }]\\n      }, {\\n        'id': '_done',\\n        'title': 'Done',\\n        'class': 'light-success',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-5.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">SEO Optimization</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-success\\\\\\\">In progress</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                        \\\\t            <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-20.jpg\\\\\\\" />\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Product Team</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-danger\\\\\\\">In progress</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\")\\n        }]\\n      }, {\\n        'id': '_deploy',\\n        'title': 'Deploy',\\n        'class': 'light-primary',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-light-warning me-3\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"symbol-label fs-4\\\\\\\">D.L</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">SEO Optimization</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-success\\\\\\\">In progress</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\"\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                        \\\\t        <div class=\\\\\\\"symbol symbol-light-danger me-3\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"symbol-label fs-4\\\\\\\">E.K</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t        <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                        \\\\t            <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Requirement Study</span>\\\\n                        \\\\t            <span class=\\\\\\\"badge badge-light-warning\\\\\\\">Scheduled</span>\\\\n                        \\\\t        </div>\\\\n                        \\\\t    </div>\\\\n                            \\\"\\n        }]\\n      }]\\n    });\\n    var toDoButton = document.getElementById('addToDo');\\n    toDoButton.addEventListener('click', function () {\\n      kanban.addElement('_todo', {\\n        'title': \\\"\\\\n                        <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                            <div class=\\\\\\\"symbol symbol-light-primary me-3\\\\\\\">\\\\n                                <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-23.jpg\\\\\\\" />\\\\n                            </div>\\\\n                            <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                                <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Requirement Study</span>\\\\n                                <span class=\\\\\\\"badge badge-light-success\\\\\\\">Scheduled</span>\\\\n                            </div>\\\\n                        </div>\\\\n                    \\\")\\n      });\\n    });\\n    var addBoardDefault = document.getElementById('addDefault');\\n    addBoardDefault.addEventListener('click', function () {\\n      kanban.addBoards([{\\n        'id': '_default',\\n        'title': 'New Board',\\n        'class': 'light-primary',\\n        'item': [{\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                                    <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                                        <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-12.jpg\\\\\\\" />\\\\n                                    </div>\\\\n                                    <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                                        <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">Payment Modules</span>\\\\n                                        <span class=\\\\\\\"badge badge-light-primary\\\\\\\">In development</span>\\\\n                                    </div>\\\\n                                </div>\\\\n                        \\\")\\n        }, {\\n          'title': \\\"\\\\n                                <div class=\\\\\\\"d-flex align-items-center\\\\\\\">\\\\n                                    <div class=\\\\\\\"symbol symbol-success me-3\\\\\\\">\\\\n                                        <img alt=\\\\\\\"Pic\\\\\\\" src=\\\\\\\"\\\".concat(hostUrl, \\\"media/avatars/300-9.jpg\\\\\\\" />\\\\n                                    </div>\\\\n                                    <div class=\\\\\\\"d-flex flex-column align-items-start\\\\\\\">\\\\n                                    <span class=\\\\\\\"text-dark-50 fw-bold mb-1\\\\\\\">New Project</span>\\\\n                                    <span class=\\\\\\\"badge badge-light-danger\\\\\\\">Pending</span>\\\\n                                </div>\\\\n                            </div>\\\\n                        \\\")\\n        }]\\n      }]);\\n    });\\n    var removeBoard = document.getElementById('removeBoard');\\n    removeBoard.addEventListener('click', function () {\\n      kanban.removeBoard('_done');\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleRich();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTJKanbanDemoRich.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/jkanban/rich.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/jkanban/rich.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/jkanban/rich.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/jkanban/rich.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/jkanban/rich.js"]();
/******/ 	
/******/ })()
;