/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/general/sweetalert.js":
/*!*****************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/general/sweetalert.js ***!
  \*****************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTGeneralSweetAlertDemos = function () {\n  // Private functions\n  var exampleBasic = function exampleBasic() {\n    var button = document.getElementById('kt_docs_sweetalert_basic');\n    button.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's a basic example of SweetAlert!\",\n        icon: \"success\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-primary\"\n        }\n      });\n    });\n  };\n  var exampleHtml = function exampleHtml() {\n    var button = document.getElementById('kt_docs_sweetalert_html');\n    button.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        html: 'A SweetAlert content with <strong>bold text</strong>, <a href=\"#\">links</a> or any of our available <span class=\"badge badge-primary\">components</span>',\n        icon: \"info\",\n        buttonsStyling: false,\n        showCancelButton: true,\n        confirmButtonText: \"Ok, got it!\",\n        cancelButtonText: 'Nope, cancel it',\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          cancelButton: 'btn btn-danger'\n        }\n      });\n    });\n  };\n  var exampleStates = function exampleStates() {\n    // Select buttons\n    var infoButton = document.getElementById('kt_docs_sweetalert_state_info');\n    var warningButton = document.getElementById('kt_docs_sweetalert_state_warning');\n    var errorButton = document.getElementById('kt_docs_sweetalert_state_error');\n    var successButton = document.getElementById('kt_docs_sweetalert_state_success');\n    var questionButton = document.getElementById('kt_docs_sweetalert_state_question');\n\n    // Click action handlers\n    infoButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's an example of an info SweetAlert!\",\n        icon: \"info\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-info\"\n        }\n      });\n    });\n    warningButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's an example of a warning SweetAlert!\",\n        icon: \"warning\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-warning\"\n        }\n      });\n    });\n    errorButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's an example of an error SweetAlert!\",\n        icon: \"error\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-danger\"\n        }\n      });\n    });\n    successButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's an example of a success SweetAlert!\",\n        icon: \"success\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-success\"\n        }\n      });\n    });\n    questionButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Here's an example of a question SweetAlert!\",\n        icon: \"question\",\n        buttonsStyling: false,\n        confirmButtonText: \"Ok, got it!\",\n        customClass: {\n          confirmButton: \"btn btn-primary\"\n        }\n      });\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleBasic();\n      exampleHtml();\n      exampleStates();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTGeneralSweetAlertDemos.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/sweetalert.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/general/sweetalert.js":
/*!******************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/general/sweetalert.js ***!
  \******************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/general/sweetalert.js\": (\n    /*!*****************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/general/sweetalert.js ***!\n      \\*****************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationGeneralSweetalertJs() {\n      eval(\" // Class definition\\n\\nvar KTGeneralSweetAlertDemos = function () {\\n  // Private functions\\n  var exampleBasic = function exampleBasic() {\\n    var button = document.getElementById('kt_docs_sweetalert_basic');\\n    button.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's a basic example of SweetAlert!\\\",\\n        icon: \\\"success\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-primary\\\"\\n        }\\n      });\\n    });\\n  };\\n\\n  var exampleHtml = function exampleHtml() {\\n    var button = document.getElementById('kt_docs_sweetalert_html');\\n    button.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        html: 'A SweetAlert content with <strong>bold text</strong>, <a href=\\\"#\\\">links</a> or any of our available <span class=\\\"badge badge-primary\\\">components</span>',\\n        icon: \\\"info\\\",\\n        buttonsStyling: false,\\n        showCancelButton: true,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        cancelButtonText: 'Nope, cancel it',\\n        customClass: {\\n          confirmButton: \\\"btn btn-primary\\\",\\n          cancelButton: 'btn btn-danger'\\n        }\\n      });\\n    });\\n  };\\n\\n  var exampleStates = function exampleStates() {\\n    // Select buttons\\n    var infoButton = document.getElementById('kt_docs_sweetalert_state_info');\\n    var warningButton = document.getElementById('kt_docs_sweetalert_state_warning');\\n    var errorButton = document.getElementById('kt_docs_sweetalert_state_error');\\n    var successButton = document.getElementById('kt_docs_sweetalert_state_success');\\n    var questionButton = document.getElementById('kt_docs_sweetalert_state_question'); // Click action handlers\\n\\n    infoButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's an example of an info SweetAlert!\\\",\\n        icon: \\\"info\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-info\\\"\\n        }\\n      });\\n    });\\n    warningButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's an example of a warning SweetAlert!\\\",\\n        icon: \\\"warning\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-warning\\\"\\n        }\\n      });\\n    });\\n    errorButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's an example of an error SweetAlert!\\\",\\n        icon: \\\"error\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-danger\\\"\\n        }\\n      });\\n    });\\n    successButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's an example of a success SweetAlert!\\\",\\n        icon: \\\"success\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-success\\\"\\n        }\\n      });\\n    });\\n    questionButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Here's an example of a question SweetAlert!\\\",\\n        icon: \\\"question\\\",\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Ok, got it!\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-primary\\\"\\n        }\\n      });\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleBasic();\\n      exampleHtml();\\n      exampleStates();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTGeneralSweetAlertDemos.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/general/sweetalert.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/general/sweetalert.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/general/sweetalert.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/general/sweetalert.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/general/sweetalert.js"]();
/******/ 	
/******/ })()
;