/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js":
/*!*************************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js ***!
  \*************************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTFlotDemoTracking = function () {\n  // Private functions\n  var exampleTracking = function exampleTracking() {\n    var sin = [],\n      cos = [];\n    for (var i = 0; i < 14; i += 0.1) {\n      sin.push([i, Math.sin(i)]);\n      cos.push([i, Math.cos(i)]);\n    }\n    var plot = $.plot($(\"#kt_docs_flot_tracking\"), [{\n      data: sin,\n      label: \"sin(x) = -0.00\",\n      lines: {\n        lineWidth: 1\n      },\n      shadowSize: 0\n    }, {\n      data: cos,\n      label: \"cos(x) = -0.00\",\n      lines: {\n        lineWidth: 1\n      },\n      shadowSize: 0\n    }], {\n      colors: [KTUtil.getCssVariableValue('--bs-active-primary'), KTUtil.getCssVariableValue('--bs-active-warning')],\n      series: {\n        lines: {\n          show: true\n        }\n      },\n      crosshair: {\n        mode: \"x\"\n      },\n      grid: {\n        hoverable: true,\n        autoHighlight: false,\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        borderColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        borderWidth: 1\n      },\n      yaxis: {\n        min: -1.2,\n        max: 1.2\n      }\n    });\n    var legends = $(\"#kt_docs_flot_tracking .legendLabel\");\n    legends.each(function () {\n      // fix the widths so they don't jump around\n      $(this).css('width', $(this).width());\n    });\n    var updateLegendTimeout = null;\n    var latestPosition = null;\n    function updateLegend() {\n      updateLegendTimeout = null;\n      var pos = latestPosition;\n      var axes = plot.getAxes();\n      if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max || pos.y < axes.yaxis.min || pos.y > axes.yaxis.max) return;\n      var i,\n        j,\n        dataset = plot.getData();\n      for (i = 0; i < dataset.length; ++i) {\n        var series = dataset[i];\n\n        // find the nearest points, x-wise\n        for (j = 0; j < series.data.length; ++j) if (series.data[j][0] > pos.x) break;\n\n        // now interpolate\n        var y,\n          p1 = series.data[j - 1],\n          p2 = series.data[j];\n        if (p1 == null) y = p2[1];else if (p2 == null) y = p1[1];else y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);\n        legends.eq(i).text(series.label.replace(/=.*/, \"= \" + y.toFixed(2)));\n      }\n    }\n    $(\"#kt_docs_flot_tracking\").bind(\"plothover\", function (event, pos, item) {\n      latestPosition = pos;\n      if (!updateLegendTimeout) updateLegendTimeout = setTimeout(updateLegend, 50);\n    });\n  };\n  return {\n    // Public Functions\n    init: function init() {\n      exampleTracking();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTFlotDemoTracking.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/charts/flotcharts/tracking.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/charts/flotcharts/tracking.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js\": (\n    /*!*************************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js ***!\n      \\*************************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationChartsFlotchartsTrackingJs() {\n      eval(\" // Class definition\\n\\nvar KTFlotDemoTracking = function () {\\n  // Private functions\\n  var exampleTracking = function exampleTracking() {\\n    var sin = [],\\n        cos = [];\\n\\n    for (var i = 0; i < 14; i += 0.1) {\\n      sin.push([i, Math.sin(i)]);\\n      cos.push([i, Math.cos(i)]);\\n    }\\n\\n    var plot = $.plot($(\\\"#kt_docs_flot_tracking\\\"), [{\\n      data: sin,\\n      label: \\\"sin(x) = -0.00\\\",\\n      lines: {\\n        lineWidth: 1\\n      },\\n      shadowSize: 0\\n    }, {\\n      data: cos,\\n      label: \\\"cos(x) = -0.00\\\",\\n      lines: {\\n        lineWidth: 1\\n      },\\n      shadowSize: 0\\n    }], {\\n      colors: [KTUtil.getCssVariableValue('--bs-active-primary'), KTUtil.getCssVariableValue('--bs-active-warning')],\\n      series: {\\n        lines: {\\n          show: true\\n        }\\n      },\\n      crosshair: {\\n        mode: \\\"x\\\"\\n      },\\n      grid: {\\n        hoverable: true,\\n        autoHighlight: false,\\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\\n        borderColor: KTUtil.getCssVariableValue('--bs-light-dark'),\\n        borderWidth: 1\\n      },\\n      yaxis: {\\n        min: -1.2,\\n        max: 1.2\\n      }\\n    });\\n    var legends = $(\\\"#kt_docs_flot_tracking .legendLabel\\\");\\n    legends.each(function () {\\n      // fix the widths so they don't jump around\\n      $(this).css('width', $(this).width());\\n    });\\n    var updateLegendTimeout = null;\\n    var latestPosition = null;\\n\\n    function updateLegend() {\\n      updateLegendTimeout = null;\\n      var pos = latestPosition;\\n      var axes = plot.getAxes();\\n      if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max || pos.y < axes.yaxis.min || pos.y > axes.yaxis.max) return;\\n      var i,\\n          j,\\n          dataset = plot.getData();\\n\\n      for (i = 0; i < dataset.length; ++i) {\\n        var series = dataset[i]; // find the nearest points, x-wise\\n\\n        for (j = 0; j < series.data.length; ++j) {\\n          if (series.data[j][0] > pos.x) break;\\n        } // now interpolate\\n\\n\\n        var y,\\n            p1 = series.data[j - 1],\\n            p2 = series.data[j];\\n        if (p1 == null) y = p2[1];else if (p2 == null) y = p1[1];else y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);\\n        legends.eq(i).text(series.label.replace(/=.*/, \\\"= \\\" + y.toFixed(2)));\\n      }\\n    }\\n\\n    $(\\\"#kt_docs_flot_tracking\\\").bind(\\\"plothover\\\", function (event, pos, item) {\\n      latestPosition = pos;\\n      if (!updateLegendTimeout) updateLegendTimeout = setTimeout(updateLegend, 50);\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleTracking();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTFlotDemoTracking.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/charts/flotcharts/tracking.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/charts/flotcharts/tracking.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/charts/flotcharts/tracking.js"]();
/******/ 	
/******/ })()
;