/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js":
/*!**********************************************************************************!*\
  !*** ./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js ***!
  \**********************************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTFlotDemoBasic = function () {\n  // Private functions\n  var exampleBasic = function exampleBasic() {\n    var data = [];\n    var totalPoints = 250; // random data generator for plot charts\n\n    function getRandomData() {\n      if (data.length > 0) data = data.slice(1); // do a random walk\n\n      while (data.length < totalPoints) {\n        var prev = data.length > 0 ? data[data.length - 1] : 50;\n        var y = prev + Math.random() * 10 - 5;\n        if (y < 0) y = 0;\n        if (y > 100) y = 100;\n        data.push(y);\n      } // zip the generated y values with the x values\n\n\n      var res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push([i, data[i]]);\n      }\n\n      return res;\n    }\n\n    var d1 = [];\n\n    for (var i = 0; i < Math.PI * 2; i += 0.25) {\n      d1.push([i, Math.sin(i)]);\n    }\n\n    var d2 = [];\n\n    for (var i = 0; i < Math.PI * 2; i += 0.25) {\n      d2.push([i, Math.cos(i)]);\n    }\n\n    var d3 = [];\n\n    for (var i = 0; i < Math.PI * 2; i += 0.1) {\n      d3.push([i, Math.tan(i)]);\n    }\n\n    $.plot($(\"#kt_docs_flot_basic\"), [{\n      label: \"sin(x)\",\n      data: d1,\n      lines: {\n        lineWidth: 1\n      },\n      shadowSize: 0\n    }, {\n      label: \"cos(x)\",\n      data: d2,\n      lines: {\n        lineWidth: 1\n      },\n      shadowSize: 0\n    }, {\n      label: \"tan(x)\",\n      data: d3,\n      lines: {\n        lineWidth: 1\n      },\n      shadowSize: 0\n    }], {\n      colors: [KTUtil.getCssVariableValue('--bs-active-success'), KTUtil.getCssVariableValue('--bs-active-primary'), KTUtil.getCssVariableValue('--bs-active-danger')],\n      series: {\n        lines: {\n          show: true\n        },\n        points: {\n          show: true,\n          fill: true,\n          radius: 3,\n          lineWidth: 1\n        }\n      },\n      xaxis: {\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        ticks: [0, [Math.PI / 2, \"\\u03C0/2\"], [Math.PI, \"\\u03C0\"], [Math.PI * 3 / 2, \"3\\u03C0/2\"], [Math.PI * 2, \"2\\u03C0\"]]\n      },\n      yaxis: {\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        ticks: 10,\n        min: -2,\n        max: 2\n      },\n      grid: {\n        borderColor: KTUtil.getCssVariableValue('--bs-light-dark'),\n        borderWidth: 1\n      }\n    });\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      exampleBasic();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTFlotDemoBasic.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/documentation/charts/flotcharts/basic.js":
/*!***********************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/documentation/charts/flotcharts/basic.js ***!
  \***********************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js\":\n    /*!**********************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js ***!\r\n      \\**********************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomDocumentationChartsFlotchartsBasicJs() {\n      eval(\" // Class definition\\n\\nvar KTFlotDemoBasic = function () {\\n  // Private functions\\n  var exampleBasic = function exampleBasic() {\\n    var data = [];\\n    var totalPoints = 250; // random data generator for plot charts\\n\\n    function getRandomData() {\\n      if (data.length > 0) data = data.slice(1); // do a random walk\\n\\n      while (data.length < totalPoints) {\\n        var prev = data.length > 0 ? data[data.length - 1] : 50;\\n        var y = prev + Math.random() * 10 - 5;\\n        if (y < 0) y = 0;\\n        if (y > 100) y = 100;\\n        data.push(y);\\n      } // zip the generated y values with the x values\\n\\n\\n      var res = [];\\n\\n      for (var i = 0; i < data.length; ++i) {\\n        res.push([i, data[i]]);\\n      }\\n\\n      return res;\\n    }\\n\\n    var d1 = [];\\n\\n    for (var i = 0; i < Math.PI * 2; i += 0.25) {\\n      d1.push([i, Math.sin(i)]);\\n    }\\n\\n    var d2 = [];\\n\\n    for (var i = 0; i < Math.PI * 2; i += 0.25) {\\n      d2.push([i, Math.cos(i)]);\\n    }\\n\\n    var d3 = [];\\n\\n    for (var i = 0; i < Math.PI * 2; i += 0.1) {\\n      d3.push([i, Math.tan(i)]);\\n    }\\n\\n    $.plot($(\\\"#kt_docs_flot_basic\\\"), [{\\n      label: \\\"sin(x)\\\",\\n      data: d1,\\n      lines: {\\n        lineWidth: 1\\n      },\\n      shadowSize: 0\\n    }, {\\n      label: \\\"cos(x)\\\",\\n      data: d2,\\n      lines: {\\n        lineWidth: 1\\n      },\\n      shadowSize: 0\\n    }, {\\n      label: \\\"tan(x)\\\",\\n      data: d3,\\n      lines: {\\n        lineWidth: 1\\n      },\\n      shadowSize: 0\\n    }], {\\n      colors: [KTUtil.getCssVariableValue('--bs-active-success'), KTUtil.getCssVariableValue('--bs-active-primary'), KTUtil.getCssVariableValue('--bs-active-danger')],\\n      series: {\\n        lines: {\\n          show: true\\n        },\\n        points: {\\n          show: true,\\n          fill: true,\\n          radius: 3,\\n          lineWidth: 1\\n        }\\n      },\\n      xaxis: {\\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\\n        ticks: [0, [Math.PI / 2, \\\"\\\\u03C0/2\\\"], [Math.PI, \\\"\\\\u03C0\\\"], [Math.PI * 3 / 2, \\\"3\\\\u03C0/2\\\"], [Math.PI * 2, \\\"2\\\\u03C0\\\"]]\\n      },\\n      yaxis: {\\n        tickColor: KTUtil.getCssVariableValue('--bs-light-dark'),\\n        ticks: 10,\\n        min: -2,\\n        max: 2\\n      },\\n      grid: {\\n        borderColor: KTUtil.getCssVariableValue('--bs-light-dark'),\\n        borderWidth: 1\\n      }\\n    });\\n  };\\n\\n  return {\\n    // Public Functions\\n    init: function init() {\\n      exampleBasic();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTFlotDemoBasic.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/documentation/charts/flotcharts/basic.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/documentation/charts/flotcharts/basic.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/documentation/charts/flotcharts/basic.js"]();
/******/ 	
/******/ })()
;