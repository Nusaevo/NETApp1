/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/invoices/create.js":
/*!*****************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/invoices/create.js ***!
  \*****************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTAppInvoicesCreate = function () {\n  var form; // Private functions\n\n  var updateTotal = function updateTotal() {\n    var items = [].slice.call(form.querySelectorAll('[data-kt-element=\"items\"] [data-kt-element=\"item\"]'));\n    var grandTotal = 0;\n    var format = wNumb({\n      //prefix: '$ ',\n      decimals: 2,\n      thousand: ','\n    });\n    items.map(function (item) {\n      var quantity = item.querySelector('[data-kt-element=\"quantity\"]');\n      var price = item.querySelector('[data-kt-element=\"price\"]');\n      var priceValue = format.from(price.value);\n      priceValue = !priceValue || priceValue < 0 ? 0 : priceValue;\n      var quantityValue = parseInt(quantity.value);\n      quantityValue = !quantityValue || quantityValue < 0 ? 1 : quantityValue;\n      price.value = format.to(priceValue);\n      quantity.value = quantityValue;\n      item.querySelector('[data-kt-element=\"total\"]').innerText = format.to(priceValue * quantityValue);\n      grandTotal += priceValue * quantityValue;\n    });\n    form.querySelector('[data-kt-element=\"sub-total\"]').innerText = format.to(grandTotal);\n    form.querySelector('[data-kt-element=\"grand-total\"]').innerText = format.to(grandTotal);\n  };\n\n  var handleEmptyState = function handleEmptyState() {\n    if (form.querySelectorAll('[data-kt-element=\"items\"] [data-kt-element=\"item\"]').length === 0) {\n      var item = form.querySelector('[data-kt-element=\"empty-template\"] tr').cloneNode(true);\n      form.querySelector('[data-kt-element=\"items\"] tbody').appendChild(item);\n    } else {\n      KTUtil.remove(form.querySelector('[data-kt-element=\"items\"] [data-kt-element=\"empty\"]'));\n    }\n  };\n\n  var handeForm = function handeForm(element) {\n    // Add item\n    form.querySelector('[data-kt-element=\"items\"] [data-kt-element=\"add-item\"]').addEventListener('click', function (e) {\n      e.preventDefault();\n      var item = form.querySelector('[data-kt-element=\"item-template\"] tr').cloneNode(true);\n      form.querySelector('[data-kt-element=\"items\"] tbody').appendChild(item);\n      handleEmptyState();\n      updateTotal();\n    }); // Remove item\n\n    KTUtil.on(form, '[data-kt-element=\"items\"] [data-kt-element=\"remove-item\"]', 'click', function (e) {\n      e.preventDefault();\n      KTUtil.remove(this.closest('[data-kt-element=\"item\"]'));\n      handleEmptyState();\n      updateTotal();\n    }); // Handle price and quantity changes\n\n    KTUtil.on(form, '[data-kt-element=\"items\"] [data-kt-element=\"quantity\"], [data-kt-element=\"items\"] [data-kt-element=\"price\"]', 'change', function (e) {\n      e.preventDefault();\n      updateTotal();\n    });\n  };\n\n  var initForm = function initForm(element) {\n    // Due date. For more info, please visit the official plugin site: https://flatpickr.js.org/\n    var invoiceDate = $(form.querySelector('[name=\"invoice_date\"]'));\n    invoiceDate.flatpickr({\n      enableTime: false,\n      dateFormat: \"d, M Y\"\n    }); // Due date. For more info, please visit the official plugin site: https://flatpickr.js.org/\n\n    var dueDate = $(form.querySelector('[name=\"invoice_due_date\"]'));\n    dueDate.flatpickr({\n      enableTime: false,\n      dateFormat: \"d, M Y\"\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init(element) {\n      form = document.querySelector('#kt_invoice_form');\n      handeForm();\n      initForm();\n      updateTotal();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTAppInvoicesCreate.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvaW52b2ljZXMvY3JlYXRlLmpzLmpzIiwibWFwcGluZ3MiOiJDQUVBOztBQUNBLElBQUlBLG1CQUFtQixHQUFHLFlBQVk7QUFDbEMsTUFBSUMsSUFBSixDQURrQyxDQUdyQzs7QUFDQSxNQUFJQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFXO0FBQzVCLFFBQUlDLEtBQUssR0FBRyxHQUFHQyxLQUFILENBQVNDLElBQVQsQ0FBY0osSUFBSSxDQUFDSyxnQkFBTCxDQUFzQixvREFBdEIsQ0FBZCxDQUFaO0FBQ0EsUUFBSUMsVUFBVSxHQUFHLENBQWpCO0FBRUEsUUFBSUMsTUFBTSxHQUFHQyxLQUFLLENBQUM7QUFDbEI7QUFDQUMsTUFBQUEsUUFBUSxFQUFFLENBRlE7QUFHbEJDLE1BQUFBLFFBQVEsRUFBRTtBQUhRLEtBQUQsQ0FBbEI7QUFNQVIsSUFBQUEsS0FBSyxDQUFDUyxHQUFOLENBQVUsVUFBVUMsSUFBVixFQUFnQjtBQUNoQixVQUFJQyxRQUFRLEdBQUdELElBQUksQ0FBQ0UsYUFBTCxDQUFtQiw4QkFBbkIsQ0FBZjtBQUNULFVBQUlDLEtBQUssR0FBR0gsSUFBSSxDQUFDRSxhQUFMLENBQW1CLDJCQUFuQixDQUFaO0FBRUEsVUFBSUUsVUFBVSxHQUFHVCxNQUFNLENBQUNVLElBQVAsQ0FBWUYsS0FBSyxDQUFDRyxLQUFsQixDQUFqQjtBQUNBRixNQUFBQSxVQUFVLEdBQUksQ0FBQ0EsVUFBRCxJQUFlQSxVQUFVLEdBQUcsQ0FBN0IsR0FBa0MsQ0FBbEMsR0FBc0NBLFVBQW5EO0FBRUEsVUFBSUcsYUFBYSxHQUFHQyxRQUFRLENBQUNQLFFBQVEsQ0FBQ0ssS0FBVixDQUE1QjtBQUNBQyxNQUFBQSxhQUFhLEdBQUksQ0FBQ0EsYUFBRCxJQUFrQkEsYUFBYSxHQUFHLENBQW5DLEdBQXlDLENBQXpDLEdBQTZDQSxhQUE3RDtBQUVBSixNQUFBQSxLQUFLLENBQUNHLEtBQU4sR0FBY1gsTUFB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QUZTLEtBQXRCLEVBSGdDLENBUTFCOztBQUNOLFFBQUlDLE9BQU8sR0FBR0osQ0FBQyxDQUFDdEMsSUFBSSxDQUFDYyxhQUFMLENBQW1CLDJCQUFuQixDQUFELENBQWY7QUFDQTRCLElBQUFBLE9BQU8sQ0FBQ0gsU0FBUixDQUFrQjtBQUNqQkMsTUFBQUEsVUFBVSxFQUFFLEtBREs7QUFFakJDLE1BQUFBLFVBQVUsRUFBRTtBQUZLLEtBQWxCO0FBSUEsR0FkRCxDQTVFcUMsQ0E0RnJDOzs7QUFDQSxTQUFPO0FBQ05FLElBQUFBLElBQUksRUFBRSxjQUFTYixPQUFULEVBQWtCO0FBQ2Q5QixNQUFBQSxJQUFJLEdBQUc0QyxRQUFRLENBQUM5QixhQUFULENBQXVCLGtCQUF2QixDQUFQO0FBRVRlLE1BQUFBLFNBQVM7QUFDQU8sTUFBQUEsUUFBUTtBQUNqQm5DLE1BQUFBLFdBQVc7QUFDTDtBQVBELEdBQVA7QUFTQSxDQXRHeUIsRUFBMUIsQyxDQXdHQTs7O0FBQ0EwQixNQUFNLENBQUNrQixrQkFBUCxDQUEwQixZQUFZO0FBQ2xDOUMsRUFBQUEsbUJBQW1CLENBQUM0QyxJQUFwQjtBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvaW52b2ljZXMvY3JlYXRlLmpzPzEwODAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVEFwcEludm9pY2VzQ3JlYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGZvcm07XHJcblxyXG5cdC8vIFByaXZhdGUgZnVuY3Rpb25zXHJcblx0dmFyIHVwZGF0ZVRvdGFsID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaXRlbXMgPSBbXS5zbGljZS5jYWxsKGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykpO1xyXG5cdFx0dmFyIGdyYW5kVG90YWwgPSAwO1xyXG5cclxuXHRcdHZhciBmb3JtYXQgPSB3TnVtYih7XHJcblx0XHRcdC8vcHJlZml4OiAnJCAnLFxyXG5cdFx0XHRkZWNpbWFsczogMixcclxuXHRcdFx0dGhvdXNhbmQ6ICcsJ1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0aXRlbXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHZhciBxdWFudGl0eSA9IGl0ZW0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cInF1YW50aXR5XCJdJyk7XHJcblx0XHRcdHZhciBwcmljZSA9IGl0ZW0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cInByaWNlXCJdJyk7XHJcblxyXG5cdFx0XHR2YXIgcHJpY2VWYWx1ZSA9IGZvcm1hdC5mcm9tKHByaWNlLnZhbHVlKTtcclxuXHRcdFx0cHJpY2VWYWx1ZSA9ICghcHJpY2VWYWx1ZSB8fCBwcmljZVZhbHVlIDwgMCkgPyAwIDogcHJpY2VWYWx1ZTtcclxuXHJcblx0XHRcdHZhciBxdWFudGl0eVZhbHVlID0gcGFyc2VJbnQocXVhbnRpdHkudmFsdWUpO1xyXG5cdFx0XHRxdWFudGl0eVZhbHVlID0gKCFxdWFudGl0eVZhbHVlIHx8IHF1YW50aXR5VmFsdWUgPCAwKSA/ICAxIDogcXVhbnRpdHlWYWx1ZTtcclxuXHJcblx0XHRcdHByaWNlLnZhbHVlID0gZm9ybWF0LnRvKHByaWNlVmFsdWUpO1xyXG5cdFx0XHRxdWFudGl0eS52YWx1ZSA9IHF1YW50aXR5VmFsdWU7XHJcblxyXG5cdFx0XHRpdGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJ0b3RhbFwiXScpLmlubmVyVGV4dCA9IGZvcm1hdC50byhwcmljZVZhbHVlICogcXVhbnRpdHlWYWx1ZSk7XHRcdFx0XHJcblxyXG5cdFx0XHRncmFuZFRvdGFsICs9IHByaWNlVmFsdWUgKiBxdWFudGl0eVZhbHVlO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0Zm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwic3ViLXRvdGFsXCJdJykuaW5uZXJUZXh0ID0gZm9ybWF0LnRvKGdyYW5kVG90YWwpO1xyXG5cdFx0Zm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwiZ3JhbmQtdG90YWxcIl0nKS5pbm5lclRleHQgPSBmb3JtYXQudG8oZ3JhbmRUb3RhbCk7XHJcblx0fVxyXG5cclxuXHR2YXIgaGFuZGxlRW1wdHlTdGF0ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYgKGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykubGVuZ3RoID09PSAwKSB7XHJcblx0XHRcdHZhciBpdGVtID0gZm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwiZW1wdHktdGVtcGxhdGVcIl0gdHInKS5jbG9uZU5vZGUodHJ1ZSk7XHJcblx0XHRcdGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIHRib2R5JykuYXBwZW5kQ2hpbGQoaXRlbSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRLVFV0aWwucmVtb3ZlKGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJlbXB0eVwiXScpKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHZhciBoYW5kZUZvcm0gPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG5cdFx0Ly8gQWRkIGl0ZW1cclxuXHRcdGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJhZGQtaXRlbVwiXScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0XHR2YXIgaXRlbSA9IGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW0tdGVtcGxhdGVcIl0gdHInKS5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG5cdFx0XHRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtc1wiXSB0Ym9keScpLmFwcGVuZENoaWxkKGl0ZW0pO1xyXG5cclxuXHRcdFx0aGFuZGxlRW1wdHlTdGF0ZSgpO1xyXG5cdFx0XHR1cGRhdGVUb3RhbCgpO1x0XHRcdFxyXG5cdFx0fSk7XHJcblxyXG5cdFx0Ly8gUmVtb3ZlIGl0ZW1cclxuXHRcdEtUVXRpbC5vbihmb3JtLCAnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJyZW1vdmUtaXRlbVwiXScsICdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0S1RVdGlsLnJlbW92ZSh0aGlzLmNsb3Nlc3QoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykpO1xyXG5cclxuXHRcdFx0aGFuZGxlRW1wdHlTdGF0ZSgpO1xyXG5cdFx0XHR1cGRhdGVUb3RhbCgpO1x0XHRcdFxyXG5cdFx0fSk7XHRcdFxyXG5cclxuXHRcdC8vIEhhbmRsZSBwcmljZSBhbmQgcXVhbnRpdHkgY2hhbmdlc1xyXG5cdFx0S1RVdGlsLm9uKGZvcm0sICdbZGF0YS1rdC1lbGVtZW50PVwiaXRlbXNcIl0gW2RhdGEta3QtZWxlbWVudD1cInF1YW50aXR5XCJdLCBbZGF0YS1rdC1lbGVtZW50PVwiaXRlbXNcIl0gW2RhdGEta3QtZWxlbWVudD1cInByaWNlXCJdJywgJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0dXBkYXRlVG90YWwoKTtcdFx0XHRcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0dmFyIGluaXRGb3JtID0gZnVuY3Rpb24oZWxlbWVudCkge1xyXG5cdFx0Ly8gRHVlIGRhdGUuIEZvciBtb3JlIGluZm8sIHBsZWFzZSB2aXNpdCB0aGUgb2ZmaWNpYWwgcGx1Z2luIHNpdGU6IGh0dHBzOi8vZmxhdHBpY2tyLmpzLm9yZy9cclxuXHRcdHZhciBpbnZvaWNlRGF0ZSA9ICQoZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImludm9pY2VfZGF0ZVwiXScpKTtcclxuXHRcdGludm9pY2VEYXRlLmZsYXRwaWNrcih7XHJcblx0XHRcdGVuYWJsZVRpbWU6IGZhbHNlLFxyXG5cdFx0XHRkYXRlRm9ybWF0OiBcImQsIE0gWVwiLFxyXG5cdFx0fSk7XHJcblxyXG4gICAgICAgIC8vIER1ZSBkYXRlLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgdmlzaXQgdGhlIG9mZmljaWFsIHBsdWdpbiBzaXRlOiBodHRwczovL2ZsYXRwaWNrci5qcy5vcmcvXHJcblx0XHR2YXIgZHVlRGF0ZSA9ICQoZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImludm9pY2VfZHVlX2RhdGVcIl0nKSk7XHJcblx0XHRkdWVEYXRlLmZsYXRwaWNrcih7XHJcblx0XHRcdGVuYWJsZVRpbWU6IGZhbHNlLFxyXG5cdFx0XHRkYXRlRm9ybWF0OiBcImQsIE0gWVwiLFxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHQvLyBQdWJsaWMgbWV0aG9kc1xyXG5cdHJldHVybiB7XHJcblx0XHRpbml0OiBmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3RfaW52b2ljZV9mb3JtJyk7XHJcblxyXG5cdFx0XHRoYW5kZUZvcm0oKTtcclxuICAgICAgICAgICAgaW5pdEZvcm0oKTtcclxuXHRcdFx0dXBkYXRlVG90YWwoKTtcclxuICAgICAgICB9XHJcblx0fTtcclxufSgpO1xyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XHJcbiAgICBLVEFwcEludm9pY2VzQ3JlYXRlLmluaXQoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJLVEFwcEludm9pY2VzQ3JlYXRlIiwiZm9ybSIsInVwZGF0ZVRvdGFsIiwiaXRlbXMiLCJzbGljZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ3JhbmRUb3RhbCIsImZvcm1hdCIsIndOdW1iIiwiZGVjaW1hbHMiLCJ0aG91c2FuZCIsIm1hcCIsIml0ZW0iLCJxdWFudGl0eSIsInF1ZXJ5U2VsZWN0b3IiLCJwcmljZSIsInByaWNlVmFsdWUiLCJmcm9tIiwidmFsdWUiLCJxdWFudGl0eVZhbHVlIiwicGFyc2VJbnQiLCJ0byIsImlubmVyVGV4dCIsImhhbmRsZUVtcHR5U3RhdGUiLCJsZW5ndGgiLCJjbG9uZU5vZGUiLCJhcHBlbmRDaGlsZCIsIktUVXRpbCIsInJlbW92ZSIsImhhbmRlRm9ybSIsImVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0Iiwib24iLCJjbG9zZXN0IiwiaW5pdEZvcm0iLCJpbnZvaWNlRGF0ZSIsIiQiLCJmbGF0cGlja3IiLCJlbmFibGVUaW1lIiwiZGF0ZUZvcm1hdCIsImR1ZURhdGUiLCJpbml0IiwiZG9jdW1lbnQiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/invoices/create.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/invoices/create.js":
/*!******************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/invoices/create.js ***!
  \******************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/apps/invoices/create.js\":\n    /*!*****************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/apps/invoices/create.js ***!\r\n      \\*****************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomAppsInvoicesCreateJs() {\n      eval(\" // Class definition\\n\\nvar KTAppInvoicesCreate = function () {\\n  var form; // Private functions\\n\\n  var updateTotal = function updateTotal() {\\n    var items = [].slice.call(form.querySelectorAll('[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"item\\\"]'));\\n    var grandTotal = 0;\\n    var format = wNumb({\\n      //prefix: '$ ',\\n      decimals: 2,\\n      thousand: ','\\n    });\\n    items.map(function (item) {\\n      var quantity = item.querySelector('[data-kt-element=\\\"quantity\\\"]');\\n      var price = item.querySelector('[data-kt-element=\\\"price\\\"]');\\n      var priceValue = format.from(price.value);\\n      priceValue = !priceValue || priceValue < 0 ? 0 : priceValue;\\n      var quantityValue = parseInt(quantity.value);\\n      quantityValue = !quantityValue || quantityValue < 0 ? 1 : quantityValue;\\n      price.value = format.to(priceValue);\\n      quantity.value = quantityValue;\\n      item.querySelector('[data-kt-element=\\\"total\\\"]').innerText = format.to(priceValue * quantityValue);\\n      grandTotal += priceValue * quantityValue;\\n    });\\n    form.querySelector('[data-kt-element=\\\"sub-total\\\"]').innerText = format.to(grandTotal);\\n    form.querySelector('[data-kt-element=\\\"grand-total\\\"]').innerText = format.to(grandTotal);\\n  };\\n\\n  var handleEmptyState = function handleEmptyState() {\\n    if (form.querySelectorAll('[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"item\\\"]').length === 0) {\\n      var item = form.querySelector('[data-kt-element=\\\"empty-template\\\"] tr').cloneNode(true);\\n      form.querySelector('[data-kt-element=\\\"items\\\"] tbody').appendChild(item);\\n    } else {\\n      KTUtil.remove(form.querySelector('[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"empty\\\"]'));\\n    }\\n  };\\n\\n  var handeForm = function handeForm(element) {\\n    // Add item\\n    form.querySelector('[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"add-item\\\"]').addEventListener('click', function (e) {\\n      e.preventDefault();\\n      var item = form.querySelector('[data-kt-element=\\\"item-template\\\"] tr').cloneNode(true);\\n      form.querySelector('[data-kt-element=\\\"items\\\"] tbody').appendChild(item);\\n      handleEmptyState();\\n      updateTotal();\\n    }); // Remove item\\n\\n    KTUtil.on(form, '[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"remove-item\\\"]', 'click', function (e) {\\n      e.preventDefault();\\n      KTUtil.remove(this.closest('[data-kt-element=\\\"item\\\"]'));\\n      handleEmptyState();\\n      updateTotal();\\n    }); // Handle price and quantity changes\\n\\n    KTUtil.on(form, '[data-kt-element=\\\"items\\\"] [data-kt-element=\\\"quantity\\\"], [data-kt-element=\\\"items\\\"] [data-kt-element=\\\"price\\\"]', 'change', function (e) {\\n      e.preventDefault();\\n      updateTotal();\\n    });\\n  };\\n\\n  var initForm = function initForm(element) {\\n    // Due date. For more info, please visit the official plugin site: https://flatpickr.js.org/\\n    var invoiceDate = $(form.querySelector('[name=\\\"invoice_date\\\"]'));\\n    invoiceDate.flatpickr({\\n      enableTime: false,\\n      dateFormat: \\\"d, M Y\\\"\\n    }); // Due date. For more info, please visit the official plugin site: https://flatpickr.js.org/\\n\\n    var dueDate = $(form.querySelector('[name=\\\"invoice_due_date\\\"]'));\\n    dueDate.flatpickr({\\n      enableTime: false,\\n      dateFormat: \\\"d, M Y\\\"\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init(element) {\\n      form = document.querySelector('#kt_invoice_form');\\n      handeForm();\\n      initForm();\\n      updateTotal();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTAppInvoicesCreate.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvaW52b2ljZXMvY3JlYXRlLmpzLmpzIiwibWFwcGluZ3MiOiJDQUVBOztBQUNBLElBQUlBLG1CQUFtQixHQUFHLFlBQVk7QUFDbEMsTUFBSUMsSUFBSixDQURrQyxDQUdyQzs7QUFDQSxNQUFJQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFXO0FBQzVCLFFBQUlDLEtBQUssR0FBRyxHQUFHQyxLQUFILENBQVNDLElBQVQsQ0FBY0osSUFBSSxDQUFDSyxnQkFBTCxDQUFzQixvREFBdEIsQ0FBZCxDQUFaO0FBQ0EsUUFBSUMsVUFBVSxHQUFHLENBQWpCO0FBRUEsUUFBSUMsTUFBTSxHQUFHQyxLQUFLLENBQUM7QUFDbEI7QUFDQUMsTUFBQUEsUUFBUSxFQUFFLENBRlE7QUFHbEJDLE1BQUFBLFFBQVEsRUFBRTtBQUhRLEtBQUQsQ0FBbEI7QUFNQVIsSUFBQUEsS0FBSyxDQUFDUyxHQUFOLENBQVUsVUFBVUMsSUFBVixFQUFnQjtBQUNoQixVQUFJQyxRQUFRLEdBQUdELElBQUksQ0FBQ0UsYUFBTCxDQUFtQiw4QkFBbkIsQ0FBZjtBQUNULFVBQUlDLEtBQUssR0FBR0gsSUFBSSxDQUFDRSxhQUFMLENBQW1CLDJCQUFuQixDQUFaO0FBRUEsVUFBSUUsVUFBVSxHQUFHVCxNQUFNLENBQUNVLElBQVAsQ0FBWUYsS0FBSyxDQUFDRyxLQUFsQixDQUFqQjtBQUNBRixNQUFBQSxVQUFVLEdBQUksQ0FBQ0EsVUFBRCxJQUFlQSxVQUFVLEdBQUcsQ0FBN0IsR0FBa0MsQ0FBbEMsR0FBc0NBLFVBQW5EO0FBRUEsVUFBSUcsYUFBYSxHQUFHQyxRQUFRLENBQUNQLFFBQVEsQ0FBQ0ssS0FBVixDQUE1QjtBQUNBQyxNQUFBQSxhQUFhLEdBQUksQ0FBQ0EsYUFBRCxJQUFrQkEsYUFBYSxHQUFHLENBQW5DLEdBQXlDLENBQXpDLEdBQTZDQSxhQUE3RDtBQUVBSixNQUFBQSxLQUFLLENBQUNHLEtBQU4sR0FBY1gsTUFB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QUZTLEtBQXRCLEVBSGdDLENBUTFCOztBQUNOLFFBQUlDLE9BQU8sR0FBR0osQ0FBQyxDQUFDdEMsSUFBSSxDQUFDYyxhQUFMLENBQW1CLDJCQUFuQixDQUFELENBQWY7QUFDQTRCLElBQUFBLE9BQU8sQ0FBQ0gsU0FBUixDQUFrQjtBQUNqQkMsTUFBQUEsVUFBVSxFQUFFLEtBREs7QUFFakJDLE1BQUFBLFVBQVUsRUFBRTtBQUZLLEtBQWxCO0FBSUEsR0FkRCxDQTVFcUMsQ0E0RnJDOzs7QUFDQSxTQUFPO0FBQ05FLElBQUFBLElBQUksRUFBRSxjQUFTYixPQUFULEVBQWtCO0FBQ2Q5QixNQUFBQSxJQUFJLEdBQUc0QyxRQUFRLENBQUM5QixhQUFULENBQXVCLGtCQUF2QixDQUFQO0FBRVRlLE1BQUFBLFNBQVM7QUFDQU8sTUFBQUEsUUFBUTtBQUNqQm5DLE1BQUFBLFdBQVc7QUFDTDtBQVBELEdBQVA7QUFTQSxDQXRHeUIsRUFBMUIsQyxDQXdHQTs7O0FBQ0EwQixNQUFNLENBQUNrQixrQkFBUCxDQUEwQixZQUFZO0FBQ2xDOUMsRUFBQUEsbUJBQW1CLENBQUM0QyxJQUFwQjtBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvaW52b2ljZXMvY3JlYXRlLmpzPzEwODAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVEFwcEludm9pY2VzQ3JlYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGZvcm07XHJcblxyXG5cdC8vIFByaXZhdGUgZnVuY3Rpb25zXHJcblx0dmFyIHVwZGF0ZVRvdGFsID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaXRlbXMgPSBbXS5zbGljZS5jYWxsKGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykpO1xyXG5cdFx0dmFyIGdyYW5kVG90YWwgPSAwO1xyXG5cclxuXHRcdHZhciBmb3JtYXQgPSB3TnVtYih7XHJcblx0XHRcdC8vcHJlZml4OiAnJCAnLFxyXG5cdFx0XHRkZWNpbWFsczogMixcclxuXHRcdFx0dGhvdXNhbmQ6ICcsJ1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0aXRlbXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHZhciBxdWFudGl0eSA9IGl0ZW0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cInF1YW50aXR5XCJdJyk7XHJcblx0XHRcdHZhciBwcmljZSA9IGl0ZW0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cInByaWNlXCJdJyk7XHJcblxyXG5cdFx0XHR2YXIgcHJpY2VWYWx1ZSA9IGZvcm1hdC5mcm9tKHByaWNlLnZhbHVlKTtcclxuXHRcdFx0cHJpY2VWYWx1ZSA9ICghcHJpY2VWYWx1ZSB8fCBwcmljZVZhbHVlIDwgMCkgPyAwIDogcHJpY2VWYWx1ZTtcclxuXHJcblx0XHRcdHZhciBxdWFudGl0eVZhbHVlID0gcGFyc2VJbnQocXVhbnRpdHkudmFsdWUpO1xyXG5cdFx0XHRxdWFudGl0eVZhbHVlID0gKCFxdWFudGl0eVZhbHVlIHx8IHF1YW50aXR5VmFsdWUgPCAwKSA/ICAxIDogcXVhbnRpdHlWYWx1ZTtcclxuXHJcblx0XHRcdHByaWNlLnZhbHVlID0gZm9ybWF0LnRvKHByaWNlVmFsdWUpO1xyXG5cdFx0XHRxdWFudGl0eS52YWx1ZSA9IHF1YW50aXR5VmFsdWU7XHJcblxyXG5cdFx0XHRpdGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJ0b3RhbFwiXScpLmlubmVyVGV4dCA9IGZvcm1hdC50byhwcmljZVZhbHVlICogcXVhbnRpdHlWYWx1ZSk7XHRcdFx0XHJcblxyXG5cdFx0XHRncmFuZFRvdGFsICs9IHByaWNlVmFsdWUgKiBxdWFudGl0eVZhbHVlO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0Zm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwic3ViLXRvdGFsXCJdJykuaW5uZXJUZXh0ID0gZm9ybWF0LnRvKGdyYW5kVG90YWwpO1xyXG5cdFx0Zm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwiZ3JhbmQtdG90YWxcIl0nKS5pbm5lclRleHQgPSBmb3JtYXQudG8oZ3JhbmRUb3RhbCk7XHJcblx0fVxyXG5cclxuXHR2YXIgaGFuZGxlRW1wdHlTdGF0ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYgKGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykubGVuZ3RoID09PSAwKSB7XHJcblx0XHRcdHZhciBpdGVtID0gZm9ybS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwiZW1wdHktdGVtcGxhdGVcIl0gdHInKS5jbG9uZU5vZGUodHJ1ZSk7XHJcblx0XHRcdGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIHRib2R5JykuYXBwZW5kQ2hpbGQoaXRlbSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRLVFV0aWwucmVtb3ZlKGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJlbXB0eVwiXScpKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHZhciBoYW5kZUZvcm0gPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG5cdFx0Ly8gQWRkIGl0ZW1cclxuXHRcdGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJhZGQtaXRlbVwiXScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0XHR2YXIgaXRlbSA9IGZvcm0ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cIml0ZW0tdGVtcGxhdGVcIl0gdHInKS5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG5cdFx0XHRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtc1wiXSB0Ym9keScpLmFwcGVuZENoaWxkKGl0ZW0pO1xyXG5cclxuXHRcdFx0aGFuZGxlRW1wdHlTdGF0ZSgpO1xyXG5cdFx0XHR1cGRhdGVUb3RhbCgpO1x0XHRcdFxyXG5cdFx0fSk7XHJcblxyXG5cdFx0Ly8gUmVtb3ZlIGl0ZW1cclxuXHRcdEtUVXRpbC5vbihmb3JtLCAnW2RhdGEta3QtZWxlbWVudD1cIml0ZW1zXCJdIFtkYXRhLWt0LWVsZW1lbnQ9XCJyZW1vdmUtaXRlbVwiXScsICdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0S1RVdGlsLnJlbW92ZSh0aGlzLmNsb3Nlc3QoJ1tkYXRhLWt0LWVsZW1lbnQ9XCJpdGVtXCJdJykpO1xyXG5cclxuXHRcdFx0aGFuZGxlRW1wdHlTdGF0ZSgpO1xyXG5cdFx0XHR1cGRhdGVUb3RhbCgpO1x0XHRcdFxyXG5cdFx0fSk7XHRcdFxyXG5cclxuXHRcdC8vIEhhbmRsZSBwcmljZSBhbmQgcXVhbnRpdHkgY2hhbmdlc1xyXG5cdFx0S1RVdGlsLm9uKGZvcm0sICdbZGF0YS1rdC1lbGVtZW50PVwiaXRlbXNcIl0gW2RhdGEta3QtZWxlbWVudD1cInF1YW50aXR5XCJdLCBbZGF0YS1rdC1lbGVtZW50PVwiaXRlbXNcIl0gW2RhdGEta3QtZWxlbWVudD1cInByaWNlXCJdJywgJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0dXBkYXRlVG90YWwoKTtcdFx0XHRcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0dmFyIGluaXRGb3JtID0gZnVuY3Rpb24oZWxlbWVudCkge1xyXG5cdFx0Ly8gRHVlIGRhdGUuIEZvciBtb3JlIGluZm8sIHBsZWFzZSB2aXNpdCB0aGUgb2ZmaWNpYWwgcGx1Z2luIHNpdGU6IGh0dHBzOi8vZmxhdHBpY2tyLmpzLm9yZy9cclxuXHRcdHZhciBpbnZvaWNlRGF0ZSA9ICQoZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImludm9pY2VfZGF0ZVwiXScpKTtcclxuXHRcdGludm9pY2VEYXRlLmZsYXRwaWNrcih7XHJcblx0XHRcdGVuYWJsZVRpbWU6IGZhbHNlLFxyXG5cdFx0XHRkYXRlRm9ybWF0OiBcImQsIE0gWVwiLFxyXG5cdFx0fSk7XHJcblxyXG4gICAgICAgIC8vIER1ZSBkYXRlLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgdmlzaXQgdGhlIG9mZmljaWFsIHBsdWdpbiBzaXRlOiBodHRwczovL2ZsYXRwaWNrci5qcy5vcmcvXHJcblx0XHR2YXIgZHVlRGF0ZSA9ICQoZm9ybS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImludm9pY2VfZHVlX2RhdGVcIl0nKSk7XHJcblx0XHRkdWVEYXRlLmZsYXRwaWNrcih7XHJcblx0XHRcdGVuYWJsZVRpbWU6IGZhbHNlLFxyXG5cdFx0XHRkYXRlRm9ybWF0OiBcImQsIE0gWVwiLFxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHQvLyBQdWJsaWMgbWV0aG9kc1xyXG5cdHJldHVybiB7XHJcblx0XHRpbml0OiBmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3RfaW52b2ljZV9mb3JtJyk7XHJcblxyXG5cdFx0XHRoYW5kZUZvcm0oKTtcclxuICAgICAgICAgICAgaW5pdEZvcm0oKTtcclxuXHRcdFx0dXBkYXRlVG90YWwoKTtcclxuICAgICAgICB9XHJcblx0fTtcclxufSgpO1xyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XHJcbiAgICBLVEFwcEludm9pY2VzQ3JlYXRlLmluaXQoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJLVEFwcEludm9pY2VzQ3JlYXRlIiwiZm9ybSIsInVwZGF0ZVRvdGFsIiwiaXRlbXMiLCJzbGljZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ3JhbmRUb3RhbCIsImZvcm1hdCIsIndOdW1iIiwiZGVjaW1hbHMiLCJ0aG91c2FuZCIsIm1hcCIsIml0ZW0iLCJxdWFudGl0eSIsInF1ZXJ5U2VsZWN0b3IiLCJwcmljZSIsInByaWNlVmFsdWUiLCJmcm9tIiwidmFsdWUiLCJxdWFudGl0eVZhbHVlIiwicGFyc2VJbnQiLCJ0byIsImlubmVyVGV4dCIsImhhbmRsZUVtcHR5U3RhdGUiLCJsZW5ndGgiLCJjbG9uZU5vZGUiLCJhcHBlbmRDaGlsZCIsIktUVXRpbCIsInJlbW92ZSIsImhhbmRlRm9ybSIsImVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0Iiwib24iLCJjbG9zZXN0IiwiaW5pdEZvcm0iLCJpbnZvaWNlRGF0ZSIsIiQiLCJmbGF0cGlja3IiLCJlbmFibGVUaW1lIiwiZGF0ZUZvcm1hdCIsImR1ZURhdGUiLCJpbml0IiwiZG9jdW1lbnQiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/invoices/create.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/invoices/create.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/invoices/create.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/invoices/create.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/invoices/create.js"]();
/******/ 	
/******/ })()
;