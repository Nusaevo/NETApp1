/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js":
/*!*************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js ***!
  \*************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTAppEcommerceSalesListing = function () {\n  // Shared variables\n  var table;\n  var datatable;\n  var flatpickr;\n  var minDate, maxDate;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10,\n      'columnDefs': [{\n        orderable: false,\n        targets: 0\n      },\n      // Disable ordering on column 0 (checkbox)\n      {\n        orderable: false,\n        targets: 7\n      } // Disable ordering on column 7 (actions)\n      ]\n    });\n\n    // Re-init functions on datatable re-draws\n    datatable.on('draw', function () {\n      handleDeleteRows();\n    });\n  };\n\n  // Init flatpickr --- more info :https://flatpickr.js.org/getting-started/\n  var initFlatpickr = function initFlatpickr() {\n    var element = document.querySelector('#kt_ecommerce_sales_flatpickr');\n    flatpickr = $(element).flatpickr({\n      altInput: true,\n      altFormat: \"d/m/Y\",\n      dateFormat: \"Y-m-d\",\n      mode: \"range\",\n      onChange: function onChange(selectedDates, dateStr, instance) {\n        handleFlatpickr(selectedDates, dateStr, instance);\n      }\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Handle status filter dropdown\n  var handleStatusFilter = function handleStatusFilter() {\n    var filterStatus = document.querySelector('[data-kt-ecommerce-order-filter=\"status\"]');\n    $(filterStatus).on('change', function (e) {\n      var value = e.target.value;\n      if (value === 'all') {\n        value = '';\n      }\n      datatable.column(3).search(value).draw();\n    });\n  };\n\n  // Handle flatpickr --- more info: https://flatpickr.js.org/events/\n  var handleFlatpickr = function handleFlatpickr(selectedDates, dateStr, instance) {\n    minDate = selectedDates[0] ? new Date(selectedDates[0]) : null;\n    maxDate = selectedDates[1] ? new Date(selectedDates[1]) : null;\n\n    // Datatable date filter --- more info: https://datatables.net/extensions/datetime/examples/integration/datatables.html\n    // Custom filtering function which will search data in column four between two values\n    $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {\n      var min = minDate;\n      var max = maxDate;\n      var dateAdded = new Date(moment($(data[5]).text(), 'DD/MM/YYYY'));\n      var dateModified = new Date(moment($(data[6]).text(), 'DD/MM/YYYY'));\n      if (min === null && max === null || min === null && max >= dateModified || min <= dateAdded && max === null || min <= dateAdded && max >= dateModified) {\n        return true;\n      }\n      return false;\n    });\n    datatable.draw();\n  };\n\n  // Handle clear flatpickr\n  var handleClearFlatpickr = function handleClearFlatpickr() {\n    var clearButton = document.querySelector('#kt_ecommerce_sales_flatpickr_clear');\n    clearButton.addEventListener('click', function (e) {\n      flatpickr.clear();\n    });\n  };\n\n  // Delete cateogry\n  var handleDeleteRows = function handleDeleteRows() {\n    // Select all delete buttons\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-order-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        var parent = e.target.closest('tr');\n\n        // Get category name\n        var orderID = parent.querySelector('[data-kt-ecommerce-order-filter=\"order_id\"]').innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to delete order: \" + orderID + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have deleted \" + orderID + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: orderID + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_sales_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      initFlatpickr();\n      handleSearchDatatable();\n      handleStatusFilter();\n      handleDeleteRows();\n      handleClearFlatpickr();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSalesListing.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/ecommerce/sales/listing.js":
/*!**************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/ecommerce/sales/listing.js ***!
  \**************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js\": (\n    /*!*************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js ***!\n      \\*************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomAppsEcommerceSalesListingJs() {\n      eval(\" // Class definition\\n\\nvar KTAppEcommerceSalesListing = function () {\\n  // Shared variables\\n  var table;\\n  var datatable;\\n  var flatpickr;\\n  var minDate, maxDate; // Private functions\\n\\n  var initDatatable = function initDatatable() {\\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\\n    datatable = $(table).DataTable({\\n      \\\"info\\\": false,\\n      'order': [],\\n      'pageLength': 10,\\n      'columnDefs': [{\\n        orderable: false,\\n        targets: 0\\n      }, // Disable ordering on column 0 (checkbox)\\n      {\\n        orderable: false,\\n        targets: 7\\n      } // Disable ordering on column 7 (actions)\\n      ]\\n    }); // Re-init functions on datatable re-draws\\n\\n    datatable.on('draw', function () {\\n      handleDeleteRows();\\n    });\\n  }; // Init flatpickr --- more info :https://flatpickr.js.org/getting-started/\\n\\n\\n  var initFlatpickr = function initFlatpickr() {\\n    var element = document.querySelector('#kt_ecommerce_sales_flatpickr');\\n    flatpickr = $(element).flatpickr({\\n      altInput: true,\\n      altFormat: \\\"d/m/Y\\\",\\n      dateFormat: \\\"Y-m-d\\\",\\n      mode: \\\"range\\\",\\n      onChange: function onChange(selectedDates, dateStr, instance) {\\n        handleFlatpickr(selectedDates, dateStr, instance);\\n      }\\n    });\\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\\n\\n\\n  var handleSearchDatatable = function handleSearchDatatable() {\\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\\\"search\\\"]');\\n    filterSearch.addEventListener('keyup', function (e) {\\n      datatable.search(e.target.value).draw();\\n    });\\n  }; // Handle status filter dropdown\\n\\n\\n  var handleStatusFilter = function handleStatusFilter() {\\n    var filterStatus = document.querySelector('[data-kt-ecommerce-order-filter=\\\"status\\\"]');\\n    $(filterStatus).on('change', function (e) {\\n      var value = e.target.value;\\n\\n      if (value === 'all') {\\n        value = '';\\n      }\\n\\n      datatable.column(3).search(value).draw();\\n    });\\n  }; // Handle flatpickr --- more info: https://flatpickr.js.org/events/\\n\\n\\n  var handleFlatpickr = function handleFlatpickr(selectedDates, dateStr, instance) {\\n    minDate = selectedDates[0] ? new Date(selectedDates[0]) : null;\\n    maxDate = selectedDates[1] ? new Date(selectedDates[1]) : null; // Datatable date filter --- more info: https://datatables.net/extensions/datetime/examples/integration/datatables.html\\n    // Custom filtering function which will search data in column four between two values\\n\\n    $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {\\n      var min = minDate;\\n      var max = maxDate;\\n      var dateAdded = new Date(moment($(data[5]).text(), 'DD/MM/YYYY'));\\n      var dateModified = new Date(moment($(data[6]).text(), 'DD/MM/YYYY'));\\n\\n      if (min === null && max === null || min === null && max >= dateModified || min <= dateAdded && max === null || min <= dateAdded && max >= dateModified) {\\n        return true;\\n      }\\n\\n      return false;\\n    });\\n    datatable.draw();\\n  }; // Handle clear flatpickr\\n\\n\\n  var handleClearFlatpickr = function handleClearFlatpickr() {\\n    var clearButton = document.querySelector('#kt_ecommerce_sales_flatpickr_clear');\\n    clearButton.addEventListener('click', function (e) {\\n      flatpickr.clear();\\n    });\\n  }; // Delete cateogry\\n\\n\\n  var handleDeleteRows = function handleDeleteRows() {\\n    // Select all delete buttons\\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-order-filter=\\\"delete_row\\\"]');\\n    deleteButtons.forEach(function (d) {\\n      // Delete button on click\\n      d.addEventListener('click', function (e) {\\n        e.preventDefault(); // Select parent row\\n\\n        var parent = e.target.closest('tr'); // Get category name\\n\\n        var orderID = parent.querySelector('[data-kt-ecommerce-order-filter=\\\"order_id\\\"]').innerText; // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\\n\\n        Swal.fire({\\n          text: \\\"Are you sure you want to delete order: \\\" + orderID + \\\"?\\\",\\n          icon: \\\"warning\\\",\\n          showCancelButton: true,\\n          buttonsStyling: false,\\n          confirmButtonText: \\\"Yes, delete!\\\",\\n          cancelButtonText: \\\"No, cancel\\\",\\n          customClass: {\\n            confirmButton: \\\"btn fw-bold btn-danger\\\",\\n            cancelButton: \\\"btn fw-bold btn-active-light-primary\\\"\\n          }\\n        }).then(function (result) {\\n          if (result.value) {\\n            Swal.fire({\\n              text: \\\"You have deleted \\\" + orderID + \\\"!.\\\",\\n              icon: \\\"success\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn fw-bold btn-primary\\\"\\n              }\\n            }).then(function () {\\n              // Remove current row\\n              datatable.row($(parent)).remove().draw();\\n            });\\n          } else if (result.dismiss === 'cancel') {\\n            Swal.fire({\\n              text: orderID + \\\" was not deleted.\\\",\\n              icon: \\\"error\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn fw-bold btn-primary\\\"\\n              }\\n            });\\n          }\\n        });\\n      });\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      table = document.querySelector('#kt_ecommerce_sales_table');\\n\\n      if (!table) {\\n        return;\\n      }\\n\\n      initDatatable();\\n      initFlatpickr();\\n      handleSearchDatatable();\\n      handleStatusFilter();\\n      handleDeleteRows();\\n      handleClearFlatpickr();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTAppEcommerceSalesListing.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/ecommerce/sales/listing.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/sales/listing.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/ecommerce/sales/listing.js"]();
/******/ 	
/******/ })()
;