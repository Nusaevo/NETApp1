/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js":
/*!*******************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js ***!
  \*******************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTAppEcommerceReportViews = function () {\n  // Shared variables\n  var table;\n  var datatable;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10\n    });\n  };\n\n  // Init daterangepicker\n  var initDaterangepicker = function initDaterangepicker() {\n    var start = moment().subtract(29, \"days\");\n    var end = moment();\n    var input = $(\"#kt_ecommerce_report_views_daterangepicker\");\n    function cb(start, end) {\n      input.html(start.format(\"MMMM D, YYYY\") + \" - \" + end.format(\"MMMM D, YYYY\"));\n    }\n    input.daterangepicker({\n      startDate: start,\n      endDate: end,\n      ranges: {\n        \"Today\": [moment(), moment()],\n        \"Yesterday\": [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n        \"Last 7 Days\": [moment().subtract(6, \"days\"), moment()],\n        \"Last 30 Days\": [moment().subtract(29, \"days\"), moment()],\n        \"This Month\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n        \"Last Month\": [moment().subtract(1, \"month\").startOf(\"month\"), moment().subtract(1, \"month\").endOf(\"month\")]\n      }\n    }, cb);\n    cb(start, end);\n  };\n\n  // Handle rating filter dropdown\n  var handleStatusFilter = function handleStatusFilter() {\n    var filterStatus = document.querySelector('[data-kt-ecommerce-order-filter=\"rating\"]');\n    $(filterStatus).on('change', function (e) {\n      var value = e.target.value;\n      if (value === 'all') {\n        value = '';\n      }\n      datatable.column(2).search(value).draw();\n    });\n  };\n\n  // Hook export buttons\n  var exportButtons = function exportButtons() {\n    var documentTitle = 'Product Views Report';\n    var buttons = new $.fn.dataTable.Buttons(table, {\n      buttons: [{\n        extend: 'copyHtml5',\n        title: documentTitle\n      }, {\n        extend: 'excelHtml5',\n        title: documentTitle\n      }, {\n        extend: 'csvHtml5',\n        title: documentTitle\n      }, {\n        extend: 'pdfHtml5',\n        title: documentTitle\n      }]\n    }).container().appendTo($('#kt_ecommerce_report_views_export'));\n\n    // Hook dropdown menu click event to datatable export buttons\n    var exportButtons = document.querySelectorAll('#kt_ecommerce_report_views_export_menu [data-kt-ecommerce-export]');\n    exportButtons.forEach(function (exportButton) {\n      exportButton.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Get clicked export value\n        var exportValue = e.target.getAttribute('data-kt-ecommerce-export');\n        var target = document.querySelector('.dt-buttons .buttons-' + exportValue);\n\n        // Trigger click event on hidden datatable export buttons\n        target.click();\n      });\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_report_views_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      initDaterangepicker();\n      exportButtons();\n      handleSearchDatatable();\n      handleStatusFilter();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceReportViews.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/ecommerce/reports/views/views.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/ecommerce/reports/views/views.js ***!
  \********************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js\": (\n    /*!*******************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js ***!\n      \\*******************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomAppsEcommerceReportsViewsViewsJs() {\n      eval(\" // Class definition\\n\\nvar KTAppEcommerceReportViews = function () {\\n  // Shared variables\\n  var table;\\n  var datatable; // Private functions\\n\\n  var initDatatable = function initDatatable() {\\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\\n    datatable = $(table).DataTable({\\n      \\\"info\\\": false,\\n      'order': [],\\n      'pageLength': 10\\n    });\\n  }; // Init daterangepicker\\n\\n\\n  var initDaterangepicker = function initDaterangepicker() {\\n    var start = moment().subtract(29, \\\"days\\\");\\n    var end = moment();\\n    var input = $(\\\"#kt_ecommerce_report_views_daterangepicker\\\");\\n\\n    function cb(start, end) {\\n      input.html(start.format(\\\"MMMM D, YYYY\\\") + \\\" - \\\" + end.format(\\\"MMMM D, YYYY\\\"));\\n    }\\n\\n    input.daterangepicker({\\n      startDate: start,\\n      endDate: end,\\n      ranges: {\\n        \\\"Today\\\": [moment(), moment()],\\n        \\\"Yesterday\\\": [moment().subtract(1, \\\"days\\\"), moment().subtract(1, \\\"days\\\")],\\n        \\\"Last 7 Days\\\": [moment().subtract(6, \\\"days\\\"), moment()],\\n        \\\"Last 30 Days\\\": [moment().subtract(29, \\\"days\\\"), moment()],\\n        \\\"This Month\\\": [moment().startOf(\\\"month\\\"), moment().endOf(\\\"month\\\")],\\n        \\\"Last Month\\\": [moment().subtract(1, \\\"month\\\").startOf(\\\"month\\\"), moment().subtract(1, \\\"month\\\").endOf(\\\"month\\\")]\\n      }\\n    }, cb);\\n    cb(start, end);\\n  }; // Handle rating filter dropdown\\n\\n\\n  var handleStatusFilter = function handleStatusFilter() {\\n    var filterStatus = document.querySelector('[data-kt-ecommerce-order-filter=\\\"rating\\\"]');\\n    $(filterStatus).on('change', function (e) {\\n      var value = e.target.value;\\n\\n      if (value === 'all') {\\n        value = '';\\n      }\\n\\n      datatable.column(2).search(value).draw();\\n    });\\n  }; // Hook export buttons\\n\\n\\n  var exportButtons = function exportButtons() {\\n    var documentTitle = 'Product Views Report';\\n    var buttons = new $.fn.dataTable.Buttons(table, {\\n      buttons: [{\\n        extend: 'copyHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'excelHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'csvHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'pdfHtml5',\\n        title: documentTitle\\n      }]\\n    }).container().appendTo($('#kt_ecommerce_report_views_export')); // Hook dropdown menu click event to datatable export buttons\\n\\n    var exportButtons = document.querySelectorAll('#kt_ecommerce_report_views_export_menu [data-kt-ecommerce-export]');\\n    exportButtons.forEach(function (exportButton) {\\n      exportButton.addEventListener('click', function (e) {\\n        e.preventDefault(); // Get clicked export value\\n\\n        var exportValue = e.target.getAttribute('data-kt-ecommerce-export');\\n        var target = document.querySelector('.dt-buttons .buttons-' + exportValue); // Trigger click event on hidden datatable export buttons\\n\\n        target.click();\\n      });\\n    });\\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\\n\\n\\n  var handleSearchDatatable = function handleSearchDatatable() {\\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\\\"search\\\"]');\\n    filterSearch.addEventListener('keyup', function (e) {\\n      datatable.search(e.target.value).draw();\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      table = document.querySelector('#kt_ecommerce_report_views_table');\\n\\n      if (!table) {\\n        return;\\n      }\\n\\n      initDatatable();\\n      initDaterangepicker();\\n      exportButtons();\\n      handleSearchDatatable();\\n      handleStatusFilter();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTAppEcommerceReportViews.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/ecommerce/reports/views/views.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/reports/views/views.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/ecommerce/reports/views/views.js"]();
/******/ 	
/******/ })()
;