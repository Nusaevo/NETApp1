/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js":
/*!***********************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js ***!
  \***********************************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTAppEcommerceReportReturns = function () {\n  // Shared variables\n  var table;\n  var datatable; // Private functions\n\n  var initDatatable = function initDatatable() {\n    // Set date data order\n    var tableRows = table.querySelectorAll('tbody tr');\n    tableRows.forEach(function (row) {\n      var dateRow = row.querySelectorAll('td');\n      var realDate = moment(dateRow[0].innerHTML, \"MMM DD, YYYY\").format(); // select date from 4th column in table\n\n      dateRow[0].setAttribute('data-order', realDate);\n    }); // Init datatable --- more info on datatables: https://datatables.net/manual/\n\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10\n    });\n  }; // Init daterangepicker\n\n\n  var initDaterangepicker = function initDaterangepicker() {\n    var start = moment().subtract(29, \"days\");\n    var end = moment();\n    var input = $(\"#kt_ecommerce_report_returns_daterangepicker\");\n\n    function cb(start, end) {\n      input.html(start.format(\"MMMM D, YYYY\") + \" - \" + end.format(\"MMMM D, YYYY\"));\n    }\n\n    input.daterangepicker({\n      startDate: start,\n      endDate: end,\n      ranges: {\n        \"Today\": [moment(), moment()],\n        \"Yesterday\": [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n        \"Last 7 Days\": [moment().subtract(6, \"days\"), moment()],\n        \"Last 30 Days\": [moment().subtract(29, \"days\"), moment()],\n        \"This Month\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n        \"Last Month\": [moment().subtract(1, \"month\").startOf(\"month\"), moment().subtract(1, \"month\").endOf(\"month\")]\n      }\n    }, cb);\n    cb(start, end);\n  }; // Hook export buttons\n\n\n  var exportButtons = function exportButtons() {\n    var documentTitle = 'Returns Report';\n    var buttons = new $.fn.dataTable.Buttons(table, {\n      buttons: [{\n        extend: 'copyHtml5',\n        title: documentTitle\n      }, {\n        extend: 'excelHtml5',\n        title: documentTitle\n      }, {\n        extend: 'csvHtml5',\n        title: documentTitle\n      }, {\n        extend: 'pdfHtml5',\n        title: documentTitle\n      }]\n    }).container().appendTo($('#kt_ecommerce_report_returns_export')); // Hook dropdown menu click event to datatable export buttons\n\n    var exportButtons = document.querySelectorAll('#kt_ecommerce_report_returns_export_menu [data-kt-ecommerce-export]');\n    exportButtons.forEach(function (exportButton) {\n      exportButton.addEventListener('click', function (e) {\n        e.preventDefault(); // Get clicked export value\n\n        var exportValue = e.target.getAttribute('data-kt-ecommerce-export');\n        var target = document.querySelector('.dt-buttons .buttons-' + exportValue); // Trigger click event on hidden datatable export buttons\n\n        target.click();\n      });\n    });\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n\n\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_report_returns_table');\n\n      if (!table) {\n        return;\n      }\n\n      initDatatable();\n      initDaterangepicker();\n      exportButtons();\n      handleSearchDatatable();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceReportReturns.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/ecommerce/reports/returns/returns.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/ecommerce/reports/returns/returns.js ***!
  \************************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js\":\n    /*!***********************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js ***!\r\n      \\***********************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomAppsEcommerceReportsReturnsReturnsJs() {\n      eval(\" // Class definition\\n\\nvar KTAppEcommerceReportReturns = function () {\\n  // Shared variables\\n  var table;\\n  var datatable; // Private functions\\n\\n  var initDatatable = function initDatatable() {\\n    // Set date data order\\n    var tableRows = table.querySelectorAll('tbody tr');\\n    tableRows.forEach(function (row) {\\n      var dateRow = row.querySelectorAll('td');\\n      var realDate = moment(dateRow[0].innerHTML, \\\"MMM DD, YYYY\\\").format(); // select date from 4th column in table\\n\\n      dateRow[0].setAttribute('data-order', realDate);\\n    }); // Init datatable --- more info on datatables: https://datatables.net/manual/\\n\\n    datatable = $(table).DataTable({\\n      \\\"info\\\": false,\\n      'order': [],\\n      'pageLength': 10\\n    });\\n  }; // Init daterangepicker\\n\\n\\n  var initDaterangepicker = function initDaterangepicker() {\\n    var start = moment().subtract(29, \\\"days\\\");\\n    var end = moment();\\n    var input = $(\\\"#kt_ecommerce_report_returns_daterangepicker\\\");\\n\\n    function cb(start, end) {\\n      input.html(start.format(\\\"MMMM D, YYYY\\\") + \\\" - \\\" + end.format(\\\"MMMM D, YYYY\\\"));\\n    }\\n\\n    input.daterangepicker({\\n      startDate: start,\\n      endDate: end,\\n      ranges: {\\n        \\\"Today\\\": [moment(), moment()],\\n        \\\"Yesterday\\\": [moment().subtract(1, \\\"days\\\"), moment().subtract(1, \\\"days\\\")],\\n        \\\"Last 7 Days\\\": [moment().subtract(6, \\\"days\\\"), moment()],\\n        \\\"Last 30 Days\\\": [moment().subtract(29, \\\"days\\\"), moment()],\\n        \\\"This Month\\\": [moment().startOf(\\\"month\\\"), moment().endOf(\\\"month\\\")],\\n        \\\"Last Month\\\": [moment().subtract(1, \\\"month\\\").startOf(\\\"month\\\"), moment().subtract(1, \\\"month\\\").endOf(\\\"month\\\")]\\n      }\\n    }, cb);\\n    cb(start, end);\\n  }; // Hook export buttons\\n\\n\\n  var exportButtons = function exportButtons() {\\n    var documentTitle = 'Returns Report';\\n    var buttons = new $.fn.dataTable.Buttons(table, {\\n      buttons: [{\\n        extend: 'copyHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'excelHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'csvHtml5',\\n        title: documentTitle\\n      }, {\\n        extend: 'pdfHtml5',\\n        title: documentTitle\\n      }]\\n    }).container().appendTo($('#kt_ecommerce_report_returns_export')); // Hook dropdown menu click event to datatable export buttons\\n\\n    var exportButtons = document.querySelectorAll('#kt_ecommerce_report_returns_export_menu [data-kt-ecommerce-export]');\\n    exportButtons.forEach(function (exportButton) {\\n      exportButton.addEventListener('click', function (e) {\\n        e.preventDefault(); // Get clicked export value\\n\\n        var exportValue = e.target.getAttribute('data-kt-ecommerce-export');\\n        var target = document.querySelector('.dt-buttons .buttons-' + exportValue); // Trigger click event on hidden datatable export buttons\\n\\n        target.click();\\n      });\\n    });\\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\\n\\n\\n  var handleSearchDatatable = function handleSearchDatatable() {\\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\\\"search\\\"]');\\n    filterSearch.addEventListener('keyup', function (e) {\\n      datatable.search(e.target.value).draw();\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      table = document.querySelector('#kt_ecommerce_report_returns_table');\\n\\n      if (!table) {\\n        return;\\n      }\\n\\n      initDatatable();\\n      initDaterangepicker();\\n      exportButtons();\\n      handleSearchDatatable();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTAppEcommerceReportReturns.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2RlbW8xL2pzL2N1c3RvbS9hcHBzL2Vjb21tZXJjZS9yZXBvcnRzL3JldHVybnMvcmV0dXJucy5qcz9hMzZkIl0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVzX18iLCJldmFsIiwiX193ZWJwYWNrX2V4cG9ydHNfXyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUFTLENBQUMsWUFBTTtBQUFFOztBQUNsQjtBQUFVO0FBQ1Y7O0FBQVUsTUFBSUEsbUJBQW1CLEdBQUk7QUFFckM7QUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFDQTtBQUFPLCtFQUFNO0FBRWJDLE1BQUFBLElBQUksQ0FBQyx1NmVBQUQsQ0FBSjtBQUVBO0FBQU87QUFFUDs7QUFacUMsR0FBM0I7QUFhVjs7QUFDQTs7QUFDQTtBQUFVOztBQUNWO0FBQVU7O0FBQ1Y7QUFBVTs7QUFDVjs7QUFBVSxNQUFJQyxtQkFBbUIsR0FBRyxFQUExQjtBQUNWOztBQUFVRixFQUFBQSxtQkFBbUIsQ0FBQyw2RUFBRCxDQUFuQjtBQUNWOztBQUNBOztBQUFVLENBdkJEIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQVRURU5USU9OOiBBbiBcImV2YWwtc291cmNlLW1hcFwiIGRldnRvb2wgaGFzIGJlZW4gdXNlZC5cclxuICogVGhpcyBkZXZ0b29sIGlzIG5laXRoZXIgbWFkZSBmb3IgcHJvZHVjdGlvbiBub3IgZm9yIHJlYWRhYmxlIG91dHB1dCBmaWxlcy5cclxuICogSXQgdXNlcyBcImV2YWwoKVwiIGNhbGxzIHRvIGNyZWF0ZSBhIHNlcGFyYXRlIHNvdXJjZSBmaWxlIHdpdGggYXR0YWNoZWQgU291cmNlTWFwcyBpbiB0aGUgYnJvd3NlciBkZXZ0b29scy5cclxuICogSWYgeW91IGFyZSB0cnlpbmcgdG8gcmVhZCB0aGUgb3V0cHV0IGZpbGUsIHNlbGVjdCBhIGRpZmZlcmVudCBkZXZ0b29sIChodHRwczovL3dlYnBhY2suanMub3JnL2NvbmZpZ3VyYXRpb24vZGV2dG9vbC8pXHJcbiAqIG9yIGRpc2FibGUgdGhlIGRlZmF1bHQgZGV2dG9vbCB3aXRoIFwiZGV2dG9vbDogZmFsc2VcIi5cclxuICogSWYgeW91IGFyZSBsb29raW5nIGZvciBwcm9kdWN0aW9uLXJlYWR5IG91dHB1dCBmaWxlcywgc2VlIG1vZGU6IFwicHJvZHVjdGlvblwiIChodHRwczovL3dlYnBhY2suanMub3JnL2NvbmZpZ3VyYXRpb24vbW9kZS8pLlxyXG4gKi9cclxuLyoqKioqKi8gKCgpID0+IHsgLy8gd2VicGFja0Jvb3RzdHJhcFxyXG4vKioqKioqLyBcdFwidXNlIHN0cmljdFwiO1xyXG4vKioqKioqLyBcdHZhciBfX3dlYnBhY2tfbW9kdWxlc19fID0gKHtcclxuXHJcbi8qKiovIFwiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL3JlcG9ydHMvcmV0dXJucy9yZXR1cm5zLmpzXCI6XHJcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxyXG4gICEqKiogLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL3JlcG9ydHMvcmV0dXJucy9yZXR1cm5zLmpzICoqKiFcclxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG4vKioqLyAoKCkgPT4ge1xyXG5cclxuZXZhbChcIiAvLyBDbGFzcyBkZWZpbml0aW9uXFxuXFxudmFyIEtUQXBwRWNvbW1lcmNlUmVwb3J0UmV0dXJucyA9IGZ1bmN0aW9uICgpIHtcXG4gIC8vIFNoYXJlZCB2YXJpYWJsZXNcXG4gIHZhciB0YWJsZTtcXG4gIHZhciBkYXRhdGFibGU7IC8vIFByaXZhdGUgZnVuY3Rpb25zXFxuXFxuICB2YXIgaW5pdERhdGF0YWJsZSA9IGZ1bmN0aW9uIGluaXREYXRhdGFibGUoKSB7XFxuICAgIC8vIFNldCBkYXRlIGRhdGEgb3JkZXJcXG4gICAgdmFyIHRhYmxlUm93cyA9IHRhYmxlLnF1ZXJ5U2VsZWN0b3JBbGwoJ3Rib2R5IHRyJyk7XFxuICAgIHRhYmxlUm93cy5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHtcXG4gICAgICB2YXIgZGF0ZVJvdyA9IHJvdy5xdWVyeVNlbGVjdG9yQWxsKCd0ZCcpO1xcbiAgICAgIHZhciByZWFsRGF0ZSA9IG1vbWVudChkYXRlUm93WzBdLmlubmVySFRNTCwgXFxcIk1NTSBERCwgWVlZWVxcXCIpLmZvcm1hdCgpOyAvLyBzZWxlY3QgZGF0ZSBmcm9tIDR0aCBjb2x1bW4gaW4gdGFibGVcXG5cXG4gICAgICBkYXRlUm93WzBdLnNldEF0dHJpYnV0ZSgnZGF0YS1vcmRlcicsIHJlYWxEYXRlKTtcXG4gICAgfSk7IC8vIEluaXQgZGF0YXRhYmxlIC0tLSBtb3JlIGluZm8gb24gZGF0YXRhYmxlczogaHR0cHM6Ly9kYXRhdGFibGVzLm5ldC9tYW51YWwvXFxuXFxuICAgIGRhdGF0YWJsZSA9ICQodGFibGUpLkRhdGFUYWJsZSh7XFxuICAgICAgXFxcImluZm9cXFwiOiBmYWxzZSxcXG4gICAgICAnb3JkZXInOiBbXSxcXG4gICAgICAncGFnZUxlbmd0aCc6IDEwXFxuICAgIH0pO1xcbiAgfTsgLy8gSW5pdCBkYXRlcmFuZ2VwaWNrZXJcXG5cXG5cXG4gIHZhciBpbml0RGF0ZXJhbmdlcGlja2VyID0gZnVuY3Rpb24gaW5pdERhdGVyYW5nZXBpY2tlcigpIHtcXG4gICAgdmFyIHN0YXJ0ID0gbW9tZW50KCkuc3VidHJhY3QoMjksIFxcXCJkYXlzXFxcIik7XFxuICAgIHZhciBlbmQgPSBtb21lbnQoKTtcXG4gICAgdmFyIGlucHV0ID0gJChcXFwiI2t0X2Vjb21tZXJjZV9yZXBvcnRfcmV0dXJuc19kYXRlcmFuZ2VwaWNrZXJcXFwiKTtcXG5cXG4gICAgZnVuY3Rpb24gY2Ioc3RhcnQsIGVuZCkge1xcbiAgICAgIGlucHV0Lmh0bWwoc3RhcnQuZm9ybWF0KFxcXCJNTU1NIEQsIFlZWVlcXFwiKSArIFxcXCIgLSBcXFwiICsgZW5kLmZvcm1hdChcXFwiTU1NTSBELCBZWVlZXFxcIikpO1xcbiAgICB9XFxuXFxuICAgIGlucHV0LmRhdGVyYW5nZXBpY2tlcih7XFxuICAgICAgc3RhcnREYXRlOiBzdGFydCxcXG4gICAgICBlbmREYXRlOiBlbmQsXFxuICAgICAgcmFuZ2VzOiB7XFxuICAgICAgICBcXFwiVG9kYXlcXFwiOiBbbW9tZW50KCksIG1vbWVudCgpXSxcXG4gICAgICAgIFxcXCJZZXN0ZXJkYXlcXFwiOiBbbW9tZW50KCkuc3VidHJhY3QoMSwgXFxcImRheXNcXFwiKSwgbW9tZW50KCkuc3VidHJhY3QoMSwgXFxcImRheXNcXFwiKV0sXFxuICAgICAgICBcXFwiTGFzdCA3IERheXNcXFwiOiBbbW9tZW50KCkuc3VidHJhY3QoNiwgXFxcImRheXNcXFwiKSwgbW9tZW50KCldLFxcbiAgICAgICAgXFxcIkxhc3QgMzAgRGF5c1xcXCI6IFttb21lbnQoKS5zdWJ0cmFjdCgyOSwgXFxcImRheXNcXFwiKSwgbW9tZW50KCldLFxcbiAgICAgICAgXFxcIlRoaXMgTW9udGhcXFwiOiBbbW9tZW50KCkuc3RhcnRPZihcXFwibW9udGhcXFwiKSwgbW9tZW50KCkuZW5kT2YoXFxcIm1vbnRoXFxcIildLFxcbiAgICAgICAgXFxcIkxhc3QgTW9udGhcXFwiOiBbbW9tZW50KCkuc3VidHJhY3QoMSwgXFxcIm1vbnRoXFxcIikuc3RhcnRPZihcXFwibW9udGhcXFwiKSwgbW9tZW50KCkuc3VidHJhY3QoMSwgXFxcIm1vbnRoXFxcIikuZW5kT2YoXFxcIm1vbnRoXFxcIildXFxuICAgICAgfVxcbiAgICB9LCBjYik7XFxuICAgIGNiKHN0YXJ0LCBlbmQpO1xcbiAgfTsgLy8gSG9vayBleHBvcnQgYnV0dG9uc1xcblxcblxcbiAgdmFyIGV4cG9ydEJ1dHRvbnMgPSBmdW5jdGlvbiBleHBvcnRCdXR0b25zKCkge1xcbiAgICB2YXIgZG9jdW1lbnRUaXRsZSA9ICdSZXR1cm5zIFJlcG9ydCc7XFxuICAgIHZhciBidXR0b25zID0gbmV3ICQuZm4uZGF0YVRhYmxlLkJ1dHRvbnModGFibGUsIHtcXG4gICAgICBidXR0b25zOiBbe1xcbiAgICAgICAgZXh0ZW5kOiAnY29weUh0bWw1JyxcXG4gICAgICAgIHRpdGxlOiBkb2N1bWVudFRpdGxlXFxuICAgICAgfSwge1xcbiAgICAgICAgZXh0ZW5kOiAnZXhjZWxIdG1sNScsXFxuICAgICAgICB0aXRsZTogZG9jdW1lbnRUaXRsZVxcbiAgICAgIH0sIHtcXG4gICAgICAgIGV4dGVuZDogJ2Nzdkh0bWw1JyxcXG4gICAgICAgIHRpdGxlOiBkb2N1bWVudFRpdGxlXFxuICAgICAgfSwge1xcbiAgICAgICAgZXh0ZW5kOiAncGRmSHRtbDUnLFxcbiAgICAgICAgdGl0bGU6IGRvY3VtZW50VGl0bGVcXG4gICAgICB9XVxcbiAgICB9KS5jb250YWluZXIoKS5hcHBlbmRUbygkKCcja3RfZWNvbW1lcmNlX3JlcG9ydF9yZXR1cm5zX2V4cG9ydCcpKTsgLy8gSG9vayBkcm9wZG93biBtZW51IGNsaWNrIGV2ZW50IHRvIGRhdGF0YWJsZSBleHBvcnQgYnV0dG9uc1xcblxcbiAgICB2YXIgZXhwb3J0QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNrdF9lY29tbWVyY2VfcmVwb3J0X3JldHVybnNfZXhwb3J0X21lbnUgW2RhdGEta3QtZWNvbW1lcmNlLWV4cG9ydF0nKTtcXG4gICAgZXhwb3J0QnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChleHBvcnRCdXR0b24pIHtcXG4gICAgICBleHBvcnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOyAvLyBHZXQgY2xpY2tlZCBleHBvcnQgdmFsdWVcXG5cXG4gICAgICAgIHZhciBleHBvcnRWYWx1ZSA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1lY29tbWVyY2UtZXhwb3J0Jyk7XFxuICAgICAgICB2YXIgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmR0LWJ1dHRvbnMgLmJ1dHRvbnMtJyArIGV4cG9ydFZhbHVlKTsgLy8gVHJpZ2dlciBjbGljayBldmVudCBvbiBoaWRkZW4gZGF0YXRhYmxlIGV4cG9ydCBidXR0b25zXFxuXFxuICAgICAgICB0YXJnZXQuY2xpY2soKTtcXG4gICAgICB9KTtcXG4gICAgfSk7XFxuICB9OyAvLyBTZWFyY2ggRGF0YXRhYmxlIC0tLSBvZmZpY2lhbCBkb2NzIHJlZmVyZW5jZTogaHR0cHM6Ly9kYXRhdGFibGVzLm5ldC9yZWZlcmVuY2UvYXBpL3NlYXJjaCgpXFxuXFxuXFxuICB2YXIgaGFuZGxlU2VhcmNoRGF0YXRhYmxlID0gZnVuY3Rpb24gaGFuZGxlU2VhcmNoRGF0YXRhYmxlKCkge1xcbiAgICB2YXIgZmlsdGVyU2VhcmNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWNvbW1lcmNlLW9yZGVyLWZpbHRlcj1cXFwic2VhcmNoXFxcIl0nKTtcXG4gICAgZmlsdGVyU2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24gKGUpIHtcXG4gICAgICBkYXRhdGFibGUuc2VhcmNoKGUudGFyZ2V0LnZhbHVlKS5kcmF3KCk7XFxuICAgIH0pO1xcbiAgfTsgLy8gUHVibGljIG1ldGhvZHNcXG5cXG5cXG4gIHJldHVybiB7XFxuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XFxuICAgICAgdGFibGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3RfZWNvbW1lcmNlX3JlcG9ydF9yZXR1cm5zX3RhYmxlJyk7XFxuXFxuICAgICAgaWYgKCF0YWJsZSkge1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICAgIH1cXG5cXG4gICAgICBpbml0RGF0YXRhYmxlKCk7XFxuICAgICAgaW5pdERhdGVyYW5nZXBpY2tlcigpO1xcbiAgICAgIGV4cG9ydEJ1dHRvbnMoKTtcXG4gICAgICBoYW5kbGVTZWFyY2hEYXRhdGFibGUoKTtcXG4gICAgfVxcbiAgfTtcXG59KCk7IC8vIE9uIGRvY3VtZW50IHJlYWR5XFxuXFxuXFxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XFxuICBLVEFwcEVjb21tZXJjZVJlcG9ydFJldHVybnMuaW5pdCgpO1xcbn0pOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXlaWE52ZFhKalpYTXZZWE56WlhSekwyTnZjbVV2YW5NdlkzVnpkRzl0TDJGd2NITXZaV052YlcxbGNtTmxMM0psY0c5eWRITXZjbVYwZFhKdWN5OXlaWFIxY201ekxtcHpMbXB6SWl3aWJXRndjR2x1WjNNaU9pSkRRVVZCT3p0QlFVTkJMRWxCUVVsQkxESkNRVUV5UWl4SFFVRkhMRmxCUVZrN1FVRkRNVU03UVVGRFFTeE5RVUZKUXl4TFFVRktPMEZCUTBFc1RVRkJTVU1zVTBGQlNpeERRVWd3UXl4RFFVc3hRenM3UVVGRFFTeE5RVUZKUXl4aFFVRmhMRWRCUVVjc1UwRkJhRUpCTEdGQlFXZENMRWRCUVZrN1FVRkROVUk3UVVGRFFTeFJRVUZOUXl4VFFVRlRMRWRCUVVkSUxFdEJRVXNzUTBGQlEwa3NaMEpCUVU0c1EwRkJkVUlzVlVGQmRrSXNRMEZCYkVJN1FVRkZRVVFzU1VGQlFVRXNVMEZCVXl4RFFVRkRSU3hQUVVGV0xFTkJRV3RDTEZWQlFVRkRMRWRCUVVjc1JVRkJTVHRCUVVOeVFpeFZRVUZOUXl4UFFVRlBMRWRCUVVkRUxFZEJRVWNzUTBGQlEwWXNaMEpCUVVvc1EwRkJjVUlzU1VGQmNrSXNRMEZCYUVJN1FVRkRRU3hWUVVGTlNTeFJRVUZSTEVkQlFVZERMRTFCUVUwc1EwRkJRMFlzVDBGQlR5eERRVUZETEVOQlFVUXNRMEZCVUN4RFFVRlhSeXhUUVVGYUxFVkJRWFZDTEdOQlFYWkNMRU5CUVU0c1EwRkJOa05ETEUxQlFUZERMRVZCUVdwQ0xFTkJSbkZDTEVOQlJXMUVPenRCUVVONFJVb3NUVUZCUVVFc1QwRkJUeXhEUVVGRExFTkJRVVFzUTBGQlVDeERRVUZYU3l4WlFVRllMRU5CUVhkQ0xGbEJRWGhDTEVWQlFYTkRTaXhSUVVGMFF6dEJRVU5JTEV0QlNrUXNSVUZLTkVJc1EwRlZOVUk3TzBGQlEwRlFMRWxCUVVGQkxGTkJRVk1zUjBGQlIxa3NRMEZCUXl4RFFVRkRZaXhMUVVGRUxFTkJRVVFzUTBGQlUyTXNVMEZCVkN4RFFVRnRRanRCUVVNelFpeGpRVUZSTEV0QlJHMUNPMEZCUlROQ0xHVkJRVk1zUlVGR2EwSTdRVUZITTBJc2IwSkJRV003UVVGSVlTeExRVUZ1UWl4RFFVRmFPMEZCUzBnc1IwRm9Ra1FzUTBGT01FTXNRMEYzUWpGRE96czdRVUZEUVN4TlFVRkpReXh0UWtGQmJVSXNSMEZCUnl4VFFVRjBRa0VzYlVKQlFYTkNMRWRCUVUwN1FVRkROVUlzVVVGQlNVTXNTMEZCU3l4SFFVRkhVQ3hOUVVGTkxFZEJRVWRSTEZGQlFWUXNRMEZCYTBJc1JVRkJiRUlzUlVGQmMwSXNUVUZCZEVJc1EwRkJXanRCUVVOQkxGRkJRVWxETEVkQlFVY3NSMEZCUjFRc1RVRkJUU3hGUVVGb1FqdEJRVU5CTEZGQlFVbFZMRXRCUVVzc1IwRkJSMDRzUTBGQlF5eERRVUZETERoRFFVRkVMRU5CUVdJN08wRkJSVUVzWVVGQlUwOHNSVUZCVkN4RFFVRlpTaXhMUVVGYUxFVkJRVzFDUlN4SFFVRnVRaXhGUVVGM1FqdEJRVU53UWtNc1RVRkJRVUVzUzBGQlN5eERRVUZEUlN4SlFVRk9MRU5CUVZkTUxFdEJRVXNzUTBGQlEwd3NUVUZCVGl4RFFVRmhMR05CUVdJc1NVRkJLMElzUzBGQkwwSXNSMEZCZFVOUExFZEJRVWNzUTBGQlExQXNUVUZCU2l4RFFVRlhMR05CUVZnc1EwRkJiRVE3UVVGRFNEczdRVUZGUkZFc1NVRkJRVUVzUzBGQlN5eERRVUZEUnl4bFFVRk9MRU5CUVhOQ08wRkJRMnhDUXl4TlFVRkJRU3hUUVVGVExFVkJRVVZRTEV0QlJFODdRVUZGYkVKUkxFMUJRVUZCTEU5QlFVOHNSVUZCUlU0c1IwRkdVenRCUVVkc1FrOHNUVUZCUVVFc1RVRkJUU3hGUVVGRk8wRkJRMG9zYVVKQlFWTXNRMEZCUTJoQ0xFMUJRVTBzUlVGQlVDeEZRVUZYUVN4TlFVRk5MRVZCUVdwQ0xFTkJSRXc3UVVGRlNpeHhRa0ZCWVN4RFFVRkRRU3hOUVVGTkxFZEJRVWRSTEZGQlFWUXNRMEZCYTBJc1EwRkJiRUlzUlVGQmNVSXNUVUZCY2tJc1EwRkJSQ3hGUVVFclFsSXNUVUZCVFN4SFFVRkhVU3hSUVVGVUxFTkJRV3RDTEVOQlFXeENMRVZCUVhGQ0xFMUJRWEpDTEVOQlFTOUNMRU5CUmxRN1FVRkhTaXgxUWtGQlpTeERRVUZEVWl4TlFVRk5MRWRCUVVkUkxGRkJRVlFzUTBGQmEwSXNRMEZCYkVJc1JVRkJjVUlzVFVGQmNrSXNRMEZCUkN4RlFVRXJRbElzVFVGQlRTeEZRVUZ5UXl4RFFVaFlPMEZCU1Vvc2QwSkJRV2RDTEVOQlFVTkJMRTFCUVUwc1IwRkJSMUVzVVVGQlZDeERRVUZyUWl4RlFVRnNRaXhGUVVGelFpeE5RVUYwUWl4RFFVRkVMRVZCUVdkRFVpeE5RVUZOTEVWQlFYUkRMRU5CU2xvN1FVRkxTaXh6UWtGQll5eERRVUZEUVN4TlFVRk5MRWRCUVVkcFFpeFBRVUZVTEVOQlFXbENMRTlCUVdwQ0xFTkJRVVFzUlVGQk5FSnFRaXhOUVVGTkxFZEJRVWRyUWl4TFFVRlVMRU5CUVdVc1QwRkJaaXhEUVVFMVFpeERRVXhXTzBGQlRVb3NjMEpCUVdNc1EwRkJRMnhDTEUxQlFVMHNSMEZCUjFFc1VVRkJWQ3hEUVVGclFpeERRVUZzUWl4RlFVRnhRaXhQUVVGeVFpeEZRVUU0UWxNc1QwRkJPVUlzUTBGQmMwTXNUMEZCZEVNc1EwRkJSQ3hGUVVGcFJHcENMRTFCUVUwc1IwRkJSMUVzVVVGQlZDeERRVUZyUWl4RFFVRnNRaXhGUVVGeFFpeFBRVUZ5UWl4RlFVRTRRbFVzUzBGQk9VSXNRMEZCYjBNc1QwRkJjRU1zUTBGQmFrUTdRVUZPVmp0QlFVaFZMRXRCUVhSQ0xFVkJWMGRRTEVWQldFZzdRVUZoUVVFc1NVRkJRVUVzUlVGQlJTeERRVUZEU2l4TFFVRkVMRVZCUVZGRkxFZEJRVklzUTBGQlJqdEJRVU5JTEVkQmRrSkVMRU5CZWtJd1F5eERRV3RFTVVNN096dEJRVU5CTEUxQlFVbFZMR0ZCUVdFc1IwRkJSeXg1UWtGQlRUdEJRVU4wUWl4UlFVRk5ReXhoUVVGaExFZEJRVWNzWjBKQlFYUkNPMEZCUTBFc1VVRkJTVU1zVDBGQlR5eEhRVUZITEVsQlFVbHFRaXhEUVVGRExFTkJRVU5yUWl4RlFVRkdMRU5CUVV0RExGTkJRVXdzUTBGQlpVTXNUMEZCYmtJc1EwRkJNa0pxUXl4TFFVRXpRaXhGUVVGclF6dEJRVU0xUXpoQ0xFMUJRVUZCTEU5QlFVOHNSVUZCUlN4RFFVTk1PMEZCUTBsSkxGRkJRVUZCTEUxQlFVMHNSVUZCUlN4WFFVUmFPMEZCUlVsRExGRkJRVUZCTEV0QlFVc3NSVUZCUlU0N1FVRkdXQ3hQUVVSTExFVkJTMHc3UVVGRFNVc3NVVUZCUVVFc1RVRkJUU3hGUVVGRkxGbEJSRm83UVVGRlNVTXNVVUZCUVVFc1MwRkJTeXhGUVVGRlRqdEJRVVpZTEU5QlRFc3NSVUZUVER0QlFVTkpTeXhSUVVGQlFTeE5RVUZOTEVWQlFVVXNWVUZFV2p0QlFVVkpReXhSUVVGQlFTeExRVUZMTEVWQlFVVk9PMEZCUmxnc1QwRlVTeXhGUVdGTU8wRkJRMGxMTEZGQlFVRkJMRTFCUVUwc1JVRkJSU3hWUVVSYU8wRkJSVWxETEZGQlFVRkJMRXRCUVVzc1JVRkJSVTQ3UVVGR1dDeFBRV0pMTzBGQlJHMURMRXRCUVd4RExFVkJiVUpZVHl4VFFXNUNWeXhIUVcxQ1EwTXNVVUZ1UWtRc1EwRnRRbFY0UWl4RFFVRkRMRU5CUVVNc2NVTkJRVVFzUTBGdVFsZ3NRMEZCWkN4RFFVWnpRaXhEUVhWQ2RFSTdPMEZCUTBFc1VVRkJUV1VzWVVGQllTeEhRVUZIVlN4UlFVRlJMRU5CUVVOc1F5eG5Ra0ZCVkN4RFFVRXdRaXh4UlVGQk1VSXNRMEZCZEVJN1FVRkRRWGRDTEVsQlFVRkJMR0ZCUVdFc1EwRkJRM1pDTEU5QlFXUXNRMEZCYzBJc1ZVRkJRV3RETEZsQlFWa3NSVUZCU1R0QlFVTnNRMEVzVFVGQlFVRXNXVUZCV1N4RFFVRkRReXhuUWtGQllpeERRVUU0UWl4UFFVRTVRaXhGUVVGMVF5eFZRVUZCUXl4RFFVRkRMRVZCUVVrN1FVRkRlRU5CTEZGQlFVRkJMRU5CUVVNc1EwRkJRME1zWTBGQlJpeEhRVVIzUXl4RFFVZDRRenM3UVVGRFFTeFpRVUZOUXl4WFFVRlhMRWRCUVVkR0xFTkJRVU1zUTBGQlEwY3NUVUZCUml4RFFVRlRReXhaUVVGVUxFTkJRWE5DTERCQ1FVRjBRaXhEUVVGd1FqdEJRVU5CTEZsQlFVMUVMRTFCUVUwc1IwRkJSMDRzVVVGQlVTeERRVUZEVVN4aFFVRlVMRU5CUVhWQ0xEQkNRVUV3UWtnc1YwRkJha1FzUTBGQlppeERRVXgzUXl4RFFVOTRRenM3UVVGRFFVTXNVVUZCUVVFc1RVRkJUU3hEUVVGRFJ5eExRVUZRTzBGQlEwZ3NUMEZVUkR0QlFWVklMRXRCV0VRN1FVRlpTQ3hIUVhKRFJDeERRVzVFTUVNc1EwRXlSakZET3pzN1FVRkRRU3hOUVVGSlF5eHhRa0ZCY1VJc1IwRkJSeXhUUVVGNFFrRXNjVUpCUVhkQ0xFZEJRVTA3UVVGRE9VSXNVVUZCVFVNc1dVRkJXU3hIUVVGSFdDeFJRVUZSTEVOQlFVTlJMR0ZCUVZRc1EwRkJkVUlzTWtOQlFYWkNMRU5CUVhKQ08wRkJRMEZITEVsQlFVRkJMRmxCUVZrc1EwRkJRMVFzWjBKQlFXSXNRMEZCT0VJc1QwRkJPVUlzUlVGQmRVTXNWVUZCVlVNc1EwRkJWaXhGUVVGaE8wRkJRMmhFZUVNc1RVRkJRVUVzVTBGQlV5eERRVUZEYVVRc1RVRkJWaXhEUVVGcFFsUXNRMEZCUXl4RFFVRkRSeXhOUVVGR0xFTkJRVk5QTEV0QlFURkNMRVZCUVdsRFF5eEpRVUZxUXp0QlFVTklMRXRCUmtRN1FVRkhTQ3hIUVV4RUxFTkJOVVl3UXl4RFFXMUhNVU03T3p0QlFVTkJMRk5CUVU4N1FVRkRTRU1zU1VGQlFVRXNTVUZCU1N4RlFVRkZMR2RDUVVGWk8wRkJRMlJ5UkN4TlFVRkJRU3hMUVVGTExFZEJRVWR6UXl4UlFVRlJMRU5CUVVOUkxHRkJRVlFzUTBGQmRVSXNiME5CUVhaQ0xFTkJRVkk3TzBGQlJVRXNWVUZCU1N4RFFVRkRPVU1zUzBGQlRDeEZRVUZaTzBGQlExSTdRVUZEU0RzN1FVRkZSRVVzVFVGQlFVRXNZVUZCWVR0QlFVTmlZU3hOUVVGQlFTeHRRa0ZCYlVJN1FVRkRia0poTEUxQlFVRkJMR0ZCUVdFN1FVRkRZbTlDTEUxQlFVRkJMSEZDUVVGeFFqdEJRVU40UWp0QlFWcEZMRWRCUVZBN1FVRmpTQ3hEUVd4SWFVTXNSVUZCYkVNc1F5eERRVzlJUVRzN08wRkJRMEZOTEUxQlFVMHNRMEZCUTBNc2EwSkJRVkFzUTBGQk1FSXNXVUZCV1R0QlFVTnNRM2hFTEVWQlFVRkJMREpDUVVFeVFpeERRVUZEYzBRc1NVRkJOVUk3UVVGRFNDeERRVVpFSWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZMeTR2Y21WemIzVnlZMlZ6TDJGemMyVjBjeTlqYjNKbEwycHpMMk4xYzNSdmJTOWhjSEJ6TDJWamIyMXRaWEpqWlM5eVpYQnZjblJ6TDNKbGRIVnlibk12Y21WMGRYSnVjeTVxY3o4NE5XRTNJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWx3aWRYTmxJSE4wY21samRGd2lPMXh5WEc1Y2NseHVMeThnUTJ4aGMzTWdaR1ZtYVc1cGRHbHZibHh5WEc1MllYSWdTMVJCY0hCRlkyOXRiV1Z5WTJWU1pYQnZjblJTWlhSMWNtNXpJRDBnWm5WdVkzUnBiMjRnS0NrZ2UxeHlYRzRnSUNBZ0x5OGdVMmhoY21Wa0lIWmhjbWxoWW14bGMxeHlYRzRnSUNBZ2RtRnlJSFJoWW14bE8xeHlYRzRnSUNBZ2RtRnlJR1JoZEdGMFlXSnNaVHRjY2x4dVhISmNiaUFnSUNBdkx5QlFjbWwyWVhSbElHWjFibU4wYVc5dWMxeHlYRzRnSUNBZ2RtRnlJR2x1YVhSRVlYUmhkR0ZpYkdVZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0x5OGdVMlYwSUdSaGRHVWdaR0YwWVNCdmNtUmxjbHh5WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSFJoWW14bFVtOTNjeUE5SUhSaFlteGxMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KM1JpYjJSNUlIUnlKeWs3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFJoWW14bFVtOTNjeTVtYjNKRllXTm9LSEp2ZHlBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdSaGRHVlNiM2NnUFNCeWIzY3VjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25kR1FuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjbVZoYkVSaGRHVWdQU0J0YjIxbGJuUW9aR0YwWlZKdmQxc3dYUzVwYm01bGNraFVUVXdzSUZ3aVRVMU5JRVJFTENCWldWbFpYQ0lwTG1admNtMWhkQ2dwT3lBdkx5QnpaV3hsWTNRZ1pHRjBaU0JtY205dElEUjBhQ0JqYjJ4MWJXNGdhVzRnZEdGaWJHVmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHRjBaVkp2ZDFzd1hTNXpaWFJCZEhSeWFXSjFkR1VvSjJSaGRHRXRiM0prWlhJbkxDQnlaV0ZzUkdGMFpTazdYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dklFbHVhWFFnWkdGMFlYUmhZbXhsSUMwdExTQnRiM0psSUdsdVptOGdiMjRnWkdGMFlYUmhZbXhsY3pvZ2FIUjBjSE02THk5a1lYUmhkR0ZpYkdWekxtNWxkQzl0WVc1MVlXd3ZYSEpjYmlBZ0lDQWdJQ0FnWkdGMFlYUmhZbXhsSUQwZ0pDaDBZV0pzWlNrdVJHRjBZVlJoWW14bEtIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1hDSnBibVp2WENJNklHWmhiSE5sTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FuYjNKa1pYSW5PaUJiWFN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSjNCaFoyVk1aVzVuZEdnbk9pQXhNQ3hjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F2THlCSmJtbDBJR1JoZEdWeVlXNW5aWEJwWTJ0bGNseHlYRzRnSUNBZ2RtRnlJR2x1YVhSRVlYUmxjbUZ1WjJWd2FXTnJaWElnUFNBb0tTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE4wWVhKMElEMGdiVzl0Wlc1MEtDa3VjM1ZpZEhKaFkzUW9NamtzSUZ3aVpHRjVjMXdpS1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWlc1a0lEMGdiVzl0Wlc1MEtDazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbHVjSFYwSUQwZ0pDaGNJaU5yZEY5bFkyOXRiV1Z5WTJWZmNtVndiM0owWDNKbGRIVnlibk5mWkdGMFpYSmhibWRsY0dsamEyVnlYQ0lwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJqWWloemRHRnlkQ3dnWlc1a0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHVjSFYwTG1oMGJXd29jM1JoY25RdVptOXliV0YwS0Z3aVRVMU5UU0JFTENCWldWbFpYQ0lwSUNzZ1hDSWdMU0JjSWlBcklHVnVaQzVtYjNKdFlYUW9YQ0pOVFUxTklFUXNJRmxaV1ZsY0lpa3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVc1d2RYUXVaR0YwWlhKaGJtZGxjR2xqYTJWeUtIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUmhjblJFWVhSbE9pQnpkR0Z5ZEN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWlc1a1JHRjBaVG9nWlc1a0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVlXNW5aWE02SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lWRzlrWVhsY0lqb2dXMjF2YldWdWRDZ3BMQ0J0YjIxbGJuUW9LVjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lsbGxjM1JsY21SaGVWd2lPaUJiYlc5dFpXNTBLQ2t1YzNWaWRISmhZM1FvTVN3Z1hDSmtZWGx6WENJcExDQnRiMjFsYm5Rb0tTNXpkV0owY21GamRDZ3hMQ0JjSW1SaGVYTmNJaWxkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSk1ZWE4wSURjZ1JHRjVjMXdpT2lCYmJXOXRaVzUwS0NrdWMzVmlkSEpoWTNRb05pd2dYQ0prWVhselhDSXBMQ0J0YjIxbGJuUW9LVjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lreGhjM1FnTXpBZ1JHRjVjMXdpT2lCYmJXOXRaVzUwS0NrdWMzVmlkSEpoWTNRb01qa3NJRndpWkdGNWMxd2lLU3dnYlc5dFpXNTBLQ2xkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSlVhR2x6SUUxdmJuUm9YQ0k2SUZ0dGIyMWxiblFvS1M1emRHRnlkRTltS0Z3aWJXOXVkR2hjSWlrc0lHMXZiV1Z1ZENncExtVnVaRTltS0Z3aWJXOXVkR2hjSWlsZExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0pNWVhOMElFMXZiblJvWENJNklGdHRiMjFsYm5Rb0tTNXpkV0owY21GamRDZ3hMQ0JjSW0xdmJuUm9YQ0lwTG5OMFlYSjBUMllvWENKdGIyNTBhRndpS1N3Z2JXOXRaVzUwS0NrdWMzVmlkSEpoWTNRb01Td2dYQ0p0YjI1MGFGd2lLUzVsYm1SUFppaGNJbTF2Ym5Sb1hDSXBYVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlN3Z1kySXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQmpZaWh6ZEdGeWRDd2daVzVrS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZMeUJJYjI5cklHVjRjRzl5ZENCaWRYUjBiMjV6WEhKY2JpQWdJQ0IyWVhJZ1pYaHdiM0owUW5WMGRHOXVjeUE5SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCamIyNXpkQ0JrYjJOMWJXVnVkRlJwZEd4bElEMGdKMUpsZEhWeWJuTWdVbVZ3YjNKMEp6dGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1luVjBkRzl1Y3lBOUlHNWxkeUFrTG1adUxtUmhkR0ZVWVdKc1pTNUNkWFIwYjI1ektIUmhZbXhsTENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKMWRIUnZibk02SUZ0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGVIUmxibVE2SUNkamIzQjVTSFJ0YkRVbkxGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGRHeGxPaUJrYjJOMWJXVnVkRlJwZEd4bFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Y0ZEdWdVpEb2dKMlY0WTJWc1NIUnRiRFVuTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJwZEd4bE9pQmtiMk4xYldWdWRGUnBkR3hsWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVjRkR1Z1WkRvZ0oyTnpka2gwYld3MUp5eGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFYUnNaVG9nWkc5amRXMWxiblJVYVhSc1pWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsZUhSbGJtUTZJQ2R3WkdaSWRHMXNOU2NzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2wwYkdVNklHUnZZM1Z0Wlc1MFZHbDBiR1ZjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWFZ4eVhHNGdJQ0FnSUNBZ0lIMHBMbU52Ym5SaGFXNWxjaWdwTG1Gd2NHVnVaRlJ2S0NRb0p5TnJkRjlsWTI5dGJXVnlZMlZmY21Wd2IzSjBYM0psZEhWeWJuTmZaWGh3YjNKMEp5a3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXZMeUJJYjI5cklHUnliM0JrYjNkdUlHMWxiblVnWTJ4cFkyc2daWFpsYm5RZ2RHOGdaR0YwWVhSaFlteGxJR1Y0Y0c5eWRDQmlkWFIwYjI1elhISmNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1pYaHdiM0owUW5WMGRHOXVjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnlOcmRGOWxZMjl0YldWeVkyVmZjbVZ3YjNKMFgzSmxkSFZ5Ym5OZlpYaHdiM0owWDIxbGJuVWdXMlJoZEdFdGEzUXRaV052YlcxbGNtTmxMV1Y0Y0c5eWRGMG5LVHRjY2x4dUlDQWdJQ0FnSUNCbGVIQnZjblJDZFhSMGIyNXpMbVp2Y2tWaFkyZ29aWGh3YjNKMFFuVjBkRzl1SUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pYaHdiM0owUW5WMGRHOXVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2daU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdSMlYwSUdOc2FXTnJaV1FnWlhod2IzSjBJSFpoYkhWbFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCbGVIQnZjblJXWVd4MVpTQTlJR1V1ZEdGeVoyVjBMbWRsZEVGMGRISnBZblYwWlNnblpHRjBZUzFyZEMxbFkyOXRiV1Z5WTJVdFpYaHdiM0owSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMFlYSm5aWFFnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1WkhRdFluVjBkRzl1Y3lBdVluVjBkRzl1Y3kwbklDc2daWGh3YjNKMFZtRnNkV1VwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUZSeWFXZG5aWElnWTJ4cFkyc2daWFpsYm5RZ2IyNGdhR2xrWkdWdUlHUmhkR0YwWVdKc1pTQmxlSEJ2Y25RZ1luVjBkRzl1YzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwTG1Oc2FXTnJLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVYSEpjYmlBZ0lDQXZMeUJUWldGeVkyZ2dSR0YwWVhSaFlteGxJQzB0TFNCdlptWnBZMmxoYkNCa2IyTnpJSEpsWm1WeVpXNWpaVG9nYUhSMGNITTZMeTlrWVhSaGRHRmliR1Z6TG01bGRDOXlaV1psY21WdVkyVXZZWEJwTDNObFlYSmphQ2dwWEhKY2JpQWdJQ0IyWVhJZ2FHRnVaR3hsVTJWaGNtTm9SR0YwWVhSaFlteGxJRDBnS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1pwYkhSbGNsTmxZWEpqYUNBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSjF0a1lYUmhMV3QwTFdWamIyMXRaWEpqWlMxdmNtUmxjaTFtYVd4MFpYSTlYQ0p6WldGeVkyaGNJbDBuS1R0Y2NseHVJQ0FnSUNBZ0lDQm1hV3gwWlhKVFpXRnlZMmd1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYTJWNWRYQW5MQ0JtZFc1amRHbHZiaUFvWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhkR0ZpYkdVdWMyVmhjbU5vS0dVdWRHRnlaMlYwTG5aaGJIVmxLUzVrY21GM0tDazdYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeThnVUhWaWJHbGpJRzFsZEdodlpITmNjbHh1SUNBZ0lISmxkSFZ5YmlCN1hISmNiaUFnSUNBZ0lDQWdhVzVwZERvZ1puVnVZM1JwYjI0Z0tDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBZV0pzWlNBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnlOcmRGOWxZMjl0YldWeVkyVmZjbVZ3YjNKMFgzSmxkSFZ5Ym5OZmRHRmliR1VuS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doZEdGaWJHVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1cGRFUmhkR0YwWVdKc1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBibWwwUkdGMFpYSmhibWRsY0dsamEyVnlLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1Y0Y0c5eWRFSjFkSFJ2Ym5Nb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHRnVaR3hsVTJWaGNtTm9SR0YwWVhSaFlteGxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZUdGNjbHh1ZlNncE8xeHlYRzVjY2x4dUx5OGdUMjRnWkc5amRXMWxiblFnY21WaFpIbGNjbHh1UzFSVmRHbHNMbTl1UkU5TlEyOXVkR1Z1ZEV4dllXUmxaQ2htZFc1amRHbHZiaUFvS1NCN1hISmNiaUFnSUNCTFZFRndjRVZqYjIxdFpYSmpaVkpsY0c5eWRGSmxkSFZ5Ym5NdWFXNXBkQ2dwTzF4eVhHNTlLVHRjY2x4dUlsMHNJbTVoYldWeklqcGJJa3RVUVhCd1JXTnZiVzFsY21ObFVtVndiM0owVW1WMGRYSnVjeUlzSW5SaFlteGxJaXdpWkdGMFlYUmhZbXhsSWl3aWFXNXBkRVJoZEdGMFlXSnNaU0lzSW5SaFlteGxVbTkzY3lJc0luRjFaWEo1VTJWc1pXTjBiM0pCYkd3aUxDSm1iM0pGWVdOb0lpd2ljbTkzSWl3aVpHRjBaVkp2ZHlJc0luSmxZV3hFWVhSbElpd2liVzl0Wlc1MElpd2lhVzV1WlhKSVZFMU1JaXdpWm05eWJXRjBJaXdpYzJWMFFYUjBjbWxpZFhSbElpd2lKQ0lzSWtSaGRHRlVZV0pzWlNJc0ltbHVhWFJFWVhSbGNtRnVaMlZ3YVdOclpYSWlMQ0p6ZEdGeWRDSXNJbk4xWW5SeVlXTjBJaXdpWlc1a0lpd2lhVzV3ZFhRaUxDSmpZaUlzSW1oMGJXd2lMQ0prWVhSbGNtRnVaMlZ3YVdOclpYSWlMQ0p6ZEdGeWRFUmhkR1VpTENKbGJtUkVZWFJsSWl3aWNtRnVaMlZ6SWl3aWMzUmhjblJQWmlJc0ltVnVaRTltSWl3aVpYaHdiM0owUW5WMGRHOXVjeUlzSW1SdlkzVnRaVzUwVkdsMGJHVWlMQ0ppZFhSMGIyNXpJaXdpWm00aUxDSmtZWFJoVkdGaWJHVWlMQ0pDZFhSMGIyNXpJaXdpWlhoMFpXNWtJaXdpZEdsMGJHVWlMQ0pqYjI1MFlXbHVaWElpTENKaGNIQmxibVJVYnlJc0ltUnZZM1Z0Wlc1MElpd2laWGh3YjNKMFFuVjBkRzl1SWl3aVlXUmtSWFpsYm5STWFYTjBaVzVsY2lJc0ltVWlMQ0p3Y21WMlpXNTBSR1ZtWVhWc2RDSXNJbVY0Y0c5eWRGWmhiSFZsSWl3aWRHRnlaMlYwSWl3aVoyVjBRWFIwY21saWRYUmxJaXdpY1hWbGNubFRaV3hsWTNSdmNpSXNJbU5zYVdOcklpd2lhR0Z1Wkd4bFUyVmhjbU5vUkdGMFlYUmhZbXhsSWl3aVptbHNkR1Z5VTJWaGNtTm9JaXdpYzJWaGNtTm9JaXdpZG1Gc2RXVWlMQ0prY21GM0lpd2lhVzVwZENJc0lrdFVWWFJwYkNJc0ltOXVSRTlOUTI5dWRHVnVkRXh2WVdSbFpDSmRMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL3JlcG9ydHMvcmV0dXJucy9yZXR1cm5zLmpzXFxuXCIpO1xyXG5cclxuLyoqKi8gfSlcclxuXHJcbi8qKioqKiovIFx0fSk7XHJcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcbi8qKioqKiovIFx0XHJcbi8qKioqKiovIFx0Ly8gc3RhcnR1cFxyXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xyXG4vKioqKioqLyBcdC8vIFRoaXMgZW50cnkgbW9kdWxlIGNhbid0IGJlIGlubGluZWQgYmVjYXVzZSB0aGUgZXZhbC1zb3VyY2UtbWFwIGRldnRvb2wgaXMgdXNlZC5cclxuLyoqKioqKi8gXHR2YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IHt9O1xyXG4vKioqKioqLyBcdF9fd2VicGFja19tb2R1bGVzX19bXCIuL3Jlc291cmNlcy9hc3NldHMvY29yZS9qcy9jdXN0b20vYXBwcy9lY29tbWVyY2UvcmVwb3J0cy9yZXR1cm5zL3JldHVybnMuanNcIl0oKTtcclxuLyoqKioqKi8gXHRcclxuLyoqKioqKi8gfSkoKVxyXG47Il0sImZpbGUiOiIuL3Jlc291cmNlcy9hc3NldHMvZGVtbzEvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL3JlcG9ydHMvcmV0dXJucy9yZXR1cm5zLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/ecommerce/reports/returns/returns.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/reports/returns/returns.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/ecommerce/reports/returns/returns.js"]();
/******/ 	
/******/ })()
;