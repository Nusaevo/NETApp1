/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js":
/*!****************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js ***!
  \****************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTAppEcommerceProducts = function () {\n  // Shared variables\n  var table;\n  var datatable;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10,\n      'columnDefs': [{\n        orderable: false,\n        targets: 0\n      },\n      // Disable ordering on column 0 (checkbox)\n      {\n        orderable: false,\n        targets: 7\n      } // Disable ordering on column 7 (actions)\n      ]\n    });\n\n    // Re-init functions on datatable re-draws\n    datatable.on('draw', function () {\n      handleDeleteRows();\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-product-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Handle status filter dropdown\n  var handleStatusFilter = function handleStatusFilter() {\n    var filterStatus = document.querySelector('[data-kt-ecommerce-product-filter=\"status\"]');\n    $(filterStatus).on('change', function (e) {\n      var value = e.target.value;\n      if (value === 'all') {\n        value = '';\n      }\n      datatable.column(6).search(value).draw();\n    });\n  };\n\n  // Delete cateogry\n  var handleDeleteRows = function handleDeleteRows() {\n    // Select all delete buttons\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-product-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        var parent = e.target.closest('tr');\n\n        // Get category name\n        var productName = parent.querySelector('[data-kt-ecommerce-product-filter=\"product_name\"]').innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to delete \" + productName + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have deleted \" + productName + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: productName + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_products_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      handleSearchDatatable();\n      handleStatusFilter();\n      handleDeleteRows();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceProducts.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvcHJvZHVjdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxJQUFJQSxzQkFBc0IsR0FBRyxZQUFZO0VBQ3JDO0VBQ0EsSUFBSUMsS0FBSztFQUNULElBQUlDLFNBQVM7O0VBRWI7RUFDQSxJQUFJQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUEsRUFBZTtJQUM1QjtJQUNBRCxTQUFTLEdBQUdFLENBQUMsQ0FBQ0gsS0FBSyxDQUFDLENBQUNJLFNBQVMsQ0FBQztNQUMzQixNQUFNLEVBQUUsS0FBSztNQUNiLE9BQU8sRUFBRSxFQUFFO01BQ1gsWUFBWSxFQUFFLEVBQUU7TUFDaEIsWUFBWSxFQUFFLENBQ1Y7UUFBRUMsU0FBUyxFQUFFLEtBQUs7UUFBRUMsT0FBTyxFQUFFO01BQUUsQ0FBQztNQUFFO01BQ2xDO1FBQUVELFNBQVMsRUFBRSxLQUFLO1FBQUVDLE9BQU8sRUFBRTtNQUFFLENBQUMsQ0FBRTtNQUFBO0lBRTFDLENBQUMsQ0FBQzs7SUFFRjtJQUNBTCxTQUFTLENBQUNNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsWUFBWTtNQUM3QkMsZ0JBQWdCLENBQUMsQ0FBQztJQUN0QixDQUFDLENBQUM7RUFDTixDQUFDOztFQUVEO0VBQ0EsSUFBSUMscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUFxQkEsQ0FBQSxFQUFTO0lBQzlCLElBQU1DLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsNkNBQTZDLENBQUM7SUFDMUZGLFlBQVksQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQVVDLENBQUMsRUFBRTtNQUNoRGIsU0FBUyxDQUFDYyxNQUFNLENBQUNELENBQUMsQ0FBQ0UsTUFBTSxDQUFDQyxLQUFLLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLElBQUlDLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUEsRUFBUztJQUMzQixJQUFNQyxZQUFZLEdBQUdULFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLDZDQUE2QyxDQUFDO0lBQzFGVCxDQUFDLENBQUNpQixZQUFZLENBQUMsQ0FBQ2IsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFBTyxDQUFDLEVBQUk7TUFDOUIsSUFBSUcsS0FBSyxHQUFHSCxDQUFDLENBQUNFLE1BQU0sQ0FBQ0MsS0FBSztNQUMxQixJQUFHQSxLQUFLLEtBQUssS0FBSyxFQUFDO1FBQ2ZBLEtBQUssR0FBRyxFQUFFO01BQ2Q7TUFDQWhCLFNBQVMsQ0FBQ29CLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ04sTUFBTSxDQUFDRSxLQUFLLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLElBQUlWLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUEsRUFBUztJQUN6QjtJQUNBLElBQU1jLGFBQWEsR0FBR3RCLEtBQUssQ0FBQ3VCLGdCQUFnQixDQUFDLGlEQUFpRCxDQUFDO0lBRS9GRCxhQUFhLENBQUNFLE9BQU8sQ0FBQyxVQUFBQyxDQUFDLEVBQUk7TUFDdkI7TUFDQUEsQ0FBQyxDQUFDWixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBVUMsQ0FBQyxFQUFFO1FBQ3JDQSxDQUFDLENBQUNZLGNBQWMsQ0FBQyxDQUFDOztRQUVsQjtRQUNBLElBQU1DLE1BQU0sR0FBR2IsQ0FBQyxDQUFDRSxNQUFNLENBQUNZLE9BQU8sQ0FBQyxJQUFJLENBQUM7O1FBRXJDO1FBQ0EsSUFBTUMsV0FBVyxHQUFHRixNQUFNLENBQUNmLGFBQWEsQ0FBQyxtREFBbUQsQ0FBQyxDQUFDa0IsU0FBUzs7UUFFdkc7UUFDQUMsSUFBSSxDQUFDQyxJQUFJLENBQUM7VUFDTkMsSUFBSSxFQUFFLGtDQUFrQyxHQUFHSixXQUFXLEdBQUcsR0FBRztVQUM1REssSUFBSSxFQUFFLFNBQVM7VUFDZkMsZ0JBQWdCLEVBQUUsSUFBSTtVQUN0QkMsY0FBYyxFQUFFLEtBQUs7VUFDckJDLGlCQUFpQixFQUFFLGNBQWM7VUFDakNDLGdCQUFnQixFQUFFLFlBQVk7VUFDOUJDLFdBQVcsRUFBRTtZQUNUQyxhQUFhLEVBQUUsd0JBQXdCO1lBQ3ZDQyxZQUFZLEVBQUU7VUFDbEI7UUFDSixDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFVBQVVDLE1BQU0sRUFBRTtVQUN0QixJQUFJQSxNQUFNLENBQUMxQixLQUFLLEVBQUU7WUFDZGMsSUFBSSxDQUFDQyxJQUFJLENBQUM7Y0FDTkMsSUFBSSxFQUFFLG1CQUFtQixHQUFHSixXQUFXLEdBQUcsSUFBSTtjQUM5Q0ssSUFBSSxFQUFFLFNBQVM7Y0FDZkUsY0FBYyxFQUFFLEtBQUs7Y0FDckJDLGlCQUFpQixFQUFFLGFBQWE7Y0FDaENFLFdBQVcsRUFBRTtnQkFDVEMsYUFBYSxFQUFFO2NBQ25CO1lBQ0osQ0FBQyxDQUFDLENBQUNFLElBQUksQ0FBQyxZQUFZO2NBQ2hCO2NBQ0F6QyxTQUFTLENBQUMyQyxHQUFHLENBQUN6QyxDQUFDLENBQUN3QixNQUFNLENBQUMsQ0FBQyxDQUFDa0IsTUFBTSxDQUFDLENBQUMsQ0FBQzNCLElBQUksQ0FBQyxDQUFDO1lBQzVDLENBQUMsQ0FBQztVQUNOLENBQUMsTUFBTSxJQUFJeUIsTUFBTSxDQUFDRyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQ3BDZixJQUFJLENBQUNDLElBQUksQ0FBQztjQUNOQyxJQUFJLEVBQUVKLFdBQVcsR0FBRyxtQkFBbUI7Y0FDdkNLLElBQUksRUFBRSxPQUFPO2NBQ2JFLGNBQWMsRUFBRSxLQUFLO2NBQ3JCQyxpQkFBaUIsRUFBRSxhQUFhO2NBQ2hDRSxXQUFXLEVBQUU7Z0JBQ1RDLGFBQWEsRUFBRTtjQUNuQjtZQUNKLENBQUMsQ0FBQztVQUNOO1FBQ0osQ0FBQyxDQUFDO01BQ04sQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFHRDtFQUNBLE9BQU87SUFDSE8sSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkL0MsS0FBSyxHQUFHVyxRQUFRLENBQUNDLGFBQWEsQ0FBQyw4QkFBOEIsQ0FBQztNQUU5RCxJQUFJLENBQUNaLEtBQUssRUFBRTtRQUNSO01BQ0o7TUFFQUUsYUFBYSxDQUFDLENBQUM7TUFDZk8scUJBQXFCLENBQUMsQ0FBQztNQUN2QlUsa0JBQWtCLENBQUMsQ0FBQztNQUNwQlgsZ0JBQWdCLENBQUMsQ0FBQztJQUN0QjtFQUNKLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQzs7QUFFSDtBQUNBd0MsTUFBTSxDQUFDQyxrQkFBa0IsQ0FBQyxZQUFZO0VBQ2xDbEQsc0JBQXNCLENBQUNnRCxJQUFJLENBQUMsQ0FBQztBQUNqQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvcHJvZHVjdHMuanM/NDNmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gQ2xhc3MgZGVmaW5pdGlvblxudmFyIEtUQXBwRWNvbW1lcmNlUHJvZHVjdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gU2hhcmVkIHZhcmlhYmxlc1xuICAgIHZhciB0YWJsZTtcbiAgICB2YXIgZGF0YXRhYmxlO1xuXG4gICAgLy8gUHJpdmF0ZSBmdW5jdGlvbnNcbiAgICB2YXIgaW5pdERhdGF0YWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gSW5pdCBkYXRhdGFibGUgLS0tIG1vcmUgaW5mbyBvbiBkYXRhdGFibGVzOiBodHRwczovL2RhdGF0YWJsZXMubmV0L21hbnVhbC9cbiAgICAgICAgZGF0YXRhYmxlID0gJCh0YWJsZSkuRGF0YVRhYmxlKHtcbiAgICAgICAgICAgIFwiaW5mb1wiOiBmYWxzZSxcbiAgICAgICAgICAgICdvcmRlcic6IFtdLFxuICAgICAgICAgICAgJ3BhZ2VMZW5ndGgnOiAxMCxcbiAgICAgICAgICAgICdjb2x1bW5EZWZzJzogW1xuICAgICAgICAgICAgICAgIHsgb3JkZXJhYmxlOiBmYWxzZSwgdGFyZ2V0czogMCB9LCAvLyBEaXNhYmxlIG9yZGVyaW5nIG9uIGNvbHVtbiAwIChjaGVja2JveClcbiAgICAgICAgICAgICAgICB7IG9yZGVyYWJsZTogZmFsc2UsIHRhcmdldHM6IDcgfSwgLy8gRGlzYWJsZSBvcmRlcmluZyBvbiBjb2x1bW4gNyAoYWN0aW9ucylcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gUmUtaW5pdCBmdW5jdGlvbnMgb24gZGF0YXRhYmxlIHJlLWRyYXdzXG4gICAgICAgIGRhdGF0YWJsZS5vbignZHJhdycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGhhbmRsZURlbGV0ZVJvd3MoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gU2VhcmNoIERhdGF0YWJsZSAtLS0gb2ZmaWNpYWwgZG9jcyByZWZlcmVuY2U6IGh0dHBzOi8vZGF0YXRhYmxlcy5uZXQvcmVmZXJlbmNlL2FwaS9zZWFyY2goKVxuICAgIHZhciBoYW5kbGVTZWFyY2hEYXRhdGFibGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpbHRlclNlYXJjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVjb21tZXJjZS1wcm9kdWN0LWZpbHRlcj1cInNlYXJjaFwiXScpO1xuICAgICAgICBmaWx0ZXJTZWFyY2guYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZGF0YXRhYmxlLnNlYXJjaChlLnRhcmdldC52YWx1ZSkuZHJhdygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgc3RhdHVzIGZpbHRlciBkcm9wZG93blxuICAgIHZhciBoYW5kbGVTdGF0dXNGaWx0ZXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpbHRlclN0YXR1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVjb21tZXJjZS1wcm9kdWN0LWZpbHRlcj1cInN0YXR1c1wiXScpO1xuICAgICAgICAkKGZpbHRlclN0YXR1cykub24oJ2NoYW5nZScsIGUgPT4ge1xuICAgICAgICAgICAgbGV0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICBpZih2YWx1ZSA9PT0gJ2FsbCcpe1xuICAgICAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRhdGFibGUuY29sdW1uKDYpLnNlYXJjaCh2YWx1ZSkuZHJhdygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBEZWxldGUgY2F0ZW9ncnlcbiAgICB2YXIgaGFuZGxlRGVsZXRlUm93cyA9ICgpID0+IHtcbiAgICAgICAgLy8gU2VsZWN0IGFsbCBkZWxldGUgYnV0dG9uc1xuICAgICAgICBjb25zdCBkZWxldGVCdXR0b25zID0gdGFibGUucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWNvbW1lcmNlLXByb2R1Y3QtZmlsdGVyPVwiZGVsZXRlX3Jvd1wiXScpO1xuXG4gICAgICAgIGRlbGV0ZUJ1dHRvbnMuZm9yRWFjaChkID0+IHtcbiAgICAgICAgICAgIC8vIERlbGV0ZSBidXR0b24gb24gY2xpY2tcbiAgICAgICAgICAgIGQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICAgIC8vIFNlbGVjdCBwYXJlbnQgcm93XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gZS50YXJnZXQuY2xvc2VzdCgndHInKTtcblxuICAgICAgICAgICAgICAgIC8vIEdldCBjYXRlZ29yeSBuYW1lXG4gICAgICAgICAgICAgICAgY29uc3QgcHJvZHVjdE5hbWUgPSBwYXJlbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWNvbW1lcmNlLXByb2R1Y3QtZmlsdGVyPVwicHJvZHVjdF9uYW1lXCJdJykuaW5uZXJUZXh0O1xuXG4gICAgICAgICAgICAgICAgLy8gU3dlZXRBbGVydDIgcG9wIHVwIC0tLSBvZmZpY2lhbCBkb2NzIHJlZmVyZW5jZTogaHR0cHM6Ly9zd2VldGFsZXJ0Mi5naXRodWIuaW8vXG4gICAgICAgICAgICAgICAgU3dhbC5maXJlKHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIFwiICsgcHJvZHVjdE5hbWUgKyBcIj9cIixcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJ3YXJuaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IFwiWWVzLCBkZWxldGUhXCIsXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6IFwiTm8sIGNhbmNlbFwiLFxuICAgICAgICAgICAgICAgICAgICBjdXN0b21DbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbjogXCJidG4gZnctYm9sZCBidG4tZGFuZ2VyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b246IFwiYnRuIGZ3LWJvbGQgYnRuLWFjdGl2ZS1saWdodC1wcmltYXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiWW91IGhhdmUgZGVsZXRlZCBcIiArIHByb2R1Y3ROYW1lICsgXCIhLlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwic3VjY2Vzc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b246IFwiYnRuIGZ3LWJvbGQgYnRuLXByaW1hcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgY3VycmVudCByb3dcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhdGFibGUucm93KCQocGFyZW50KSkucmVtb3ZlKCkuZHJhdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzdWx0LmRpc21pc3MgPT09ICdjYW5jZWwnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHByb2R1Y3ROYW1lICsgXCIgd2FzIG5vdCBkZWxldGVkLlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwiZXJyb3JcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IFwiT2ssIGdvdCBpdCFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21DbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uOiBcImJ0biBmdy1ib2xkIGJ0bi1wcmltYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgLy8gUHVibGljIG1ldGhvZHNcbiAgICByZXR1cm4ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0YWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNrdF9lY29tbWVyY2VfcHJvZHVjdHNfdGFibGUnKTtcblxuICAgICAgICAgICAgaWYgKCF0YWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5pdERhdGF0YWJsZSgpO1xuICAgICAgICAgICAgaGFuZGxlU2VhcmNoRGF0YXRhYmxlKCk7XG4gICAgICAgICAgICBoYW5kbGVTdGF0dXNGaWx0ZXIoKTtcbiAgICAgICAgICAgIGhhbmRsZURlbGV0ZVJvd3MoKTtcbiAgICAgICAgfVxuICAgIH07XG59KCk7XG5cbi8vIE9uIGRvY3VtZW50IHJlYWR5XG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcbiAgICBLVEFwcEVjb21tZXJjZVByb2R1Y3RzLmluaXQoKTtcbn0pO1xuIl0sIm5hbWVzIjpbIktUQXBwRWNvbW1lcmNlUHJvZHVjdHMiLCJ0YWJsZSIsImRhdGF0YWJsZSIsImluaXREYXRhdGFibGUiLCIkIiwiRGF0YVRhYmxlIiwib3JkZXJhYmxlIiwidGFyZ2V0cyIsIm9uIiwiaGFuZGxlRGVsZXRlUm93cyIsImhhbmRsZVNlYXJjaERhdGF0YWJsZSIsImZpbHRlclNlYXJjaCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwic2VhcmNoIiwidGFyZ2V0IiwidmFsdWUiLCJkcmF3IiwiaGFuZGxlU3RhdHVzRmlsdGVyIiwiZmlsdGVyU3RhdHVzIiwiY29sdW1uIiwiZGVsZXRlQnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZCIsInByZXZlbnREZWZhdWx0IiwicGFyZW50IiwiY2xvc2VzdCIsInByb2R1Y3ROYW1lIiwiaW5uZXJUZXh0IiwiU3dhbCIsImZpcmUiLCJ0ZXh0IiwiaWNvbiIsInNob3dDYW5jZWxCdXR0b24iLCJidXR0b25zU3R5bGluZyIsImNvbmZpcm1CdXR0b25UZXh0IiwiY2FuY2VsQnV0dG9uVGV4dCIsImN1c3RvbUNsYXNzIiwiY29uZmlybUJ1dHRvbiIsImNhbmNlbEJ1dHRvbiIsInRoZW4iLCJyZXN1bHQiLCJyb3ciLCJyZW1vdmUiLCJkaXNtaXNzIiwiaW5pdCIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/ecommerce/catalog/products.js":
/*!*****************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/ecommerce/catalog/products.js ***!
  \*****************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js\": (\n    /*!****************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js ***!\n      \\****************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomAppsEcommerceCatalogProductsJs() {\n      eval(\" // Class definition\\n\\nvar KTAppEcommerceProducts = function () {\\n  // Shared variables\\n  var table;\\n  var datatable; // Private functions\\n\\n  var initDatatable = function initDatatable() {\\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\\n    datatable = $(table).DataTable({\\n      \\\"info\\\": false,\\n      'order': [],\\n      'pageLength': 10,\\n      'columnDefs': [{\\n        orderable: false,\\n        targets: 0\\n      }, // Disable ordering on column 0 (checkbox)\\n      {\\n        orderable: false,\\n        targets: 7\\n      } // Disable ordering on column 7 (actions)\\n      ]\\n    }); // Re-init functions on datatable re-draws\\n\\n    datatable.on('draw', function () {\\n      handleDeleteRows();\\n    });\\n  }; // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\\n\\n\\n  var handleSearchDatatable = function handleSearchDatatable() {\\n    var filterSearch = document.querySelector('[data-kt-ecommerce-product-filter=\\\"search\\\"]');\\n    filterSearch.addEventListener('keyup', function (e) {\\n      datatable.search(e.target.value).draw();\\n    });\\n  }; // Handle status filter dropdown\\n\\n\\n  var handleStatusFilter = function handleStatusFilter() {\\n    var filterStatus = document.querySelector('[data-kt-ecommerce-product-filter=\\\"status\\\"]');\\n    $(filterStatus).on('change', function (e) {\\n      var value = e.target.value;\\n\\n      if (value === 'all') {\\n        value = '';\\n      }\\n\\n      datatable.column(6).search(value).draw();\\n    });\\n  }; // Delete cateogry\\n\\n\\n  var handleDeleteRows = function handleDeleteRows() {\\n    // Select all delete buttons\\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-product-filter=\\\"delete_row\\\"]');\\n    deleteButtons.forEach(function (d) {\\n      // Delete button on click\\n      d.addEventListener('click', function (e) {\\n        e.preventDefault(); // Select parent row\\n\\n        var parent = e.target.closest('tr'); // Get category name\\n\\n        var productName = parent.querySelector('[data-kt-ecommerce-product-filter=\\\"product_name\\\"]').innerText; // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\\n\\n        Swal.fire({\\n          text: \\\"Are you sure you want to delete \\\" + productName + \\\"?\\\",\\n          icon: \\\"warning\\\",\\n          showCancelButton: true,\\n          buttonsStyling: false,\\n          confirmButtonText: \\\"Yes, delete!\\\",\\n          cancelButtonText: \\\"No, cancel\\\",\\n          customClass: {\\n            confirmButton: \\\"btn fw-bold btn-danger\\\",\\n            cancelButton: \\\"btn fw-bold btn-active-light-primary\\\"\\n          }\\n        }).then(function (result) {\\n          if (result.value) {\\n            Swal.fire({\\n              text: \\\"You have deleted \\\" + productName + \\\"!.\\\",\\n              icon: \\\"success\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn fw-bold btn-primary\\\"\\n              }\\n            }).then(function () {\\n              // Remove current row\\n              datatable.row($(parent)).remove().draw();\\n            });\\n          } else if (result.dismiss === 'cancel') {\\n            Swal.fire({\\n              text: productName + \\\" was not deleted.\\\",\\n              icon: \\\"error\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn fw-bold btn-primary\\\"\\n              }\\n            });\\n          }\\n        });\\n      });\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      table = document.querySelector('#kt_ecommerce_products_table');\\n\\n      if (!table) {\\n        return;\\n      }\\n\\n      initDatatable();\\n      handleSearchDatatable();\\n      handleStatusFilter();\\n      handleDeleteRows();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTAppEcommerceProducts.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/ecommerce/catalog/products.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/catalog/products.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/ecommerce/catalog/products.js"]();
/******/ 	
/******/ })()
;