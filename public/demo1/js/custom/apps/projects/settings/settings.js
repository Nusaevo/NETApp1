/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/projects/settings/settings.js":
/*!****************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/projects/settings/settings.js ***!
  \****************************************************************************/
/***/ (() => {

"use strict";
eval(" // Class definition\n\nvar KTProjectSettings = function () {\n  // Private functions\n  var handleForm = function handleForm() {\n    // Init Datepicker --- For more info, please check Flatpickr's official documentation: https://flatpickr.js.org/\n    $(\"#kt_datepicker_1\").flatpickr(); // Form validation\n\n    var validation;\n\n    var _form = document.getElementById('kt_project_settings_form');\n\n    var submitButton = _form.querySelector('#kt_project_settings_submit'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n\n    validation = FormValidation.formValidation(_form, {\n      fields: {\n        name: {\n          validators: {\n            notEmpty: {\n              message: 'Project name is required'\n            }\n          }\n        },\n        type: {\n          validators: {\n            notEmpty: {\n              message: 'Project type is required'\n            }\n          }\n        },\n        description: {\n          validators: {\n            notEmpty: {\n              message: 'Project Description is required'\n            }\n          }\n        },\n        date: {\n          validators: {\n            notEmpty: {\n              message: 'Due Date is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row'\n        })\n      }\n    });\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      validation.validate().then(function (status) {\n        if (status == 'Valid') {\n          swal.fire({\n            text: \"Thank you! You've updated your project settings\",\n            icon: \"success\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-light-primary\"\n            }\n          });\n        } else {\n          swal.fire({\n            text: \"Sorry, looks like there are some errors detected, please try again.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-light-primary\"\n            }\n          });\n        }\n      });\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      handleForm();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTProjectSettings.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/projects/settings/settings.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/projects/settings/settings.js":
/*!*****************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/projects/settings/settings.js ***!
  \*****************************************************************************/
/***/ (() => {

eval("/*\r\n * ATTENTION: An \"eval-source-map\" devtool has been used.\r\n * This devtool is neither made for production nor for readable output files.\r\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\r\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\r\n * or disable the default devtool with \"devtool: false\".\r\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\r\n */\n\n/******/\n(function () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    \"./resources/assets/core/js/custom/apps/projects/settings/settings.js\":\n    /*!****************************************************************************!*\\\r\n      !*** ./resources/assets/core/js/custom/apps/projects/settings/settings.js ***!\r\n      \\****************************************************************************/\n\n    /***/\n    function resourcesAssetsCoreJsCustomAppsProjectsSettingsSettingsJs() {\n      eval(\" // Class definition\\n\\nvar KTProjectSettings = function () {\\n  // Private functions\\n  var handleForm = function handleForm() {\\n    // Init Datepicker --- For more info, please check Flatpickr's official documentation: https://flatpickr.js.org/\\n    $(\\\"#kt_datepicker_1\\\").flatpickr(); // Form validation\\n\\n    var validation;\\n\\n    var _form = document.getElementById('kt_project_settings_form');\\n\\n    var submitButton = _form.querySelector('#kt_project_settings_submit'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\\n\\n\\n    validation = FormValidation.formValidation(_form, {\\n      fields: {\\n        name: {\\n          validators: {\\n            notEmpty: {\\n              message: 'Project name is required'\\n            }\\n          }\\n        },\\n        type: {\\n          validators: {\\n            notEmpty: {\\n              message: 'Project type is required'\\n            }\\n          }\\n        },\\n        description: {\\n          validators: {\\n            notEmpty: {\\n              message: 'Project Description is required'\\n            }\\n          }\\n        },\\n        date: {\\n          validators: {\\n            notEmpty: {\\n              message: 'Due Date is required'\\n            }\\n          }\\n        }\\n      },\\n      plugins: {\\n        trigger: new FormValidation.plugins.Trigger(),\\n        submitButton: new FormValidation.plugins.SubmitButton(),\\n        //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\\n        bootstrap: new FormValidation.plugins.Bootstrap5({\\n          rowSelector: '.fv-row'\\n        })\\n      }\\n    });\\n    submitButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      validation.validate().then(function (status) {\\n        if (status == 'Valid') {\\n          swal.fire({\\n            text: \\\"Thank you! You've updated your project settings\\\",\\n            icon: \\\"success\\\",\\n            buttonsStyling: false,\\n            confirmButtonText: \\\"Ok, got it!\\\",\\n            customClass: {\\n              confirmButton: \\\"btn fw-bold btn-light-primary\\\"\\n            }\\n          });\\n        } else {\\n          swal.fire({\\n            text: \\\"Sorry, looks like there are some errors detected, please try again.\\\",\\n            icon: \\\"error\\\",\\n            buttonsStyling: false,\\n            confirmButtonText: \\\"Ok, got it!\\\",\\n            customClass: {\\n              confirmButton: \\\"btn fw-bold btn-light-primary\\\"\\n            }\\n          });\\n        }\\n      });\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      handleForm();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTProjectSettings.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/projects/settings/settings.js\\n\");\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n  // This entry module can't be inlined because the eval-source-map devtool is used.\n\n  /******/\n\n  var __webpack_exports__ = {};\n  /******/\n\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/projects/settings/settings.js\"]();\n  /******/\n\n  /******/\n\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/projects/settings/settings.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/projects/settings/settings.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/projects/settings/settings.js"]();
/******/ 	
/******/ })()
;