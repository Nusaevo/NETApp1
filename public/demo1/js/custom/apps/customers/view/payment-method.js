/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/customers/view/payment-method.js":
/*!*******************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/customers/view/payment-method.js ***!
  \*******************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTCustomerViewPaymentMethod = function () {\n  // Private functions\n  var initPaymentMethod = function initPaymentMethod() {\n    // Define variables\n    var table = document.getElementById('kt_customer_view_payment_method');\n    var tableRows = table.querySelectorAll('[ data-kt-customer-payment-method=\"row\"]');\n    tableRows.forEach(function (row) {\n      // Select delete button\n      var deleteButton = row.querySelector('[data-kt-customer-payment-method=\"delete\"]');\n\n      // Delete button action\n      deleteButton.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Popup confirmation\n        Swal.fire({\n          text: \"Are you sure you would like to delete this card?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete it!\",\n          cancelButtonText: \"No, return\",\n          customClass: {\n            confirmButton: \"btn btn-primary\",\n            cancelButton: \"btn btn-active-light\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            row.remove();\n            modal.hide(); // Hide modal\t\t\t\t\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: \"Your card was not deleted!.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Handle set as primary button\n  var handlePrimaryButton = function handlePrimaryButton() {\n    // Define variable\n    var button = document.querySelector('[data-kt-payment-mehtod-action=\"set_as_primary\"]');\n    button.addEventListener('click', function (e) {\n      e.preventDefault();\n\n      // Popup confirmation\n      Swal.fire({\n        text: \"Are you sure you would like to set this card as primary?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, set it!\",\n        cancelButtonText: \"No, return\",\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          cancelButton: \"btn btn-active-light\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            text: \"Your card was set to primary!.\",\n            icon: \"success\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Your card was not set to primary!.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initPaymentMethod();\n      handlePrimaryButton();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCustomerViewPaymentMethod.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/customers/view/payment-method.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/apps/customers/view/payment-method.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/apps/customers/view/payment-method.js ***!
  \********************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/apps/customers/view/payment-method.js\": (\n    /*!*******************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/apps/customers/view/payment-method.js ***!\n      \\*******************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomAppsCustomersViewPaymentMethodJs() {\n      eval(\" // Class definition\\n\\nvar KTCustomerViewPaymentMethod = function () {\\n  // Private functions\\n  var initPaymentMethod = function initPaymentMethod() {\\n    // Define variables\\n    var table = document.getElementById('kt_customer_view_payment_method');\\n    var tableRows = table.querySelectorAll('[ data-kt-customer-payment-method=\\\"row\\\"]');\\n    tableRows.forEach(function (row) {\\n      // Select delete button\\n      var deleteButton = row.querySelector('[data-kt-customer-payment-method=\\\"delete\\\"]'); // Delete button action\\n\\n      deleteButton.addEventListener('click', function (e) {\\n        e.preventDefault(); // Popup confirmation\\n\\n        Swal.fire({\\n          text: \\\"Are you sure you would like to delete this card?\\\",\\n          icon: \\\"warning\\\",\\n          showCancelButton: true,\\n          buttonsStyling: false,\\n          confirmButtonText: \\\"Yes, delete it!\\\",\\n          cancelButtonText: \\\"No, return\\\",\\n          customClass: {\\n            confirmButton: \\\"btn btn-primary\\\",\\n            cancelButton: \\\"btn btn-active-light\\\"\\n          }\\n        }).then(function (result) {\\n          if (result.value) {\\n            row.remove();\\n            modal.hide(); // Hide modal\\t\\t\\t\\t\\n          } else if (result.dismiss === 'cancel') {\\n            Swal.fire({\\n              text: \\\"Your card was not deleted!.\\\",\\n              icon: \\\"error\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn btn-primary\\\"\\n              }\\n            });\\n          }\\n        });\\n      });\\n    });\\n  }; // Handle set as primary button\\n\\n\\n  var handlePrimaryButton = function handlePrimaryButton() {\\n    // Define variable\\n    var button = document.querySelector('[data-kt-payment-mehtod-action=\\\"set_as_primary\\\"]');\\n    button.addEventListener('click', function (e) {\\n      e.preventDefault(); // Popup confirmation\\n\\n      Swal.fire({\\n        text: \\\"Are you sure you would like to set this card as primary?\\\",\\n        icon: \\\"warning\\\",\\n        showCancelButton: true,\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Yes, set it!\\\",\\n        cancelButtonText: \\\"No, return\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-primary\\\",\\n          cancelButton: \\\"btn btn-active-light\\\"\\n        }\\n      }).then(function (result) {\\n        if (result.value) {\\n          Swal.fire({\\n            text: \\\"Your card was set to primary!.\\\",\\n            icon: \\\"success\\\",\\n            buttonsStyling: false,\\n            confirmButtonText: \\\"Ok, got it!\\\",\\n            customClass: {\\n              confirmButton: \\\"btn btn-primary\\\"\\n            }\\n          });\\n        } else if (result.dismiss === 'cancel') {\\n          Swal.fire({\\n            text: \\\"Your card was not set to primary!.\\\",\\n            icon: \\\"error\\\",\\n            buttonsStyling: false,\\n            confirmButtonText: \\\"Ok, got it!\\\",\\n            customClass: {\\n              confirmButton: \\\"btn btn-primary\\\"\\n            }\\n          });\\n        }\\n      });\\n    });\\n  }; // Public methods\\n\\n\\n  return {\\n    init: function init() {\\n      initPaymentMethod();\\n      handlePrimaryButton();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTCustomerViewPaymentMethod.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/customers/view/payment-method.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/apps/customers/view/payment-method.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/apps/customers/view/payment-method.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/customers/view/payment-method.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/apps/customers/view/payment-method.js"]();
/******/ 	
/******/ })()
;