/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/utilities/modals/new-address.js":
/*!*************************************************************************!*\
  !*** ./resources/assets/core/js/custom/utilities/modals/new-address.js ***!
  \*************************************************************************/
/***/ (() => {

"use strict";
eval("\n\n// Class definition\nvar KTModalNewAddress = function () {\n  var submitButton;\n  var cancelButton;\n  var validator;\n  var form;\n  var modal;\n  var modalEl;\n\n  // Init form inputs\n  var initForm = function initForm() {\n    // Team assign. For more info, plase visit the official plugin site: https://select2.org/\n    $(form.querySelector('[name=\"country\"]')).select2().on('change', function () {\n      // Revalidate the field when an option is chosen\n      validator.revalidateField('country');\n    });\n  };\n\n  // Handle form validation and submittion\n  var handleForm = function handleForm() {\n    // Stepper custom navigation\n\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    validator = FormValidation.formValidation(form, {\n      fields: {\n        'first-name': {\n          validators: {\n            notEmpty: {\n              message: 'First name is required'\n            }\n          }\n        },\n        'last-name': {\n          validators: {\n            notEmpty: {\n              message: 'Last name is required'\n            }\n          }\n        },\n        'country': {\n          validators: {\n            notEmpty: {\n              message: 'Country is required'\n            }\n          }\n        },\n        'address1': {\n          validators: {\n            notEmpty: {\n              message: 'Address 1 is required'\n            }\n          }\n        },\n        'address2': {\n          validators: {\n            notEmpty: {\n              message: 'Address 2 is required'\n            }\n          }\n        },\n        'city': {\n          validators: {\n            notEmpty: {\n              message: 'City is required'\n            }\n          }\n        },\n        'state': {\n          validators: {\n            notEmpty: {\n              message: 'State is required'\n            }\n          }\n        },\n        'postcode': {\n          validators: {\n            notEmpty: {\n              message: 'Postcode is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    });\n\n    // Action buttons\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n\n      // Validate form before submit\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Disable button to avoid multiple click \n            submitButton.disabled = true;\n\n            // Simulate ajax process\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator');\n\n              // Enable button\n              submitButton.disabled = false;\n\n              // Show success message.  For more info check the plugin's official documentation: https://sweetalert2.github.io/\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  modal.hide();\n                }\n              });\n\n              //form.submit(); // Submit form\n            }, 2000);\n          } else {\n            // Show error message.\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    });\n    cancelButton.addEventListener('click', function (e) {\n      e.preventDefault();\n      Swal.fire({\n        text: \"Are you sure you would like to cancel?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, cancel it!\",\n        cancelButtonText: \"No, return\",\n        customClass: {\n          confirmButton: \"btn btn-primary\",\n          cancelButton: \"btn btn-active-light\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          form.reset(); // Reset form\t\n          modal.hide(); // Hide modal\t\t\t\t\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Your form has not been cancelled!.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  };\n  return {\n    // Public functions\n    init: function init() {\n      // Elements\n      modalEl = document.querySelector('#kt_modal_new_address');\n      if (!modalEl) {\n        return;\n      }\n      modal = new bootstrap.Modal(modalEl);\n      form = document.querySelector('#kt_modal_new_address_form');\n      submitButton = document.getElementById('kt_modal_new_address_submit');\n      cancelButton = document.getElementById('kt_modal_new_address_cancel');\n      initForm();\n      handleForm();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTModalNewAddress.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/utilities/modals/new-address.js\n");

/***/ }),

/***/ "./resources/assets/demo1/js/custom/utilities/modals/new-address.js":
/*!**************************************************************************!*\
  !*** ./resources/assets/demo1/js/custom/utilities/modals/new-address.js ***!
  \**************************************************************************/
/***/ (() => {

eval("/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/(function () {\n  // webpackBootstrap\n  /******/\n  \"use strict\";\n\n  /******/\n  var __webpack_modules__ = {\n    /***/\"./resources/assets/core/js/custom/utilities/modals/new-address.js\": (\n    /*!*************************************************************************!*\\\n      !*** ./resources/assets/core/js/custom/utilities/modals/new-address.js ***!\n      \\*************************************************************************/\n    /***/\n    function resourcesAssetsCoreJsCustomUtilitiesModalsNewAddressJs() {\n      eval(\" // Class definition\\n\\nvar KTModalNewAddress = function () {\\n  var submitButton;\\n  var cancelButton;\\n  var validator;\\n  var form;\\n  var modal;\\n  var modalEl; // Init form inputs\\n\\n  var initForm = function initForm() {\\n    // Team assign. For more info, plase visit the official plugin site: https://select2.org/\\n    $(form.querySelector('[name=\\\"country\\\"]')).select2().on('change', function () {\\n      // Revalidate the field when an option is chosen\\n      validator.revalidateField('country');\\n    });\\n  }; // Handle form validation and submittion\\n\\n\\n  var handleForm = function handleForm() {\\n    // Stepper custom navigation\\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\\n    validator = FormValidation.formValidation(form, {\\n      fields: {\\n        'first-name': {\\n          validators: {\\n            notEmpty: {\\n              message: 'First name is required'\\n            }\\n          }\\n        },\\n        'last-name': {\\n          validators: {\\n            notEmpty: {\\n              message: 'Last name is required'\\n            }\\n          }\\n        },\\n        'country': {\\n          validators: {\\n            notEmpty: {\\n              message: 'Country is required'\\n            }\\n          }\\n        },\\n        'address1': {\\n          validators: {\\n            notEmpty: {\\n              message: 'Address 1 is required'\\n            }\\n          }\\n        },\\n        'address2': {\\n          validators: {\\n            notEmpty: {\\n              message: 'Address 2 is required'\\n            }\\n          }\\n        },\\n        'city': {\\n          validators: {\\n            notEmpty: {\\n              message: 'City is required'\\n            }\\n          }\\n        },\\n        'state': {\\n          validators: {\\n            notEmpty: {\\n              message: 'State is required'\\n            }\\n          }\\n        },\\n        'postcode': {\\n          validators: {\\n            notEmpty: {\\n              message: 'Postcode is required'\\n            }\\n          }\\n        }\\n      },\\n      plugins: {\\n        trigger: new FormValidation.plugins.Trigger(),\\n        bootstrap: new FormValidation.plugins.Bootstrap5({\\n          rowSelector: '.fv-row',\\n          eleInvalidClass: '',\\n          eleValidClass: ''\\n        })\\n      }\\n    }); // Action buttons\\n\\n    submitButton.addEventListener('click', function (e) {\\n      e.preventDefault(); // Validate form before submit\\n\\n      if (validator) {\\n        validator.validate().then(function (status) {\\n          console.log('validated!');\\n\\n          if (status == 'Valid') {\\n            submitButton.setAttribute('data-kt-indicator', 'on'); // Disable button to avoid multiple click \\n\\n            submitButton.disabled = true; // Simulate ajax process\\n\\n            setTimeout(function () {\\n              submitButton.removeAttribute('data-kt-indicator'); // Enable button\\n\\n              submitButton.disabled = false; // Show success message.  For more info check the plugin's official documentation: https://sweetalert2.github.io/\\n\\n              Swal.fire({\\n                text: \\\"Form has been successfully submitted!\\\",\\n                icon: \\\"success\\\",\\n                buttonsStyling: false,\\n                confirmButtonText: \\\"Ok, got it!\\\",\\n                customClass: {\\n                  confirmButton: \\\"btn btn-primary\\\"\\n                }\\n              }).then(function (result) {\\n                if (result.isConfirmed) {\\n                  modal.hide();\\n                }\\n              }); //form.submit(); // Submit form\\n            }, 2000);\\n          } else {\\n            // Show error message.\\n            Swal.fire({\\n              text: \\\"Sorry, looks like there are some errors detected, please try again.\\\",\\n              icon: \\\"error\\\",\\n              buttonsStyling: false,\\n              confirmButtonText: \\\"Ok, got it!\\\",\\n              customClass: {\\n                confirmButton: \\\"btn btn-primary\\\"\\n              }\\n            });\\n          }\\n        });\\n      }\\n    });\\n    cancelButton.addEventListener('click', function (e) {\\n      e.preventDefault();\\n      Swal.fire({\\n        text: \\\"Are you sure you would like to cancel?\\\",\\n        icon: \\\"warning\\\",\\n        showCancelButton: true,\\n        buttonsStyling: false,\\n        confirmButtonText: \\\"Yes, cancel it!\\\",\\n        cancelButtonText: \\\"No, return\\\",\\n        customClass: {\\n          confirmButton: \\\"btn btn-primary\\\",\\n          cancelButton: \\\"btn btn-active-light\\\"\\n        }\\n      }).then(function (result) {\\n        if (result.value) {\\n          form.reset(); // Reset form\\t\\n\\n          modal.hide(); // Hide modal\\t\\t\\t\\t\\n        } else if (result.dismiss === 'cancel') {\\n          Swal.fire({\\n            text: \\\"Your form has not been cancelled!.\\\",\\n            icon: \\\"error\\\",\\n            buttonsStyling: false,\\n            confirmButtonText: \\\"Ok, got it!\\\",\\n            customClass: {\\n              confirmButton: \\\"btn btn-primary\\\"\\n            }\\n          });\\n        }\\n      });\\n    });\\n  };\\n\\n  return {\\n    // Public functions\\n    init: function init() {\\n      // Elements\\n      modalEl = document.querySelector('#kt_modal_new_address');\\n\\n      if (!modalEl) {\\n        return;\\n      }\\n\\n      modal = new bootstrap.Modal(modalEl);\\n      form = document.querySelector('#kt_modal_new_address_form');\\n      submitButton = document.getElementById('kt_modal_new_address_submit');\\n      cancelButton = document.getElementById('kt_modal_new_address_cancel');\\n      initForm();\\n      handleForm();\\n    }\\n  };\\n}(); // On document ready\\n\\n\\nKTUtil.onDOMContentLoaded(function () {\\n  KTModalNewAddress.init();\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/utilities/modals/new-address.js\\n\");\n\n      /***/\n    })\n\n    /******/\n  };\n  /************************************************************************/\n  /******/\n  /******/ // startup\n  /******/ // Load entry module and return exports\n  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n  /******/\n  var __webpack_exports__ = {};\n  /******/\n  __webpack_modules__[\"./resources/assets/core/js/custom/utilities/modals/new-address.js\"]();\n  /******/\n  /******/\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/utilities/modals/new-address.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/utilities/modals/new-address.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/demo1/js/custom/utilities/modals/new-address.js"]();
/******/ 	
/******/ })()
;